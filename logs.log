2025-09-21 18:36:10,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:36:10,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:36:10,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:36:10,202:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:36:13,035:INFO:PyCaret ClusteringExperiment
2025-09-21 18:36:13,035:INFO:Logging name: cluster-default-name
2025-09-21 18:36:13,042:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 18:36:13,042:INFO:version 3.3.2
2025-09-21 18:36:13,042:INFO:Initializing setup()
2025-09-21 18:36:13,042:INFO:self.USI: 7571
2025-09-21 18:36:13,042:INFO:self._variable_keys: {'X', 'gpu_n_jobs_param', 'n_jobs_param', 'gpu_param', 'memory', 'seed', 'pipeline', '_ml_usecase', 'data', 'log_plots_param', 'exp_name_log', 'exp_id', 'idx', 'USI', '_available_plots', 'html_param', 'logging_param'}
2025-09-21 18:36:13,042:INFO:Checking environment
2025-09-21 18:36:13,042:INFO:python_version: 3.10.18
2025-09-21 18:36:13,042:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 18:36:13,043:INFO:machine: AMD64
2025-09-21 18:36:13,043:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 18:36:13,043:INFO:Memory: svmem(total=16486035456, available=7410978816, percent=55.0, used=9075056640, free=7410978816)
2025-09-21 18:36:13,043:INFO:Physical Core: 8
2025-09-21 18:36:13,043:INFO:Logical Core: 16
2025-09-21 18:36:13,043:INFO:Checking libraries
2025-09-21 18:36:13,043:INFO:System:
2025-09-21 18:36:13,043:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 18:36:13,043:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 18:36:13,043:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 18:36:13,043:INFO:PyCaret required dependencies:
2025-09-21 18:36:14,612:INFO:                 pip: 25.2
2025-09-21 18:36:14,613:INFO:          setuptools: 78.1.1
2025-09-21 18:36:14,613:INFO:             pycaret: 3.3.2
2025-09-21 18:36:14,613:INFO:             IPython: 8.37.0
2025-09-21 18:36:14,613:INFO:          ipywidgets: 8.1.7
2025-09-21 18:36:14,613:INFO:                tqdm: 4.67.1
2025-09-21 18:36:14,613:INFO:               numpy: 1.26.4
2025-09-21 18:36:14,613:INFO:              pandas: 2.1.4
2025-09-21 18:36:14,613:INFO:              jinja2: 3.1.6
2025-09-21 18:36:14,613:INFO:               scipy: 1.11.4
2025-09-21 18:36:14,613:INFO:              joblib: 1.3.2
2025-09-21 18:36:14,613:INFO:             sklearn: 1.4.2
2025-09-21 18:36:14,613:INFO:                pyod: 2.0.5
2025-09-21 18:36:14,614:INFO:            imblearn: 0.14.0
2025-09-21 18:36:14,614:INFO:   category_encoders: 2.7.0
2025-09-21 18:36:14,614:INFO:            lightgbm: 4.6.0
2025-09-21 18:36:14,614:INFO:               numba: 0.61.0
2025-09-21 18:36:14,614:INFO:            requests: 2.32.5
2025-09-21 18:36:14,614:INFO:          matplotlib: 3.7.5
2025-09-21 18:36:14,614:INFO:          scikitplot: 0.3.7
2025-09-21 18:36:14,614:INFO:         yellowbrick: 1.5
2025-09-21 18:36:14,614:INFO:              plotly: 5.24.1
2025-09-21 18:36:14,614:INFO:    plotly-resampler: Not installed
2025-09-21 18:36:14,614:INFO:             kaleido: 1.1.0
2025-09-21 18:36:14,615:INFO:           schemdraw: 0.15
2025-09-21 18:36:14,615:INFO:         statsmodels: 0.14.5
2025-09-21 18:36:14,615:INFO:              sktime: 0.26.0
2025-09-21 18:36:14,615:INFO:               tbats: 1.1.3
2025-09-21 18:36:14,615:INFO:            pmdarima: 2.0.4
2025-09-21 18:36:14,615:INFO:              psutil: 7.1.0
2025-09-21 18:36:14,615:INFO:          markupsafe: 3.0.2
2025-09-21 18:36:14,615:INFO:             pickle5: Not installed
2025-09-21 18:36:14,615:INFO:         cloudpickle: 3.1.1
2025-09-21 18:36:14,615:INFO:         deprecation: 2.1.0
2025-09-21 18:36:14,615:INFO:              xxhash: 3.5.0
2025-09-21 18:36:14,616:INFO:           wurlitzer: Not installed
2025-09-21 18:36:14,616:INFO:PyCaret optional dependencies:
2025-09-21 18:36:22,428:INFO:                shap: 0.44.1
2025-09-21 18:36:22,428:INFO:           interpret: 0.7.2
2025-09-21 18:36:22,428:INFO:                umap: 0.5.7
2025-09-21 18:36:22,428:INFO:     ydata_profiling: 4.16.1
2025-09-21 18:36:22,428:INFO:  explainerdashboard: 0.5.1
2025-09-21 18:36:22,428:INFO:             autoviz: Not installed
2025-09-21 18:36:22,428:INFO:           fairlearn: 0.7.0
2025-09-21 18:36:22,428:INFO:          deepchecks: Not installed
2025-09-21 18:36:22,428:INFO:             xgboost: 3.0.5
2025-09-21 18:36:22,428:INFO:            catboost: 1.2.8
2025-09-21 18:36:22,428:INFO:              kmodes: 0.12.2
2025-09-21 18:36:22,428:INFO:             mlxtend: 0.23.4
2025-09-21 18:36:22,429:INFO:       statsforecast: 1.5.0
2025-09-21 18:36:22,429:INFO:        tune_sklearn: Not installed
2025-09-21 18:36:22,429:INFO:                 ray: Not installed
2025-09-21 18:36:22,429:INFO:            hyperopt: 0.2.7
2025-09-21 18:36:22,429:INFO:              optuna: 4.5.0
2025-09-21 18:36:22,429:INFO:               skopt: 0.10.2
2025-09-21 18:36:22,429:INFO:              mlflow: 3.4.0
2025-09-21 18:36:22,429:INFO:              gradio: 5.46.1
2025-09-21 18:36:22,429:INFO:             fastapi: 0.117.1
2025-09-21 18:36:22,429:INFO:             uvicorn: 0.36.0
2025-09-21 18:36:22,429:INFO:              m2cgen: 0.10.0
2025-09-21 18:36:22,429:INFO:           evidently: 0.4.40
2025-09-21 18:36:22,429:INFO:               fugue: 0.8.7
2025-09-21 18:36:22,429:INFO:           streamlit: Not installed
2025-09-21 18:36:22,429:INFO:             prophet: Not installed
2025-09-21 18:36:22,429:INFO:None
2025-09-21 18:36:22,429:INFO:Set up data.
2025-09-21 18:36:22,482:INFO:Set up index.
2025-09-21 18:36:22,482:INFO:Assigning column types.
2025-09-21 18:36:22,492:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 18:36:22,493:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:36:22,493:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:36:22,502:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:36:22,502:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:36:22,502:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 18:36:22,502:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:36:22,503:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:36:22,508:INFO:Preparing preprocessing pipeline...
2025-09-21 18:36:22,508:INFO:Set up simple imputation.
2025-09-21 18:36:22,519:INFO:Set up encoding of ordinal features.
2025-09-21 18:36:22,523:INFO:Set up encoding of categorical features.
2025-09-21 18:36:22,523:INFO:Set up feature normalization.
2025-09-21 18:36:23,659:INFO:Finished creating preprocessing pipeline.
2025-09-21 18:36:23,699:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'Duración_estadía',
                                             'Anticipación_reserva_días',
                                             'Calificación'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Género', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'Ocupación',
                                             'Reputación_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'Ocupación',
                                                                    'Reputación_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 18:36:23,699:INFO:Creating final display dataframe.
2025-09-21 18:36:24,294:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50000, 24)
2     Transformed data shape           (50000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  7571
2025-09-21 18:36:24,310:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:36:24,311:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:36:24,311:INFO:setup() successfully completed in 11.28s...............
2025-09-21 18:38:38,129:INFO:PyCaret ClusteringExperiment
2025-09-21 18:38:38,129:INFO:Logging name: cluster-default-name
2025-09-21 18:38:38,129:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 18:38:38,129:INFO:version 3.3.2
2025-09-21 18:38:38,129:INFO:Initializing setup()
2025-09-21 18:38:38,129:INFO:self.USI: d5aa
2025-09-21 18:38:38,130:INFO:self._variable_keys: {'X', 'gpu_n_jobs_param', 'n_jobs_param', 'gpu_param', 'memory', 'seed', 'pipeline', '_ml_usecase', 'data', 'log_plots_param', 'exp_name_log', 'exp_id', 'idx', 'USI', '_available_plots', 'html_param', 'logging_param'}
2025-09-21 18:38:38,130:INFO:Checking environment
2025-09-21 18:38:38,130:INFO:python_version: 3.10.18
2025-09-21 18:38:38,130:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 18:38:38,130:INFO:machine: AMD64
2025-09-21 18:38:38,130:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 18:38:38,131:INFO:Memory: svmem(total=16486035456, available=7207616512, percent=56.3, used=9278418944, free=7207616512)
2025-09-21 18:38:38,131:INFO:Physical Core: 8
2025-09-21 18:38:38,131:INFO:Logical Core: 16
2025-09-21 18:38:38,132:INFO:Checking libraries
2025-09-21 18:38:38,132:INFO:System:
2025-09-21 18:38:38,132:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 18:38:38,132:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 18:38:38,132:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 18:38:38,132:INFO:PyCaret required dependencies:
2025-09-21 18:38:38,132:INFO:                 pip: 25.2
2025-09-21 18:38:38,133:INFO:          setuptools: 78.1.1
2025-09-21 18:38:38,133:INFO:             pycaret: 3.3.2
2025-09-21 18:38:38,133:INFO:             IPython: 8.37.0
2025-09-21 18:38:38,133:INFO:          ipywidgets: 8.1.7
2025-09-21 18:38:38,133:INFO:                tqdm: 4.67.1
2025-09-21 18:38:38,133:INFO:               numpy: 1.26.4
2025-09-21 18:38:38,133:INFO:              pandas: 2.1.4
2025-09-21 18:38:38,133:INFO:              jinja2: 3.1.6
2025-09-21 18:38:38,134:INFO:               scipy: 1.11.4
2025-09-21 18:38:38,134:INFO:              joblib: 1.3.2
2025-09-21 18:38:38,134:INFO:             sklearn: 1.4.2
2025-09-21 18:38:38,134:INFO:                pyod: 2.0.5
2025-09-21 18:38:38,134:INFO:            imblearn: 0.14.0
2025-09-21 18:38:38,134:INFO:   category_encoders: 2.7.0
2025-09-21 18:38:38,134:INFO:            lightgbm: 4.6.0
2025-09-21 18:38:38,134:INFO:               numba: 0.61.0
2025-09-21 18:38:38,134:INFO:            requests: 2.32.5
2025-09-21 18:38:38,134:INFO:          matplotlib: 3.7.5
2025-09-21 18:38:38,134:INFO:          scikitplot: 0.3.7
2025-09-21 18:38:38,134:INFO:         yellowbrick: 1.5
2025-09-21 18:38:38,134:INFO:              plotly: 5.24.1
2025-09-21 18:38:38,135:INFO:    plotly-resampler: Not installed
2025-09-21 18:38:38,135:INFO:             kaleido: 1.1.0
2025-09-21 18:38:38,135:INFO:           schemdraw: 0.15
2025-09-21 18:38:38,135:INFO:         statsmodels: 0.14.5
2025-09-21 18:38:38,135:INFO:              sktime: 0.26.0
2025-09-21 18:38:38,135:INFO:               tbats: 1.1.3
2025-09-21 18:38:38,135:INFO:            pmdarima: 2.0.4
2025-09-21 18:38:38,135:INFO:              psutil: 7.1.0
2025-09-21 18:38:38,135:INFO:          markupsafe: 3.0.2
2025-09-21 18:38:38,135:INFO:             pickle5: Not installed
2025-09-21 18:38:38,135:INFO:         cloudpickle: 3.1.1
2025-09-21 18:38:38,135:INFO:         deprecation: 2.1.0
2025-09-21 18:38:38,136:INFO:              xxhash: 3.5.0
2025-09-21 18:38:38,136:INFO:           wurlitzer: Not installed
2025-09-21 18:38:38,136:INFO:PyCaret optional dependencies:
2025-09-21 18:38:38,136:INFO:                shap: 0.44.1
2025-09-21 18:38:38,136:INFO:           interpret: 0.7.2
2025-09-21 18:38:38,137:INFO:                umap: 0.5.7
2025-09-21 18:38:38,137:INFO:     ydata_profiling: 4.16.1
2025-09-21 18:38:38,138:INFO:  explainerdashboard: 0.5.1
2025-09-21 18:38:38,138:INFO:             autoviz: Not installed
2025-09-21 18:38:38,138:INFO:           fairlearn: 0.7.0
2025-09-21 18:38:38,138:INFO:          deepchecks: Not installed
2025-09-21 18:38:38,138:INFO:             xgboost: 3.0.5
2025-09-21 18:38:38,138:INFO:            catboost: 1.2.8
2025-09-21 18:38:38,139:INFO:              kmodes: 0.12.2
2025-09-21 18:38:38,139:INFO:             mlxtend: 0.23.4
2025-09-21 18:38:38,139:INFO:       statsforecast: 1.5.0
2025-09-21 18:38:38,139:INFO:        tune_sklearn: Not installed
2025-09-21 18:38:38,139:INFO:                 ray: Not installed
2025-09-21 18:38:38,139:INFO:            hyperopt: 0.2.7
2025-09-21 18:38:38,139:INFO:              optuna: 4.5.0
2025-09-21 18:38:38,139:INFO:               skopt: 0.10.2
2025-09-21 18:38:38,139:INFO:              mlflow: 3.4.0
2025-09-21 18:38:38,140:INFO:              gradio: 5.46.1
2025-09-21 18:38:38,140:INFO:             fastapi: 0.117.1
2025-09-21 18:38:38,140:INFO:             uvicorn: 0.36.0
2025-09-21 18:38:38,140:INFO:              m2cgen: 0.10.0
2025-09-21 18:38:38,140:INFO:           evidently: 0.4.40
2025-09-21 18:38:38,140:INFO:               fugue: 0.8.7
2025-09-21 18:38:38,140:INFO:           streamlit: Not installed
2025-09-21 18:38:38,140:INFO:             prophet: Not installed
2025-09-21 18:38:38,140:INFO:None
2025-09-21 18:38:38,141:INFO:Set up data.
2025-09-21 18:38:38,198:INFO:Set up index.
2025-09-21 18:38:38,199:INFO:Assigning column types.
2025-09-21 18:38:38,208:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 18:38:38,209:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:38:38,209:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:38:38,209:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:38:38,209:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:38:38,210:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 18:38:38,210:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:38:38,210:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:38:38,211:INFO:Preparing preprocessing pipeline...
2025-09-21 18:38:38,211:INFO:Set up simple imputation.
2025-09-21 18:38:38,221:INFO:Set up encoding of ordinal features.
2025-09-21 18:38:38,225:INFO:Set up encoding of categorical features.
2025-09-21 18:38:38,225:INFO:Set up feature normalization.
2025-09-21 18:38:39,039:INFO:Finished creating preprocessing pipeline.
2025-09-21 18:38:39,072:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'Duración_estadía',
                                             'Anticipación_reserva_días',
                                             'Calificación'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Género', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'Ocupación',
                                             'Reputación_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'Ocupación',
                                                                    'Reputación_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 18:38:39,072:INFO:Creating final display dataframe.
2025-09-21 18:38:39,487:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50000, 24)
2     Transformed data shape           (50000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  d5aa
2025-09-21 18:38:39,499:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:38:39,500:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:38:39,501:INFO:setup() successfully completed in 1.38s...............
2025-09-21 18:40:27,243:INFO:PyCaret ClusteringExperiment
2025-09-21 18:40:27,243:INFO:Logging name: cluster-default-name
2025-09-21 18:40:27,243:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 18:40:27,243:INFO:version 3.3.2
2025-09-21 18:40:27,243:INFO:Initializing setup()
2025-09-21 18:40:27,244:INFO:self.USI: a590
2025-09-21 18:40:27,244:INFO:self._variable_keys: {'X', 'gpu_n_jobs_param', 'n_jobs_param', 'gpu_param', 'memory', 'seed', 'pipeline', '_ml_usecase', 'data', 'log_plots_param', 'exp_name_log', 'exp_id', 'idx', 'USI', '_available_plots', 'html_param', 'logging_param'}
2025-09-21 18:40:27,244:INFO:Checking environment
2025-09-21 18:40:27,244:INFO:python_version: 3.10.18
2025-09-21 18:40:27,244:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 18:40:27,244:INFO:machine: AMD64
2025-09-21 18:40:27,244:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 18:40:27,246:INFO:Memory: svmem(total=16486035456, available=7220867072, percent=56.2, used=9265168384, free=7220867072)
2025-09-21 18:40:27,246:INFO:Physical Core: 8
2025-09-21 18:40:27,246:INFO:Logical Core: 16
2025-09-21 18:40:27,246:INFO:Checking libraries
2025-09-21 18:40:27,246:INFO:System:
2025-09-21 18:40:27,246:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 18:40:27,246:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 18:40:27,246:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 18:40:27,246:INFO:PyCaret required dependencies:
2025-09-21 18:40:27,246:INFO:                 pip: 25.2
2025-09-21 18:40:27,246:INFO:          setuptools: 78.1.1
2025-09-21 18:40:27,246:INFO:             pycaret: 3.3.2
2025-09-21 18:40:27,246:INFO:             IPython: 8.37.0
2025-09-21 18:40:27,246:INFO:          ipywidgets: 8.1.7
2025-09-21 18:40:27,246:INFO:                tqdm: 4.67.1
2025-09-21 18:40:27,246:INFO:               numpy: 1.26.4
2025-09-21 18:40:27,246:INFO:              pandas: 2.1.4
2025-09-21 18:40:27,246:INFO:              jinja2: 3.1.6
2025-09-21 18:40:27,246:INFO:               scipy: 1.11.4
2025-09-21 18:40:27,246:INFO:              joblib: 1.3.2
2025-09-21 18:40:27,246:INFO:             sklearn: 1.4.2
2025-09-21 18:40:27,246:INFO:                pyod: 2.0.5
2025-09-21 18:40:27,246:INFO:            imblearn: 0.14.0
2025-09-21 18:40:27,246:INFO:   category_encoders: 2.7.0
2025-09-21 18:40:27,246:INFO:            lightgbm: 4.6.0
2025-09-21 18:40:27,247:INFO:               numba: 0.61.0
2025-09-21 18:40:27,247:INFO:            requests: 2.32.5
2025-09-21 18:40:27,247:INFO:          matplotlib: 3.7.5
2025-09-21 18:40:27,247:INFO:          scikitplot: 0.3.7
2025-09-21 18:40:27,247:INFO:         yellowbrick: 1.5
2025-09-21 18:40:27,247:INFO:              plotly: 5.24.1
2025-09-21 18:40:27,247:INFO:    plotly-resampler: Not installed
2025-09-21 18:40:27,247:INFO:             kaleido: 1.1.0
2025-09-21 18:40:27,247:INFO:           schemdraw: 0.15
2025-09-21 18:40:27,247:INFO:         statsmodels: 0.14.5
2025-09-21 18:40:27,247:INFO:              sktime: 0.26.0
2025-09-21 18:40:27,247:INFO:               tbats: 1.1.3
2025-09-21 18:40:27,247:INFO:            pmdarima: 2.0.4
2025-09-21 18:40:27,247:INFO:              psutil: 7.1.0
2025-09-21 18:40:27,247:INFO:          markupsafe: 3.0.2
2025-09-21 18:40:27,248:INFO:             pickle5: Not installed
2025-09-21 18:40:27,248:INFO:         cloudpickle: 3.1.1
2025-09-21 18:40:27,248:INFO:         deprecation: 2.1.0
2025-09-21 18:40:27,248:INFO:              xxhash: 3.5.0
2025-09-21 18:40:27,248:INFO:           wurlitzer: Not installed
2025-09-21 18:40:27,248:INFO:PyCaret optional dependencies:
2025-09-21 18:40:27,248:INFO:                shap: 0.44.1
2025-09-21 18:40:27,248:INFO:           interpret: 0.7.2
2025-09-21 18:40:27,248:INFO:                umap: 0.5.7
2025-09-21 18:40:27,248:INFO:     ydata_profiling: 4.16.1
2025-09-21 18:40:27,248:INFO:  explainerdashboard: 0.5.1
2025-09-21 18:40:27,248:INFO:             autoviz: Not installed
2025-09-21 18:40:27,249:INFO:           fairlearn: 0.7.0
2025-09-21 18:40:27,249:INFO:          deepchecks: Not installed
2025-09-21 18:40:27,249:INFO:             xgboost: 3.0.5
2025-09-21 18:40:27,249:INFO:            catboost: 1.2.8
2025-09-21 18:40:27,249:INFO:              kmodes: 0.12.2
2025-09-21 18:40:27,249:INFO:             mlxtend: 0.23.4
2025-09-21 18:40:27,249:INFO:       statsforecast: 1.5.0
2025-09-21 18:40:27,249:INFO:        tune_sklearn: Not installed
2025-09-21 18:40:27,249:INFO:                 ray: Not installed
2025-09-21 18:40:27,249:INFO:            hyperopt: 0.2.7
2025-09-21 18:40:27,249:INFO:              optuna: 4.5.0
2025-09-21 18:40:27,249:INFO:               skopt: 0.10.2
2025-09-21 18:40:27,249:INFO:              mlflow: 3.4.0
2025-09-21 18:40:27,249:INFO:              gradio: 5.46.1
2025-09-21 18:40:27,249:INFO:             fastapi: 0.117.1
2025-09-21 18:40:27,249:INFO:             uvicorn: 0.36.0
2025-09-21 18:40:27,250:INFO:              m2cgen: 0.10.0
2025-09-21 18:40:27,250:INFO:           evidently: 0.4.40
2025-09-21 18:40:27,250:INFO:               fugue: 0.8.7
2025-09-21 18:40:27,250:INFO:           streamlit: Not installed
2025-09-21 18:40:27,250:INFO:             prophet: Not installed
2025-09-21 18:40:27,250:INFO:None
2025-09-21 18:40:27,250:INFO:Set up data.
2025-09-21 18:40:27,301:INFO:Set up index.
2025-09-21 18:40:27,301:INFO:Assigning column types.
2025-09-21 18:40:27,313:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 18:40:27,313:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:40:27,313:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:40:27,314:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:40:27,314:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:40:27,314:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 18:40:27,314:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:40:27,314:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:40:27,315:INFO:Preparing preprocessing pipeline...
2025-09-21 18:40:27,315:INFO:Set up simple imputation.
2025-09-21 18:40:27,327:INFO:Set up encoding of ordinal features.
2025-09-21 18:40:27,331:INFO:Set up encoding of categorical features.
2025-09-21 18:40:27,331:INFO:Set up feature normalization.
2025-09-21 18:40:27,762:INFO:Finished creating preprocessing pipeline.
2025-09-21 18:40:27,792:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'Duración_estadía',
                                             'Anticipación_reserva_días',
                                             'Calificación'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Género', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'Ocupación',
                                             'Reputación_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'Ocupación',
                                                                    'Reputación_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 18:40:27,792:INFO:Creating final display dataframe.
2025-09-21 18:40:27,874:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50000, 24)
2     Transformed data shape           (50000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  a590
2025-09-21 18:40:27,884:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:40:27,884:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:40:27,885:INFO:setup() successfully completed in 0.65s...............
2025-09-21 18:42:59,618:INFO:PyCaret ClusteringExperiment
2025-09-21 18:42:59,618:INFO:Logging name: cluster-default-name
2025-09-21 18:42:59,618:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 18:42:59,618:INFO:version 3.3.2
2025-09-21 18:42:59,618:INFO:Initializing setup()
2025-09-21 18:42:59,618:INFO:self.USI: 527e
2025-09-21 18:42:59,618:INFO:self._variable_keys: {'X', 'gpu_n_jobs_param', 'n_jobs_param', 'gpu_param', 'memory', 'seed', 'pipeline', '_ml_usecase', 'data', 'log_plots_param', 'exp_name_log', 'exp_id', 'idx', 'USI', '_available_plots', 'html_param', 'logging_param'}
2025-09-21 18:42:59,618:INFO:Checking environment
2025-09-21 18:42:59,618:INFO:python_version: 3.10.18
2025-09-21 18:42:59,618:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 18:42:59,618:INFO:machine: AMD64
2025-09-21 18:42:59,618:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 18:42:59,620:INFO:Memory: svmem(total=16486035456, available=7326887936, percent=55.6, used=9159147520, free=7326887936)
2025-09-21 18:42:59,620:INFO:Physical Core: 8
2025-09-21 18:42:59,620:INFO:Logical Core: 16
2025-09-21 18:42:59,620:INFO:Checking libraries
2025-09-21 18:42:59,620:INFO:System:
2025-09-21 18:42:59,620:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 18:42:59,620:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 18:42:59,620:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 18:42:59,620:INFO:PyCaret required dependencies:
2025-09-21 18:42:59,620:INFO:                 pip: 25.2
2025-09-21 18:42:59,620:INFO:          setuptools: 78.1.1
2025-09-21 18:42:59,620:INFO:             pycaret: 3.3.2
2025-09-21 18:42:59,620:INFO:             IPython: 8.37.0
2025-09-21 18:42:59,620:INFO:          ipywidgets: 8.1.7
2025-09-21 18:42:59,620:INFO:                tqdm: 4.67.1
2025-09-21 18:42:59,620:INFO:               numpy: 1.26.4
2025-09-21 18:42:59,620:INFO:              pandas: 2.1.4
2025-09-21 18:42:59,620:INFO:              jinja2: 3.1.6
2025-09-21 18:42:59,620:INFO:               scipy: 1.11.4
2025-09-21 18:42:59,620:INFO:              joblib: 1.3.2
2025-09-21 18:42:59,620:INFO:             sklearn: 1.4.2
2025-09-21 18:42:59,620:INFO:                pyod: 2.0.5
2025-09-21 18:42:59,620:INFO:            imblearn: 0.14.0
2025-09-21 18:42:59,620:INFO:   category_encoders: 2.7.0
2025-09-21 18:42:59,620:INFO:            lightgbm: 4.6.0
2025-09-21 18:42:59,620:INFO:               numba: 0.61.0
2025-09-21 18:42:59,620:INFO:            requests: 2.32.5
2025-09-21 18:42:59,620:INFO:          matplotlib: 3.7.5
2025-09-21 18:42:59,620:INFO:          scikitplot: 0.3.7
2025-09-21 18:42:59,620:INFO:         yellowbrick: 1.5
2025-09-21 18:42:59,620:INFO:              plotly: 5.24.1
2025-09-21 18:42:59,620:INFO:    plotly-resampler: Not installed
2025-09-21 18:42:59,620:INFO:             kaleido: 1.1.0
2025-09-21 18:42:59,620:INFO:           schemdraw: 0.15
2025-09-21 18:42:59,620:INFO:         statsmodels: 0.14.5
2025-09-21 18:42:59,620:INFO:              sktime: 0.26.0
2025-09-21 18:42:59,620:INFO:               tbats: 1.1.3
2025-09-21 18:42:59,620:INFO:            pmdarima: 2.0.4
2025-09-21 18:42:59,620:INFO:              psutil: 7.1.0
2025-09-21 18:42:59,620:INFO:          markupsafe: 3.0.2
2025-09-21 18:42:59,620:INFO:             pickle5: Not installed
2025-09-21 18:42:59,620:INFO:         cloudpickle: 3.1.1
2025-09-21 18:42:59,620:INFO:         deprecation: 2.1.0
2025-09-21 18:42:59,620:INFO:              xxhash: 3.5.0
2025-09-21 18:42:59,620:INFO:           wurlitzer: Not installed
2025-09-21 18:42:59,620:INFO:PyCaret optional dependencies:
2025-09-21 18:42:59,620:INFO:                shap: 0.44.1
2025-09-21 18:42:59,620:INFO:           interpret: 0.7.2
2025-09-21 18:42:59,620:INFO:                umap: 0.5.7
2025-09-21 18:42:59,620:INFO:     ydata_profiling: 4.16.1
2025-09-21 18:42:59,620:INFO:  explainerdashboard: 0.5.1
2025-09-21 18:42:59,620:INFO:             autoviz: Not installed
2025-09-21 18:42:59,620:INFO:           fairlearn: 0.7.0
2025-09-21 18:42:59,620:INFO:          deepchecks: Not installed
2025-09-21 18:42:59,620:INFO:             xgboost: 3.0.5
2025-09-21 18:42:59,620:INFO:            catboost: 1.2.8
2025-09-21 18:42:59,620:INFO:              kmodes: 0.12.2
2025-09-21 18:42:59,620:INFO:             mlxtend: 0.23.4
2025-09-21 18:42:59,620:INFO:       statsforecast: 1.5.0
2025-09-21 18:42:59,620:INFO:        tune_sklearn: Not installed
2025-09-21 18:42:59,620:INFO:                 ray: Not installed
2025-09-21 18:42:59,620:INFO:            hyperopt: 0.2.7
2025-09-21 18:42:59,620:INFO:              optuna: 4.5.0
2025-09-21 18:42:59,620:INFO:               skopt: 0.10.2
2025-09-21 18:42:59,620:INFO:              mlflow: 3.4.0
2025-09-21 18:42:59,620:INFO:              gradio: 5.46.1
2025-09-21 18:42:59,620:INFO:             fastapi: 0.117.1
2025-09-21 18:42:59,620:INFO:             uvicorn: 0.36.0
2025-09-21 18:42:59,620:INFO:              m2cgen: 0.10.0
2025-09-21 18:42:59,620:INFO:           evidently: 0.4.40
2025-09-21 18:42:59,620:INFO:               fugue: 0.8.7
2025-09-21 18:42:59,624:INFO:           streamlit: Not installed
2025-09-21 18:42:59,624:INFO:             prophet: Not installed
2025-09-21 18:42:59,624:INFO:None
2025-09-21 18:42:59,624:INFO:Set up data.
2025-09-21 18:42:59,679:INFO:Set up index.
2025-09-21 18:42:59,679:INFO:Assigning column types.
2025-09-21 18:42:59,687:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 18:42:59,689:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:42:59,689:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:42:59,689:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:42:59,689:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:42:59,689:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 18:42:59,691:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:42:59,691:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:42:59,692:INFO:Preparing preprocessing pipeline...
2025-09-21 18:42:59,692:INFO:Set up simple imputation.
2025-09-21 18:42:59,702:INFO:Set up encoding of ordinal features.
2025-09-21 18:42:59,703:INFO:Set up encoding of categorical features.
2025-09-21 18:42:59,703:INFO:Set up feature normalization.
2025-09-21 18:43:00,151:INFO:Finished creating preprocessing pipeline.
2025-09-21 18:43:00,184:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'Duración_estadía',
                                             'Anticipación_reserva_días',
                                             'Calificación'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Género', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'Ocupación',
                                             'Reputación_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'Ocupación',
                                                                    'Reputación_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 18:43:00,184:INFO:Creating final display dataframe.
2025-09-21 18:43:00,241:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50000, 24)
2     Transformed data shape           (50000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  527e
2025-09-21 18:43:00,252:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:43:00,252:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:43:00,254:INFO:setup() successfully completed in 0.64s...............
2025-09-21 18:43:00,261:INFO:Initializing create_model()
2025-09-21 18:43:00,261:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000023D733FAC80>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 18:43:00,261:INFO:Checking exceptions
2025-09-21 18:43:00,390:INFO:Importing untrained model
2025-09-21 18:43:00,398:INFO:K-Means Clustering Imported successfully
2025-09-21 18:43:00,407:INFO:Fitting Model
2025-09-21 18:43:34,796:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 18:43:34,797:INFO:create_models() successfully completed......................................
2025-09-21 18:43:34,807:INFO:Uploading results into container
2025-09-21 18:43:34,810:INFO:Uploading model into container now
2025-09-21 18:43:34,831:INFO:_master_model_container: 1
2025-09-21 18:43:34,831:INFO:_display_container: 2
2025-09-21 18:43:34,832:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 18:43:34,832:INFO:create_model() successfully completed......................................
2025-09-21 18:43:35,026:INFO:Initializing create_model()
2025-09-21 18:43:35,026:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000023D733FAC80>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 18:43:35,026:INFO:Checking exceptions
2025-09-21 18:43:35,138:INFO:Importing untrained model
2025-09-21 18:43:35,146:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 18:43:35,158:INFO:Fitting Model
2025-09-21 18:43:38,011:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-21 18:43:38,013:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-21 18:43:38,022:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-21 18:43:38,022:INFO:DBSCAN(n_jobs=-1)
2025-09-21 18:43:38,022:INFO:create_models() successfully completed......................................
2025-09-21 18:43:38,031:INFO:Uploading results into container
2025-09-21 18:43:38,031:INFO:Uploading model into container now
2025-09-21 18:43:38,044:INFO:_master_model_container: 2
2025-09-21 18:43:38,044:INFO:_display_container: 3
2025-09-21 18:43:38,044:INFO:DBSCAN(n_jobs=-1)
2025-09-21 18:43:38,044:INFO:create_model() successfully completed......................................
2025-09-21 18:43:38,246:INFO:Initializing create_model()
2025-09-21 18:43:38,248:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000023D733FAC80>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 18:43:38,248:INFO:Checking exceptions
2025-09-21 18:43:38,340:INFO:Importing untrained model
2025-09-21 18:43:38,348:INFO:Agglomerative Clustering Imported successfully
2025-09-21 18:43:38,362:INFO:Fitting Model
2025-09-21 18:53:19,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:53:19,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:53:19,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:53:19,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-21 18:53:23,602:INFO:PyCaret ClusteringExperiment
2025-09-21 18:53:23,608:INFO:Logging name: cluster-default-name
2025-09-21 18:53:23,608:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 18:53:23,608:INFO:version 3.3.2
2025-09-21 18:53:23,608:INFO:Initializing setup()
2025-09-21 18:53:23,608:INFO:self.USI: 05a0
2025-09-21 18:53:23,608:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 18:53:23,608:INFO:Checking environment
2025-09-21 18:53:23,608:INFO:python_version: 3.10.18
2025-09-21 18:53:23,608:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 18:53:23,608:INFO:machine: AMD64
2025-09-21 18:53:23,608:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 18:53:23,608:INFO:Memory: svmem(total=16486035456, available=10388676608, percent=37.0, used=6097358848, free=10388676608)
2025-09-21 18:53:23,608:INFO:Physical Core: 8
2025-09-21 18:53:23,608:INFO:Logical Core: 16
2025-09-21 18:53:23,608:INFO:Checking libraries
2025-09-21 18:53:23,608:INFO:System:
2025-09-21 18:53:23,608:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 18:53:23,608:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 18:53:23,608:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 18:53:23,608:INFO:PyCaret required dependencies:
2025-09-21 18:53:25,937:INFO:                 pip: 25.2
2025-09-21 18:53:25,937:INFO:          setuptools: 78.1.1
2025-09-21 18:53:25,937:INFO:             pycaret: 3.3.2
2025-09-21 18:53:25,937:INFO:             IPython: 8.37.0
2025-09-21 18:53:25,937:INFO:          ipywidgets: 8.1.7
2025-09-21 18:53:25,937:INFO:                tqdm: 4.67.1
2025-09-21 18:53:25,937:INFO:               numpy: 1.26.4
2025-09-21 18:53:25,937:INFO:              pandas: 2.1.4
2025-09-21 18:53:25,937:INFO:              jinja2: 3.1.6
2025-09-21 18:53:25,937:INFO:               scipy: 1.11.4
2025-09-21 18:53:25,937:INFO:              joblib: 1.3.2
2025-09-21 18:53:25,937:INFO:             sklearn: 1.4.2
2025-09-21 18:53:25,937:INFO:                pyod: 2.0.5
2025-09-21 18:53:25,937:INFO:            imblearn: 0.14.0
2025-09-21 18:53:25,937:INFO:   category_encoders: 2.7.0
2025-09-21 18:53:25,937:INFO:            lightgbm: 4.6.0
2025-09-21 18:53:25,937:INFO:               numba: 0.61.0
2025-09-21 18:53:25,938:INFO:            requests: 2.32.5
2025-09-21 18:53:25,938:INFO:          matplotlib: 3.7.5
2025-09-21 18:53:25,938:INFO:          scikitplot: 0.3.7
2025-09-21 18:53:25,938:INFO:         yellowbrick: 1.5
2025-09-21 18:53:25,938:INFO:              plotly: 5.24.1
2025-09-21 18:53:25,938:INFO:    plotly-resampler: Not installed
2025-09-21 18:53:25,938:INFO:             kaleido: 1.1.0
2025-09-21 18:53:25,938:INFO:           schemdraw: 0.15
2025-09-21 18:53:25,938:INFO:         statsmodels: 0.14.5
2025-09-21 18:53:25,938:INFO:              sktime: 0.26.0
2025-09-21 18:53:25,938:INFO:               tbats: 1.1.3
2025-09-21 18:53:25,938:INFO:            pmdarima: 2.0.4
2025-09-21 18:53:25,938:INFO:              psutil: 7.1.0
2025-09-21 18:53:25,938:INFO:          markupsafe: 3.0.2
2025-09-21 18:53:25,938:INFO:             pickle5: Not installed
2025-09-21 18:53:25,938:INFO:         cloudpickle: 3.1.1
2025-09-21 18:53:25,938:INFO:         deprecation: 2.1.0
2025-09-21 18:53:25,938:INFO:              xxhash: 3.5.0
2025-09-21 18:53:25,938:INFO:           wurlitzer: Not installed
2025-09-21 18:53:25,938:INFO:PyCaret optional dependencies:
2025-09-21 18:53:36,267:INFO:                shap: 0.44.1
2025-09-21 18:53:36,267:INFO:           interpret: 0.7.2
2025-09-21 18:53:36,267:INFO:                umap: 0.5.7
2025-09-21 18:53:36,267:INFO:     ydata_profiling: 4.16.1
2025-09-21 18:53:36,267:INFO:  explainerdashboard: 0.5.1
2025-09-21 18:53:36,267:INFO:             autoviz: Not installed
2025-09-21 18:53:36,267:INFO:           fairlearn: 0.7.0
2025-09-21 18:53:36,267:INFO:          deepchecks: Not installed
2025-09-21 18:53:36,267:INFO:             xgboost: 3.0.5
2025-09-21 18:53:36,267:INFO:            catboost: 1.2.8
2025-09-21 18:53:36,267:INFO:              kmodes: 0.12.2
2025-09-21 18:53:36,267:INFO:             mlxtend: 0.23.4
2025-09-21 18:53:36,267:INFO:       statsforecast: 1.5.0
2025-09-21 18:53:36,267:INFO:        tune_sklearn: Not installed
2025-09-21 18:53:36,267:INFO:                 ray: Not installed
2025-09-21 18:53:36,267:INFO:            hyperopt: 0.2.7
2025-09-21 18:53:36,267:INFO:              optuna: 4.5.0
2025-09-21 18:53:36,267:INFO:               skopt: 0.10.2
2025-09-21 18:53:36,267:INFO:              mlflow: 3.4.0
2025-09-21 18:53:36,267:INFO:              gradio: 5.46.1
2025-09-21 18:53:36,267:INFO:             fastapi: 0.117.1
2025-09-21 18:53:36,267:INFO:             uvicorn: 0.36.0
2025-09-21 18:53:36,267:INFO:              m2cgen: 0.10.0
2025-09-21 18:53:36,267:INFO:           evidently: 0.4.40
2025-09-21 18:53:36,267:INFO:               fugue: 0.8.7
2025-09-21 18:53:36,267:INFO:           streamlit: Not installed
2025-09-21 18:53:36,267:INFO:             prophet: Not installed
2025-09-21 18:53:36,267:INFO:None
2025-09-21 18:53:36,267:INFO:Set up data.
2025-09-21 18:53:36,284:INFO:Set up index.
2025-09-21 18:53:36,284:INFO:Assigning column types.
2025-09-21 18:53:36,302:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 18:53:36,302:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:53:36,302:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:53:36,316:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 18:53:36,316:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:53:36,316:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 18:53:36,316:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:53:36,318:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:53:36,318:INFO:Preparing preprocessing pipeline...
2025-09-21 18:53:36,318:INFO:Set up simple imputation.
2025-09-21 18:53:36,328:INFO:Set up encoding of ordinal features.
2025-09-21 18:53:36,332:INFO:Set up encoding of categorical features.
2025-09-21 18:53:36,332:INFO:Set up feature normalization.
2025-09-21 18:53:36,639:INFO:Finished creating preprocessing pipeline.
2025-09-21 18:53:36,673:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReputaciÃ³n_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 18:53:36,673:INFO:Creating final display dataframe.
2025-09-21 18:53:36,963:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  05a0
2025-09-21 18:53:36,973:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:53:36,973:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 18:53:36,977:INFO:setup() successfully completed in 13.38s...............
2025-09-21 18:53:36,977:INFO:Initializing create_model()
2025-09-21 18:53:36,978:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 18:53:36,978:INFO:Checking exceptions
2025-09-21 18:53:37,110:INFO:Importing untrained model
2025-09-21 18:53:37,117:INFO:K-Means Clustering Imported successfully
2025-09-21 18:53:37,131:INFO:Fitting Model
2025-09-21 18:53:37,499:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 18:53:37,499:INFO:create_models() successfully completed......................................
2025-09-21 18:53:37,510:INFO:Uploading results into container
2025-09-21 18:53:37,512:INFO:Uploading model into container now
2025-09-21 18:53:37,524:INFO:_master_model_container: 1
2025-09-21 18:53:37,524:INFO:_display_container: 2
2025-09-21 18:53:37,526:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 18:53:37,526:INFO:create_model() successfully completed......................................
2025-09-21 18:53:37,739:INFO:Initializing create_model()
2025-09-21 18:53:37,739:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 18:53:37,739:INFO:Checking exceptions
2025-09-21 18:53:37,837:INFO:Importing untrained model
2025-09-21 18:53:37,845:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 18:53:37,858:INFO:Fitting Model
2025-09-21 18:53:38,059:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-21 18:53:38,062:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-21 18:53:38,065:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-21 18:53:38,066:INFO:DBSCAN(n_jobs=-1)
2025-09-21 18:53:38,066:INFO:create_models() successfully completed......................................
2025-09-21 18:53:38,072:INFO:Uploading results into container
2025-09-21 18:53:38,073:INFO:Uploading model into container now
2025-09-21 18:53:38,084:INFO:_master_model_container: 2
2025-09-21 18:53:38,084:INFO:_display_container: 3
2025-09-21 18:53:38,085:INFO:DBSCAN(n_jobs=-1)
2025-09-21 18:53:38,085:INFO:create_model() successfully completed......................................
2025-09-21 18:53:38,265:INFO:Initializing create_model()
2025-09-21 18:53:38,265:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 18:53:38,265:INFO:Checking exceptions
2025-09-21 18:53:38,332:INFO:Importing untrained model
2025-09-21 18:53:38,339:INFO:Agglomerative Clustering Imported successfully
2025-09-21 18:53:38,349:INFO:Fitting Model
2025-09-21 18:53:38,589:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 18:53:38,589:INFO:create_models() successfully completed......................................
2025-09-21 18:53:38,598:INFO:Uploading results into container
2025-09-21 18:53:38,599:INFO:Uploading model into container now
2025-09-21 18:53:38,611:INFO:_master_model_container: 3
2025-09-21 18:53:38,611:INFO:_display_container: 4
2025-09-21 18:53:38,611:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 18:53:38,613:INFO:create_model() successfully completed......................................
2025-09-21 18:53:38,797:INFO:Initializing plot_model()
2025-09-21 18:53:38,797:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, system=True)
2025-09-21 18:53:38,797:INFO:Checking exceptions
2025-09-21 18:53:38,801:INFO:Preloading libraries
2025-09-21 18:53:38,802:INFO:Copying training dataset
2025-09-21 18:53:38,802:INFO:Plot type: cluster
2025-09-21 18:53:38,803:INFO:SubProcess assign_model() called ==================================
2025-09-21 18:53:38,804:INFO:Initializing assign_model()
2025-09-21 18:53:38,804:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, model=KMeans(n_clusters=4, random_state=123), transformation=True, score=True, verbose=False)
2025-09-21 18:53:38,804:INFO:Checking exceptions
2025-09-21 18:53:38,804:INFO:Determining Trained Model
2025-09-21 18:53:38,805:INFO:Trained Model : K-Means Clustering
2025-09-21 18:53:38,805:INFO:Copying data
2025-09-21 18:53:38,852:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-21 18:53:38,853:INFO:(1000, 45)
2025-09-21 18:53:38,853:INFO:assign_model() successfully completed......................................
2025-09-21 18:53:38,853:INFO:SubProcess assign_model() end ==================================
2025-09-21 18:53:38,855:INFO:Fitting PCA()
2025-09-21 18:53:38,879:INFO:Sorting dataframe
2025-09-21 18:53:38,882:INFO:Rendering Visual
2025-09-21 18:53:39,640:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\kaleido\_sync_server.py:11: UserWarning:



Warning: You have Plotly version 5.24.1, which is not compatible with this version of Kaleido (1.1.0).

This means that static image generation (e.g. `fig.write_image()`) will not work.

Please upgrade Plotly to version 6.1.1 or greater, or downgrade Kaleido to version 0.2.1.



2025-09-21 18:53:39,818:INFO:Visual Rendered Successfully
2025-09-21 18:53:40,025:INFO:plot_model() successfully completed......................................
2025-09-21 18:53:40,025:INFO:Initializing plot_model()
2025-09-21 18:53:40,025:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=DBSCAN(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, system=True)
2025-09-21 18:53:40,025:INFO:Checking exceptions
2025-09-21 18:53:40,035:INFO:Preloading libraries
2025-09-21 18:53:40,035:INFO:Copying training dataset
2025-09-21 18:53:40,035:INFO:Plot type: cluster
2025-09-21 18:53:40,035:INFO:SubProcess assign_model() called ==================================
2025-09-21 18:53:40,035:INFO:Initializing assign_model()
2025-09-21 18:53:40,035:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, model=DBSCAN(n_jobs=-1), transformation=True, score=True, verbose=False)
2025-09-21 18:53:40,035:INFO:Checking exceptions
2025-09-21 18:53:40,035:INFO:Determining Trained Model
2025-09-21 18:53:40,035:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 18:53:40,035:INFO:Copying data
2025-09-21 18:53:40,114:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-21 18:53:40,114:INFO:(1000, 45)
2025-09-21 18:53:40,114:INFO:assign_model() successfully completed......................................
2025-09-21 18:53:40,114:INFO:SubProcess assign_model() end ==================================
2025-09-21 18:53:40,114:INFO:Fitting PCA()
2025-09-21 18:53:40,130:INFO:Sorting dataframe
2025-09-21 18:53:40,133:INFO:Rendering Visual
2025-09-21 18:53:40,169:INFO:Visual Rendered Successfully
2025-09-21 18:53:40,441:INFO:plot_model() successfully completed......................................
2025-09-21 18:53:40,441:INFO:Initializing plot_model()
2025-09-21 18:53:40,441:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=AgglomerativeClustering(n_clusters=4), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, system=True)
2025-09-21 18:53:40,441:INFO:Checking exceptions
2025-09-21 18:53:40,449:INFO:Preloading libraries
2025-09-21 18:53:40,449:INFO:Copying training dataset
2025-09-21 18:53:40,449:INFO:Plot type: cluster
2025-09-21 18:53:40,449:INFO:SubProcess assign_model() called ==================================
2025-09-21 18:53:40,449:INFO:Initializing assign_model()
2025-09-21 18:53:40,453:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFABED7640>, model=AgglomerativeClustering(n_clusters=4), transformation=True, score=True, verbose=False)
2025-09-21 18:53:40,453:INFO:Checking exceptions
2025-09-21 18:53:40,453:INFO:Determining Trained Model
2025-09-21 18:53:40,453:INFO:Trained Model : Agglomerative Clustering
2025-09-21 18:53:40,453:INFO:Copying data
2025-09-21 18:53:40,497:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-21 18:53:40,499:INFO:(1000, 45)
2025-09-21 18:53:40,499:INFO:assign_model() successfully completed......................................
2025-09-21 18:53:40,499:INFO:SubProcess assign_model() end ==================================
2025-09-21 18:53:40,503:INFO:Fitting PCA()
2025-09-21 18:53:40,516:INFO:Sorting dataframe
2025-09-21 18:53:40,520:INFO:Rendering Visual
2025-09-21 18:53:40,577:INFO:Visual Rendered Successfully
2025-09-21 18:53:40,784:INFO:plot_model() successfully completed......................................
2025-09-21 18:53:40,794:WARNING:WARNING	Comm:base_comm.py:get_comm()- No such comm: 0c16598f15914374aa4210531d4d0fb7
2025-09-21 18:53:40,802:WARNING:WARNING	Comm:base_comm.py:get_comm()- No such comm: 8d3f87dd428849c1a0c19c0fd22df277
2025-09-21 19:00:22,717:INFO:PyCaret ClusteringExperiment
2025-09-21 19:00:22,717:INFO:Logging name: cluster-default-name
2025-09-21 19:00:22,717:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:00:22,717:INFO:version 3.3.2
2025-09-21 19:00:22,718:INFO:Initializing setup()
2025-09-21 19:00:22,718:INFO:self.USI: 90d8
2025-09-21 19:00:22,718:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:00:22,718:INFO:Checking environment
2025-09-21 19:00:22,718:INFO:python_version: 3.10.18
2025-09-21 19:00:22,718:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:00:22,718:INFO:machine: AMD64
2025-09-21 19:00:22,718:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:00:22,718:INFO:Memory: svmem(total=16486035456, available=9904832512, percent=39.9, used=6581202944, free=9904832512)
2025-09-21 19:00:22,719:INFO:Physical Core: 8
2025-09-21 19:00:22,719:INFO:Logical Core: 16
2025-09-21 19:00:22,719:INFO:Checking libraries
2025-09-21 19:00:22,719:INFO:System:
2025-09-21 19:00:22,719:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:00:22,719:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:00:22,720:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:00:22,720:INFO:PyCaret required dependencies:
2025-09-21 19:00:22,720:INFO:                 pip: 25.2
2025-09-21 19:00:22,720:INFO:          setuptools: 78.1.1
2025-09-21 19:00:22,721:INFO:             pycaret: 3.3.2
2025-09-21 19:00:22,721:INFO:             IPython: 8.37.0
2025-09-21 19:00:22,721:INFO:          ipywidgets: 8.1.7
2025-09-21 19:00:22,721:INFO:                tqdm: 4.67.1
2025-09-21 19:00:22,721:INFO:               numpy: 1.26.4
2025-09-21 19:00:22,721:INFO:              pandas: 2.1.4
2025-09-21 19:00:22,721:INFO:              jinja2: 3.1.6
2025-09-21 19:00:22,722:INFO:               scipy: 1.11.4
2025-09-21 19:00:22,722:INFO:              joblib: 1.3.2
2025-09-21 19:00:22,722:INFO:             sklearn: 1.4.2
2025-09-21 19:00:22,722:INFO:                pyod: 2.0.5
2025-09-21 19:00:22,722:INFO:            imblearn: 0.14.0
2025-09-21 19:00:22,722:INFO:   category_encoders: 2.7.0
2025-09-21 19:00:22,722:INFO:            lightgbm: 4.6.0
2025-09-21 19:00:22,722:INFO:               numba: 0.61.0
2025-09-21 19:00:22,722:INFO:            requests: 2.32.5
2025-09-21 19:00:22,722:INFO:          matplotlib: 3.7.5
2025-09-21 19:00:22,723:INFO:          scikitplot: 0.3.7
2025-09-21 19:00:22,723:INFO:         yellowbrick: 1.5
2025-09-21 19:00:22,723:INFO:              plotly: 5.24.1
2025-09-21 19:00:22,723:INFO:    plotly-resampler: Not installed
2025-09-21 19:00:22,723:INFO:             kaleido: 1.1.0
2025-09-21 19:00:22,723:INFO:           schemdraw: 0.15
2025-09-21 19:00:22,723:INFO:         statsmodels: 0.14.5
2025-09-21 19:00:22,723:INFO:              sktime: 0.26.0
2025-09-21 19:00:22,723:INFO:               tbats: 1.1.3
2025-09-21 19:00:22,723:INFO:            pmdarima: 2.0.4
2025-09-21 19:00:22,723:INFO:              psutil: 7.1.0
2025-09-21 19:00:22,723:INFO:          markupsafe: 3.0.2
2025-09-21 19:00:22,723:INFO:             pickle5: Not installed
2025-09-21 19:00:22,723:INFO:         cloudpickle: 3.1.1
2025-09-21 19:00:22,723:INFO:         deprecation: 2.1.0
2025-09-21 19:00:22,725:INFO:              xxhash: 3.5.0
2025-09-21 19:00:22,725:INFO:           wurlitzer: Not installed
2025-09-21 19:00:22,725:INFO:PyCaret optional dependencies:
2025-09-21 19:00:22,725:INFO:                shap: 0.44.1
2025-09-21 19:00:22,725:INFO:           interpret: 0.7.2
2025-09-21 19:00:22,725:INFO:                umap: 0.5.7
2025-09-21 19:00:22,725:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:00:22,725:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:00:22,725:INFO:             autoviz: Not installed
2025-09-21 19:00:22,726:INFO:           fairlearn: 0.7.0
2025-09-21 19:00:22,726:INFO:          deepchecks: Not installed
2025-09-21 19:00:22,726:INFO:             xgboost: 3.0.5
2025-09-21 19:00:22,726:INFO:            catboost: 1.2.8
2025-09-21 19:00:22,726:INFO:              kmodes: 0.12.2
2025-09-21 19:00:22,726:INFO:             mlxtend: 0.23.4
2025-09-21 19:00:22,726:INFO:       statsforecast: 1.5.0
2025-09-21 19:00:22,726:INFO:        tune_sklearn: Not installed
2025-09-21 19:00:22,726:INFO:                 ray: Not installed
2025-09-21 19:00:22,726:INFO:            hyperopt: 0.2.7
2025-09-21 19:00:22,726:INFO:              optuna: 4.5.0
2025-09-21 19:00:22,727:INFO:               skopt: 0.10.2
2025-09-21 19:00:22,727:INFO:              mlflow: 3.4.0
2025-09-21 19:00:22,727:INFO:              gradio: 5.46.1
2025-09-21 19:00:22,727:INFO:             fastapi: 0.117.1
2025-09-21 19:00:22,727:INFO:             uvicorn: 0.36.0
2025-09-21 19:00:22,727:INFO:              m2cgen: 0.10.0
2025-09-21 19:00:22,727:INFO:           evidently: 0.4.40
2025-09-21 19:00:22,727:INFO:               fugue: 0.8.7
2025-09-21 19:00:22,728:INFO:           streamlit: Not installed
2025-09-21 19:00:22,728:INFO:             prophet: Not installed
2025-09-21 19:00:22,728:INFO:None
2025-09-21 19:00:22,728:INFO:Set up data.
2025-09-21 19:00:22,749:INFO:Set up index.
2025-09-21 19:00:22,750:INFO:Assigning column types.
2025-09-21 19:00:22,756:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:00:22,756:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:00:22,757:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:00:22,757:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:00:22,758:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:00:22,758:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:00:22,758:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:00:22,758:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:00:22,760:INFO:Preparing preprocessing pipeline...
2025-09-21 19:00:22,760:INFO:Set up simple imputation.
2025-09-21 19:00:22,765:INFO:Set up encoding of ordinal features.
2025-09-21 19:00:22,767:INFO:Set up encoding of categorical features.
2025-09-21 19:00:22,767:INFO:Set up feature normalization.
2025-09-21 19:00:23,214:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:00:23,262:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReputaciÃ³n_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:00:23,263:INFO:Creating final display dataframe.
2025-09-21 19:00:23,322:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  90d8
2025-09-21 19:00:23,336:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:00:23,337:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:00:23,338:INFO:setup() successfully completed in 0.64s...............
2025-09-21 19:05:56,168:INFO:PyCaret ClusteringExperiment
2025-09-21 19:05:56,168:INFO:Logging name: cluster-default-name
2025-09-21 19:05:56,168:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:05:56,168:INFO:version 3.3.2
2025-09-21 19:05:56,168:INFO:Initializing setup()
2025-09-21 19:05:56,168:INFO:self.USI: 47e6
2025-09-21 19:05:56,169:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:05:56,169:INFO:Checking environment
2025-09-21 19:05:56,169:INFO:python_version: 3.10.18
2025-09-21 19:05:56,169:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:05:56,169:INFO:machine: AMD64
2025-09-21 19:05:56,169:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:05:56,169:INFO:Memory: svmem(total=16486035456, available=9806970880, percent=40.5, used=6679064576, free=9806970880)
2025-09-21 19:05:56,170:INFO:Physical Core: 8
2025-09-21 19:05:56,170:INFO:Logical Core: 16
2025-09-21 19:05:56,170:INFO:Checking libraries
2025-09-21 19:05:56,170:INFO:System:
2025-09-21 19:05:56,170:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:05:56,170:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:05:56,171:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:05:56,171:INFO:PyCaret required dependencies:
2025-09-21 19:05:56,171:INFO:                 pip: 25.2
2025-09-21 19:05:56,171:INFO:          setuptools: 78.1.1
2025-09-21 19:05:56,171:INFO:             pycaret: 3.3.2
2025-09-21 19:05:56,171:INFO:             IPython: 8.37.0
2025-09-21 19:05:56,171:INFO:          ipywidgets: 8.1.7
2025-09-21 19:05:56,171:INFO:                tqdm: 4.67.1
2025-09-21 19:05:56,171:INFO:               numpy: 1.26.4
2025-09-21 19:05:56,172:INFO:              pandas: 2.1.4
2025-09-21 19:05:56,172:INFO:              jinja2: 3.1.6
2025-09-21 19:05:56,172:INFO:               scipy: 1.11.4
2025-09-21 19:05:56,172:INFO:              joblib: 1.3.2
2025-09-21 19:05:56,172:INFO:             sklearn: 1.4.2
2025-09-21 19:05:56,172:INFO:                pyod: 2.0.5
2025-09-21 19:05:56,172:INFO:            imblearn: 0.14.0
2025-09-21 19:05:56,172:INFO:   category_encoders: 2.7.0
2025-09-21 19:05:56,172:INFO:            lightgbm: 4.6.0
2025-09-21 19:05:56,172:INFO:               numba: 0.61.0
2025-09-21 19:05:56,172:INFO:            requests: 2.32.5
2025-09-21 19:05:56,172:INFO:          matplotlib: 3.7.5
2025-09-21 19:05:56,172:INFO:          scikitplot: 0.3.7
2025-09-21 19:05:56,172:INFO:         yellowbrick: 1.5
2025-09-21 19:05:56,172:INFO:              plotly: 5.24.1
2025-09-21 19:05:56,172:INFO:    plotly-resampler: Not installed
2025-09-21 19:05:56,173:INFO:             kaleido: 1.1.0
2025-09-21 19:05:56,173:INFO:           schemdraw: 0.15
2025-09-21 19:05:56,173:INFO:         statsmodels: 0.14.5
2025-09-21 19:05:56,173:INFO:              sktime: 0.26.0
2025-09-21 19:05:56,173:INFO:               tbats: 1.1.3
2025-09-21 19:05:56,173:INFO:            pmdarima: 2.0.4
2025-09-21 19:05:56,173:INFO:              psutil: 7.1.0
2025-09-21 19:05:56,173:INFO:          markupsafe: 3.0.2
2025-09-21 19:05:56,173:INFO:             pickle5: Not installed
2025-09-21 19:05:56,173:INFO:         cloudpickle: 3.1.1
2025-09-21 19:05:56,173:INFO:         deprecation: 2.1.0
2025-09-21 19:05:56,173:INFO:              xxhash: 3.5.0
2025-09-21 19:05:56,173:INFO:           wurlitzer: Not installed
2025-09-21 19:05:56,173:INFO:PyCaret optional dependencies:
2025-09-21 19:05:56,173:INFO:                shap: 0.44.1
2025-09-21 19:05:56,174:INFO:           interpret: 0.7.2
2025-09-21 19:05:56,174:INFO:                umap: 0.5.7
2025-09-21 19:05:56,174:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:05:56,174:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:05:56,174:INFO:             autoviz: Not installed
2025-09-21 19:05:56,174:INFO:           fairlearn: 0.7.0
2025-09-21 19:05:56,174:INFO:          deepchecks: Not installed
2025-09-21 19:05:56,174:INFO:             xgboost: 3.0.5
2025-09-21 19:05:56,174:INFO:            catboost: 1.2.8
2025-09-21 19:05:56,174:INFO:              kmodes: 0.12.2
2025-09-21 19:05:56,174:INFO:             mlxtend: 0.23.4
2025-09-21 19:05:56,174:INFO:       statsforecast: 1.5.0
2025-09-21 19:05:56,174:INFO:        tune_sklearn: Not installed
2025-09-21 19:05:56,174:INFO:                 ray: Not installed
2025-09-21 19:05:56,174:INFO:            hyperopt: 0.2.7
2025-09-21 19:05:56,175:INFO:              optuna: 4.5.0
2025-09-21 19:05:56,175:INFO:               skopt: 0.10.2
2025-09-21 19:05:56,175:INFO:              mlflow: 3.4.0
2025-09-21 19:05:56,175:INFO:              gradio: 5.46.1
2025-09-21 19:05:56,175:INFO:             fastapi: 0.117.1
2025-09-21 19:05:56,175:INFO:             uvicorn: 0.36.0
2025-09-21 19:05:56,175:INFO:              m2cgen: 0.10.0
2025-09-21 19:05:56,175:INFO:           evidently: 0.4.40
2025-09-21 19:05:56,175:INFO:               fugue: 0.8.7
2025-09-21 19:05:56,175:INFO:           streamlit: Not installed
2025-09-21 19:05:56,175:INFO:             prophet: Not installed
2025-09-21 19:05:56,175:INFO:None
2025-09-21 19:05:56,175:INFO:Set up data.
2025-09-21 19:05:56,188:INFO:Set up index.
2025-09-21 19:05:56,189:INFO:Assigning column types.
2025-09-21 19:05:56,195:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:05:56,195:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:05:56,195:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:05:56,196:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:05:56,196:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:05:56,196:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:05:56,196:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:05:56,197:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:05:56,198:INFO:Preparing preprocessing pipeline...
2025-09-21 19:05:56,198:INFO:Set up simple imputation.
2025-09-21 19:05:56,202:INFO:Set up encoding of ordinal features.
2025-09-21 19:05:56,205:INFO:Set up encoding of categorical features.
2025-09-21 19:05:56,205:INFO:Set up feature normalization.
2025-09-21 19:05:56,449:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:05:56,498:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReputaciÃ³n_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:05:56,499:INFO:Creating final display dataframe.
2025-09-21 19:05:56,970:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  47e6
2025-09-21 19:05:56,982:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:05:56,984:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:05:56,984:INFO:setup() successfully completed in 0.83s...............
2025-09-21 19:05:56,991:INFO:Initializing create_model()
2025-09-21 19:05:56,992:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:05:56,992:INFO:Checking exceptions
2025-09-21 19:05:57,153:INFO:Importing untrained model
2025-09-21 19:05:57,160:INFO:K-Means Clustering Imported successfully
2025-09-21 19:05:57,171:INFO:Fitting Model
2025-09-21 19:05:57,433:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:05:57,433:INFO:create_models() successfully completed......................................
2025-09-21 19:05:57,442:INFO:Uploading results into container
2025-09-21 19:05:57,444:INFO:Uploading model into container now
2025-09-21 19:05:57,462:INFO:_master_model_container: 1
2025-09-21 19:05:57,463:INFO:_display_container: 2
2025-09-21 19:05:57,464:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:05:57,464:INFO:create_model() successfully completed......................................
2025-09-21 19:05:57,696:INFO:Initializing assign_model()
2025-09-21 19:05:57,696:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-21 19:05:57,696:INFO:Checking exceptions
2025-09-21 19:05:57,696:INFO:Determining Trained Model
2025-09-21 19:05:57,697:INFO:Trained Model : K-Means Clustering
2025-09-21 19:05:57,697:INFO:Copying data
2025-09-21 19:05:57,700:INFO:(1000, 24)
2025-09-21 19:05:57,700:INFO:assign_model() successfully completed......................................
2025-09-21 19:05:57,712:INFO:Initializing plot_model()
2025-09-21 19:05:57,713:INFO:plot_model(plot=elbow, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, system=True)
2025-09-21 19:05:57,713:INFO:Checking exceptions
2025-09-21 19:05:57,719:INFO:Preloading libraries
2025-09-21 19:05:57,720:INFO:Copying training dataset
2025-09-21 19:05:57,720:INFO:Plot type: elbow
2025-09-21 19:05:57,854:INFO:Fitting Model
2025-09-21 19:05:58,821:INFO:Visual Rendered Successfully
2025-09-21 19:05:59,044:INFO:plot_model() successfully completed......................................
2025-09-21 19:05:59,045:INFO:Initializing plot_model()
2025-09-21 19:05:59,045:INFO:plot_model(plot=silhouette, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, system=True)
2025-09-21 19:05:59,045:INFO:Checking exceptions
2025-09-21 19:05:59,051:INFO:Preloading libraries
2025-09-21 19:05:59,051:INFO:Copying training dataset
2025-09-21 19:05:59,051:INFO:Plot type: silhouette
2025-09-21 19:05:59,092:INFO:Fitting Model
2025-09-21 19:05:59,092:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2025-09-21 19:05:59,367:INFO:Visual Rendered Successfully
2025-09-21 19:05:59,561:INFO:plot_model() successfully completed......................................
2025-09-21 19:05:59,563:INFO:Initializing create_model()
2025-09-21 19:05:59,563:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:05:59,563:INFO:Checking exceptions
2025-09-21 19:05:59,671:INFO:Importing untrained model
2025-09-21 19:05:59,678:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:05:59,694:INFO:Fitting Model
2025-09-21 19:05:59,856:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:05:59,856:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:05:59,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:05:59,863:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:05:59,863:INFO:create_models() successfully completed......................................
2025-09-21 19:05:59,866:INFO:Uploading results into container
2025-09-21 19:05:59,868:INFO:Uploading model into container now
2025-09-21 19:05:59,881:INFO:_master_model_container: 2
2025-09-21 19:05:59,881:INFO:_display_container: 3
2025-09-21 19:05:59,881:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:05:59,881:INFO:create_model() successfully completed......................................
2025-09-21 19:06:00,094:INFO:Initializing evaluate_model()
2025-09-21 19:06:00,096:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, estimator=DBSCAN(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-09-21 19:06:00,109:INFO:Initializing plot_model()
2025-09-21 19:06:00,109:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=DBSCAN(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEA55F90>, system=True)
2025-09-21 19:06:00,109:INFO:Checking exceptions
2025-09-21 19:06:00,111:INFO:Preloading libraries
2025-09-21 19:06:00,111:INFO:Copying training dataset
2025-09-21 19:06:00,111:INFO:Plot type: pipeline
2025-09-21 19:06:00,378:INFO:Visual Rendered Successfully
2025-09-21 19:06:00,582:INFO:plot_model() successfully completed......................................
2025-09-21 19:09:00,141:INFO:PyCaret ClusteringExperiment
2025-09-21 19:09:00,141:INFO:Logging name: cluster-default-name
2025-09-21 19:09:00,141:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:09:00,143:INFO:version 3.3.2
2025-09-21 19:09:00,143:INFO:Initializing setup()
2025-09-21 19:09:00,143:INFO:self.USI: 7692
2025-09-21 19:09:00,143:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:09:00,143:INFO:Checking environment
2025-09-21 19:09:00,143:INFO:python_version: 3.10.18
2025-09-21 19:09:00,143:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:09:00,143:INFO:machine: AMD64
2025-09-21 19:09:00,143:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:09:00,143:INFO:Memory: svmem(total=16486035456, available=9821888512, percent=40.4, used=6664146944, free=9821888512)
2025-09-21 19:09:00,143:INFO:Physical Core: 8
2025-09-21 19:09:00,143:INFO:Logical Core: 16
2025-09-21 19:09:00,143:INFO:Checking libraries
2025-09-21 19:09:00,143:INFO:System:
2025-09-21 19:09:00,143:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:09:00,143:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:09:00,143:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:09:00,143:INFO:PyCaret required dependencies:
2025-09-21 19:09:00,143:INFO:                 pip: 25.2
2025-09-21 19:09:00,143:INFO:          setuptools: 78.1.1
2025-09-21 19:09:00,143:INFO:             pycaret: 3.3.2
2025-09-21 19:09:00,143:INFO:             IPython: 8.37.0
2025-09-21 19:09:00,143:INFO:          ipywidgets: 8.1.7
2025-09-21 19:09:00,143:INFO:                tqdm: 4.67.1
2025-09-21 19:09:00,143:INFO:               numpy: 1.26.4
2025-09-21 19:09:00,143:INFO:              pandas: 2.1.4
2025-09-21 19:09:00,143:INFO:              jinja2: 3.1.6
2025-09-21 19:09:00,143:INFO:               scipy: 1.11.4
2025-09-21 19:09:00,143:INFO:              joblib: 1.3.2
2025-09-21 19:09:00,143:INFO:             sklearn: 1.4.2
2025-09-21 19:09:00,143:INFO:                pyod: 2.0.5
2025-09-21 19:09:00,143:INFO:            imblearn: 0.14.0
2025-09-21 19:09:00,147:INFO:   category_encoders: 2.7.0
2025-09-21 19:09:00,147:INFO:            lightgbm: 4.6.0
2025-09-21 19:09:00,147:INFO:               numba: 0.61.0
2025-09-21 19:09:00,147:INFO:            requests: 2.32.5
2025-09-21 19:09:00,147:INFO:          matplotlib: 3.7.5
2025-09-21 19:09:00,147:INFO:          scikitplot: 0.3.7
2025-09-21 19:09:00,147:INFO:         yellowbrick: 1.5
2025-09-21 19:09:00,147:INFO:              plotly: 5.24.1
2025-09-21 19:09:00,148:INFO:    plotly-resampler: Not installed
2025-09-21 19:09:00,148:INFO:             kaleido: 1.1.0
2025-09-21 19:09:00,148:INFO:           schemdraw: 0.15
2025-09-21 19:09:00,148:INFO:         statsmodels: 0.14.5
2025-09-21 19:09:00,148:INFO:              sktime: 0.26.0
2025-09-21 19:09:00,148:INFO:               tbats: 1.1.3
2025-09-21 19:09:00,148:INFO:            pmdarima: 2.0.4
2025-09-21 19:09:00,148:INFO:              psutil: 7.1.0
2025-09-21 19:09:00,148:INFO:          markupsafe: 3.0.2
2025-09-21 19:09:00,148:INFO:             pickle5: Not installed
2025-09-21 19:09:00,148:INFO:         cloudpickle: 3.1.1
2025-09-21 19:09:00,148:INFO:         deprecation: 2.1.0
2025-09-21 19:09:00,148:INFO:              xxhash: 3.5.0
2025-09-21 19:09:00,148:INFO:           wurlitzer: Not installed
2025-09-21 19:09:00,148:INFO:PyCaret optional dependencies:
2025-09-21 19:09:00,148:INFO:                shap: 0.44.1
2025-09-21 19:09:00,148:INFO:           interpret: 0.7.2
2025-09-21 19:09:00,148:INFO:                umap: 0.5.7
2025-09-21 19:09:00,148:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:09:00,148:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:09:00,148:INFO:             autoviz: Not installed
2025-09-21 19:09:00,148:INFO:           fairlearn: 0.7.0
2025-09-21 19:09:00,148:INFO:          deepchecks: Not installed
2025-09-21 19:09:00,148:INFO:             xgboost: 3.0.5
2025-09-21 19:09:00,148:INFO:            catboost: 1.2.8
2025-09-21 19:09:00,148:INFO:              kmodes: 0.12.2
2025-09-21 19:09:00,148:INFO:             mlxtend: 0.23.4
2025-09-21 19:09:00,148:INFO:       statsforecast: 1.5.0
2025-09-21 19:09:00,148:INFO:        tune_sklearn: Not installed
2025-09-21 19:09:00,148:INFO:                 ray: Not installed
2025-09-21 19:09:00,148:INFO:            hyperopt: 0.2.7
2025-09-21 19:09:00,148:INFO:              optuna: 4.5.0
2025-09-21 19:09:00,148:INFO:               skopt: 0.10.2
2025-09-21 19:09:00,148:INFO:              mlflow: 3.4.0
2025-09-21 19:09:00,148:INFO:              gradio: 5.46.1
2025-09-21 19:09:00,148:INFO:             fastapi: 0.117.1
2025-09-21 19:09:00,148:INFO:             uvicorn: 0.36.0
2025-09-21 19:09:00,148:INFO:              m2cgen: 0.10.0
2025-09-21 19:09:00,148:INFO:           evidently: 0.4.40
2025-09-21 19:09:00,148:INFO:               fugue: 0.8.7
2025-09-21 19:09:00,148:INFO:           streamlit: Not installed
2025-09-21 19:09:00,148:INFO:             prophet: Not installed
2025-09-21 19:09:00,151:INFO:None
2025-09-21 19:09:00,151:INFO:Set up data.
2025-09-21 19:09:00,166:INFO:Set up index.
2025-09-21 19:09:00,166:INFO:Assigning column types.
2025-09-21 19:09:00,168:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:09:00,173:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:09:00,173:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:09:00,173:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:09:00,173:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:09:00,173:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:09:00,173:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:09:00,173:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:09:00,173:INFO:Preparing preprocessing pipeline...
2025-09-21 19:09:00,173:INFO:Set up simple imputation.
2025-09-21 19:09:00,173:INFO:Set up encoding of ordinal features.
2025-09-21 19:09:00,173:INFO:Set up encoding of categorical features.
2025-09-21 19:09:00,173:INFO:Set up feature normalization.
2025-09-21 19:09:00,364:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:09:00,393:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReputaciÃ³n_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:09:00,393:INFO:Creating final display dataframe.
2025-09-21 19:09:00,435:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  7692
2025-09-21 19:09:00,435:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:09:00,435:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:09:00,435:INFO:setup() successfully completed in 0.3s...............
2025-09-21 19:09:00,439:INFO:Initializing create_model()
2025-09-21 19:09:00,439:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:09:00,439:INFO:Checking exceptions
2025-09-21 19:09:00,512:INFO:Importing untrained model
2025-09-21 19:09:00,523:INFO:K-Means Clustering Imported successfully
2025-09-21 19:09:00,534:INFO:Fitting Model
2025-09-21 19:09:00,718:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:09:00,718:INFO:create_models() successfully completed......................................
2025-09-21 19:09:00,734:INFO:Uploading results into container
2025-09-21 19:09:00,734:INFO:Uploading model into container now
2025-09-21 19:09:00,748:INFO:_master_model_container: 1
2025-09-21 19:09:00,748:INFO:_display_container: 2
2025-09-21 19:09:00,748:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:09:00,748:INFO:create_model() successfully completed......................................
2025-09-21 19:09:00,972:INFO:Initializing assign_model()
2025-09-21 19:09:00,972:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:09:00,972:INFO:Checking exceptions
2025-09-21 19:09:00,972:INFO:Determining Trained Model
2025-09-21 19:09:00,972:INFO:Trained Model : K-Means Clustering
2025-09-21 19:09:00,972:INFO:Copying data
2025-09-21 19:09:00,982:INFO:(1000, 24)
2025-09-21 19:09:00,982:INFO:assign_model() successfully completed......................................
2025-09-21 19:09:00,982:INFO:Initializing create_model()
2025-09-21 19:09:00,982:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:09:00,982:INFO:Checking exceptions
2025-09-21 19:09:01,064:INFO:Importing untrained model
2025-09-21 19:09:01,072:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:09:01,089:INFO:Fitting Model
2025-09-21 19:09:01,316:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:09:01,316:INFO:create_models() successfully completed......................................
2025-09-21 19:09:01,324:INFO:Uploading results into container
2025-09-21 19:09:01,326:INFO:Uploading model into container now
2025-09-21 19:09:01,337:INFO:_master_model_container: 2
2025-09-21 19:09:01,337:INFO:_display_container: 3
2025-09-21 19:09:01,337:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:09:01,337:INFO:create_model() successfully completed......................................
2025-09-21 19:09:01,559:INFO:Initializing assign_model()
2025-09-21 19:09:01,559:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:09:01,559:INFO:Checking exceptions
2025-09-21 19:09:01,559:INFO:Determining Trained Model
2025-09-21 19:09:01,559:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:09:01,559:INFO:Copying data
2025-09-21 19:09:01,561:INFO:(1000, 24)
2025-09-21 19:09:01,561:INFO:assign_model() successfully completed......................................
2025-09-21 19:09:01,564:INFO:Initializing create_model()
2025-09-21 19:09:01,566:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:09:01,566:INFO:Checking exceptions
2025-09-21 19:09:01,667:INFO:Importing untrained model
2025-09-21 19:09:01,672:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:09:01,683:INFO:Fitting Model
2025-09-21 19:09:01,826:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:09:01,828:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:09:01,831:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:09:01,832:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:09:01,832:INFO:create_models() successfully completed......................................
2025-09-21 19:09:01,837:INFO:Uploading results into container
2025-09-21 19:09:01,839:INFO:Uploading model into container now
2025-09-21 19:09:01,849:INFO:_master_model_container: 3
2025-09-21 19:09:01,849:INFO:_display_container: 4
2025-09-21 19:09:01,850:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:09:01,850:INFO:create_model() successfully completed......................................
2025-09-21 19:09:02,099:INFO:Initializing assign_model()
2025-09-21 19:09:02,099:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:09:02,099:INFO:Checking exceptions
2025-09-21 19:09:02,099:INFO:Determining Trained Model
2025-09-21 19:09:02,101:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:09:02,101:INFO:Copying data
2025-09-21 19:09:02,104:INFO:(1000, 24)
2025-09-21 19:09:02,104:INFO:assign_model() successfully completed......................................
2025-09-21 19:09:02,105:INFO:Initializing create_model()
2025-09-21 19:09:02,106:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:09:02,106:INFO:Checking exceptions
2025-09-21 19:09:02,178:INFO:Importing untrained model
2025-09-21 19:09:02,183:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:09:02,196:INFO:Fitting Model
2025-09-21 19:09:07,883:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:09:07,888:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:09:07,891:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:09:07,891:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:09:07,892:INFO:create_models() successfully completed......................................
2025-09-21 19:09:07,898:INFO:Uploading results into container
2025-09-21 19:09:07,900:INFO:Uploading model into container now
2025-09-21 19:09:07,909:INFO:_master_model_container: 4
2025-09-21 19:09:07,909:INFO:_display_container: 5
2025-09-21 19:09:07,910:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:09:07,910:INFO:create_model() successfully completed......................................
2025-09-21 19:09:08,149:INFO:Initializing assign_model()
2025-09-21 19:09:08,149:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB94A60>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:09:08,150:INFO:Checking exceptions
2025-09-21 19:09:08,150:INFO:Determining Trained Model
2025-09-21 19:09:08,150:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:09:08,150:INFO:Copying data
2025-09-21 19:09:08,152:INFO:(1000, 24)
2025-09-21 19:09:08,152:INFO:assign_model() successfully completed......................................
2025-09-21 19:10:41,908:INFO:PyCaret ClusteringExperiment
2025-09-21 19:10:41,908:INFO:Logging name: cluster-default-name
2025-09-21 19:10:41,908:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:10:41,908:INFO:version 3.3.2
2025-09-21 19:10:41,908:INFO:Initializing setup()
2025-09-21 19:10:41,908:INFO:self.USI: 883f
2025-09-21 19:10:41,908:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:10:41,912:INFO:Checking environment
2025-09-21 19:10:41,912:INFO:python_version: 3.10.18
2025-09-21 19:10:41,912:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:10:41,912:INFO:machine: AMD64
2025-09-21 19:10:41,912:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:10:41,912:INFO:Memory: svmem(total=16486035456, available=8271343616, percent=49.8, used=8214691840, free=8271343616)
2025-09-21 19:10:41,912:INFO:Physical Core: 8
2025-09-21 19:10:41,912:INFO:Logical Core: 16
2025-09-21 19:10:41,912:INFO:Checking libraries
2025-09-21 19:10:41,912:INFO:System:
2025-09-21 19:10:41,912:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:10:41,912:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:10:41,912:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:10:41,912:INFO:PyCaret required dependencies:
2025-09-21 19:10:41,912:INFO:                 pip: 25.2
2025-09-21 19:10:41,912:INFO:          setuptools: 78.1.1
2025-09-21 19:10:41,912:INFO:             pycaret: 3.3.2
2025-09-21 19:10:41,912:INFO:             IPython: 8.37.0
2025-09-21 19:10:41,912:INFO:          ipywidgets: 8.1.7
2025-09-21 19:10:41,912:INFO:                tqdm: 4.67.1
2025-09-21 19:10:41,912:INFO:               numpy: 1.26.4
2025-09-21 19:10:41,914:INFO:              pandas: 2.1.4
2025-09-21 19:10:41,914:INFO:              jinja2: 3.1.6
2025-09-21 19:10:41,914:INFO:               scipy: 1.11.4
2025-09-21 19:10:41,914:INFO:              joblib: 1.3.2
2025-09-21 19:10:41,914:INFO:             sklearn: 1.4.2
2025-09-21 19:10:41,914:INFO:                pyod: 2.0.5
2025-09-21 19:10:41,914:INFO:            imblearn: 0.14.0
2025-09-21 19:10:41,914:INFO:   category_encoders: 2.7.0
2025-09-21 19:10:41,914:INFO:            lightgbm: 4.6.0
2025-09-21 19:10:41,914:INFO:               numba: 0.61.0
2025-09-21 19:10:41,914:INFO:            requests: 2.32.5
2025-09-21 19:10:41,914:INFO:          matplotlib: 3.7.5
2025-09-21 19:10:41,914:INFO:          scikitplot: 0.3.7
2025-09-21 19:10:41,914:INFO:         yellowbrick: 1.5
2025-09-21 19:10:41,915:INFO:              plotly: 5.24.1
2025-09-21 19:10:41,915:INFO:    plotly-resampler: Not installed
2025-09-21 19:10:41,915:INFO:             kaleido: 1.1.0
2025-09-21 19:10:41,915:INFO:           schemdraw: 0.15
2025-09-21 19:10:41,915:INFO:         statsmodels: 0.14.5
2025-09-21 19:10:41,915:INFO:              sktime: 0.26.0
2025-09-21 19:10:41,915:INFO:               tbats: 1.1.3
2025-09-21 19:10:41,915:INFO:            pmdarima: 2.0.4
2025-09-21 19:10:41,915:INFO:              psutil: 7.1.0
2025-09-21 19:10:41,915:INFO:          markupsafe: 3.0.2
2025-09-21 19:10:41,915:INFO:             pickle5: Not installed
2025-09-21 19:10:41,915:INFO:         cloudpickle: 3.1.1
2025-09-21 19:10:41,915:INFO:         deprecation: 2.1.0
2025-09-21 19:10:41,915:INFO:              xxhash: 3.5.0
2025-09-21 19:10:41,915:INFO:           wurlitzer: Not installed
2025-09-21 19:10:41,916:INFO:PyCaret optional dependencies:
2025-09-21 19:10:41,916:INFO:                shap: 0.44.1
2025-09-21 19:10:41,916:INFO:           interpret: 0.7.2
2025-09-21 19:10:41,916:INFO:                umap: 0.5.7
2025-09-21 19:10:41,916:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:10:41,916:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:10:41,916:INFO:             autoviz: Not installed
2025-09-21 19:10:41,916:INFO:           fairlearn: 0.7.0
2025-09-21 19:10:41,916:INFO:          deepchecks: Not installed
2025-09-21 19:10:41,916:INFO:             xgboost: 3.0.5
2025-09-21 19:10:41,916:INFO:            catboost: 1.2.8
2025-09-21 19:10:41,916:INFO:              kmodes: 0.12.2
2025-09-21 19:10:41,916:INFO:             mlxtend: 0.23.4
2025-09-21 19:10:41,916:INFO:       statsforecast: 1.5.0
2025-09-21 19:10:41,916:INFO:        tune_sklearn: Not installed
2025-09-21 19:10:41,916:INFO:                 ray: Not installed
2025-09-21 19:10:41,916:INFO:            hyperopt: 0.2.7
2025-09-21 19:10:41,916:INFO:              optuna: 4.5.0
2025-09-21 19:10:41,916:INFO:               skopt: 0.10.2
2025-09-21 19:10:41,916:INFO:              mlflow: 3.4.0
2025-09-21 19:10:41,916:INFO:              gradio: 5.46.1
2025-09-21 19:10:41,916:INFO:             fastapi: 0.117.1
2025-09-21 19:10:41,916:INFO:             uvicorn: 0.36.0
2025-09-21 19:10:41,916:INFO:              m2cgen: 0.10.0
2025-09-21 19:10:41,918:INFO:           evidently: 0.4.40
2025-09-21 19:10:41,918:INFO:               fugue: 0.8.7
2025-09-21 19:10:41,918:INFO:           streamlit: Not installed
2025-09-21 19:10:41,918:INFO:             prophet: Not installed
2025-09-21 19:10:41,918:INFO:None
2025-09-21 19:10:41,918:INFO:Set up data.
2025-09-21 19:10:41,933:INFO:Set up index.
2025-09-21 19:10:41,933:INFO:Assigning column types.
2025-09-21 19:10:41,941:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:10:41,941:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:10:41,941:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:10:41,941:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:10:41,941:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:10:41,941:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:10:41,941:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:10:41,941:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:10:41,941:INFO:Preparing preprocessing pipeline...
2025-09-21 19:10:41,941:INFO:Set up simple imputation.
2025-09-21 19:10:41,949:INFO:Set up encoding of ordinal features.
2025-09-21 19:10:41,949:INFO:Set up encoding of categorical features.
2025-09-21 19:10:41,949:INFO:Set up feature normalization.
2025-09-21 19:10:42,133:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:10:42,169:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReputaciÃ³n_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:10:42,169:INFO:Creating final display dataframe.
2025-09-21 19:10:42,234:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  883f
2025-09-21 19:10:42,234:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:10:42,234:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:10:42,234:INFO:setup() successfully completed in 0.34s...............
2025-09-21 19:10:42,238:INFO:Initializing create_model()
2025-09-21 19:10:42,238:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:10:42,238:INFO:Checking exceptions
2025-09-21 19:10:42,353:INFO:Importing untrained model
2025-09-21 19:10:42,365:INFO:K-Means Clustering Imported successfully
2025-09-21 19:10:42,385:INFO:Fitting Model
2025-09-21 19:10:42,645:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:10:42,645:INFO:create_models() successfully completed......................................
2025-09-21 19:10:42,655:INFO:Uploading results into container
2025-09-21 19:10:42,657:INFO:Uploading model into container now
2025-09-21 19:10:42,670:INFO:_master_model_container: 1
2025-09-21 19:10:42,672:INFO:_display_container: 2
2025-09-21 19:10:42,672:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:10:42,672:INFO:create_model() successfully completed......................................
2025-09-21 19:10:42,939:INFO:Initializing assign_model()
2025-09-21 19:10:42,939:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:10:42,939:INFO:Checking exceptions
2025-09-21 19:10:42,939:INFO:Determining Trained Model
2025-09-21 19:10:42,939:INFO:Trained Model : K-Means Clustering
2025-09-21 19:10:42,939:INFO:Copying data
2025-09-21 19:10:42,939:INFO:(1000, 24)
2025-09-21 19:10:42,939:INFO:assign_model() successfully completed......................................
2025-09-21 19:10:42,945:INFO:Initializing create_model()
2025-09-21 19:10:42,945:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:10:42,945:INFO:Checking exceptions
2025-09-21 19:10:43,052:INFO:Importing untrained model
2025-09-21 19:10:43,061:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:10:43,071:INFO:Fitting Model
2025-09-21 19:10:43,325:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:10:43,325:INFO:create_models() successfully completed......................................
2025-09-21 19:10:43,334:INFO:Uploading results into container
2025-09-21 19:10:43,334:INFO:Uploading model into container now
2025-09-21 19:10:43,344:INFO:_master_model_container: 2
2025-09-21 19:10:43,344:INFO:_display_container: 3
2025-09-21 19:10:43,344:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:10:43,344:INFO:create_model() successfully completed......................................
2025-09-21 19:10:43,561:INFO:Initializing assign_model()
2025-09-21 19:10:43,561:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:10:43,561:INFO:Checking exceptions
2025-09-21 19:10:43,562:INFO:Determining Trained Model
2025-09-21 19:10:43,562:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:10:43,562:INFO:Copying data
2025-09-21 19:10:43,566:INFO:(1000, 24)
2025-09-21 19:10:43,566:INFO:assign_model() successfully completed......................................
2025-09-21 19:10:43,570:INFO:Initializing create_model()
2025-09-21 19:10:43,571:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:10:43,571:INFO:Checking exceptions
2025-09-21 19:10:43,664:INFO:Importing untrained model
2025-09-21 19:10:43,674:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:10:43,687:INFO:Fitting Model
2025-09-21 19:10:43,908:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:10:43,911:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:10:43,913:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:10:43,914:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:10:43,914:INFO:create_models() successfully completed......................................
2025-09-21 19:10:43,920:INFO:Uploading results into container
2025-09-21 19:10:43,921:INFO:Uploading model into container now
2025-09-21 19:10:43,933:INFO:_master_model_container: 3
2025-09-21 19:10:43,933:INFO:_display_container: 4
2025-09-21 19:10:43,934:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:10:43,934:INFO:create_model() successfully completed......................................
2025-09-21 19:10:44,176:INFO:Initializing assign_model()
2025-09-21 19:10:44,176:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:10:44,176:INFO:Checking exceptions
2025-09-21 19:10:44,176:INFO:Determining Trained Model
2025-09-21 19:10:44,176:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:10:44,177:INFO:Copying data
2025-09-21 19:10:44,180:INFO:(1000, 24)
2025-09-21 19:10:44,180:INFO:assign_model() successfully completed......................................
2025-09-21 19:10:44,180:INFO:Initializing create_model()
2025-09-21 19:10:44,180:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:10:44,180:INFO:Checking exceptions
2025-09-21 19:10:44,257:INFO:Importing untrained model
2025-09-21 19:10:44,266:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:10:44,282:INFO:Fitting Model
2025-09-21 19:10:45,555:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:10:45,557:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:10:45,559:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:10:45,561:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:10:45,561:INFO:create_models() successfully completed......................................
2025-09-21 19:10:45,567:INFO:Uploading results into container
2025-09-21 19:10:45,568:INFO:Uploading model into container now
2025-09-21 19:10:45,576:INFO:_master_model_container: 4
2025-09-21 19:10:45,576:INFO:_display_container: 5
2025-09-21 19:10:45,576:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:10:45,576:INFO:create_model() successfully completed......................................
2025-09-21 19:10:45,794:INFO:Initializing assign_model()
2025-09-21 19:10:45,794:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFE662F50>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:10:45,794:INFO:Checking exceptions
2025-09-21 19:10:45,794:INFO:Determining Trained Model
2025-09-21 19:10:45,796:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:10:45,796:INFO:Copying data
2025-09-21 19:10:45,798:INFO:(1000, 24)
2025-09-21 19:10:45,798:INFO:assign_model() successfully completed......................................
2025-09-21 19:11:36,260:INFO:PyCaret ClusteringExperiment
2025-09-21 19:11:36,260:INFO:Logging name: cluster-default-name
2025-09-21 19:11:36,260:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:11:36,260:INFO:version 3.3.2
2025-09-21 19:11:36,260:INFO:Initializing setup()
2025-09-21 19:11:36,262:INFO:self.USI: 5de9
2025-09-21 19:11:36,262:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:11:36,262:INFO:Checking environment
2025-09-21 19:11:36,262:INFO:python_version: 3.10.18
2025-09-21 19:11:36,262:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:11:36,262:INFO:machine: AMD64
2025-09-21 19:11:36,262:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:11:36,262:INFO:Memory: svmem(total=16486035456, available=8374480896, percent=49.2, used=8111554560, free=8374480896)
2025-09-21 19:11:36,262:INFO:Physical Core: 8
2025-09-21 19:11:36,262:INFO:Logical Core: 16
2025-09-21 19:11:36,262:INFO:Checking libraries
2025-09-21 19:11:36,262:INFO:System:
2025-09-21 19:11:36,262:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:11:36,262:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:11:36,262:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:11:36,262:INFO:PyCaret required dependencies:
2025-09-21 19:11:36,262:INFO:                 pip: 25.2
2025-09-21 19:11:36,262:INFO:          setuptools: 78.1.1
2025-09-21 19:11:36,262:INFO:             pycaret: 3.3.2
2025-09-21 19:11:36,262:INFO:             IPython: 8.37.0
2025-09-21 19:11:36,262:INFO:          ipywidgets: 8.1.7
2025-09-21 19:11:36,262:INFO:                tqdm: 4.67.1
2025-09-21 19:11:36,262:INFO:               numpy: 1.26.4
2025-09-21 19:11:36,262:INFO:              pandas: 2.1.4
2025-09-21 19:11:36,262:INFO:              jinja2: 3.1.6
2025-09-21 19:11:36,262:INFO:               scipy: 1.11.4
2025-09-21 19:11:36,262:INFO:              joblib: 1.3.2
2025-09-21 19:11:36,262:INFO:             sklearn: 1.4.2
2025-09-21 19:11:36,262:INFO:                pyod: 2.0.5
2025-09-21 19:11:36,262:INFO:            imblearn: 0.14.0
2025-09-21 19:11:36,264:INFO:   category_encoders: 2.7.0
2025-09-21 19:11:36,264:INFO:            lightgbm: 4.6.0
2025-09-21 19:11:36,264:INFO:               numba: 0.61.0
2025-09-21 19:11:36,264:INFO:            requests: 2.32.5
2025-09-21 19:11:36,264:INFO:          matplotlib: 3.7.5
2025-09-21 19:11:36,264:INFO:          scikitplot: 0.3.7
2025-09-21 19:11:36,264:INFO:         yellowbrick: 1.5
2025-09-21 19:11:36,264:INFO:              plotly: 5.24.1
2025-09-21 19:11:36,264:INFO:    plotly-resampler: Not installed
2025-09-21 19:11:36,264:INFO:             kaleido: 1.1.0
2025-09-21 19:11:36,264:INFO:           schemdraw: 0.15
2025-09-21 19:11:36,264:INFO:         statsmodels: 0.14.5
2025-09-21 19:11:36,264:INFO:              sktime: 0.26.0
2025-09-21 19:11:36,264:INFO:               tbats: 1.1.3
2025-09-21 19:11:36,266:INFO:            pmdarima: 2.0.4
2025-09-21 19:11:36,266:INFO:              psutil: 7.1.0
2025-09-21 19:11:36,266:INFO:          markupsafe: 3.0.2
2025-09-21 19:11:36,266:INFO:             pickle5: Not installed
2025-09-21 19:11:36,266:INFO:         cloudpickle: 3.1.1
2025-09-21 19:11:36,266:INFO:         deprecation: 2.1.0
2025-09-21 19:11:36,266:INFO:              xxhash: 3.5.0
2025-09-21 19:11:36,266:INFO:           wurlitzer: Not installed
2025-09-21 19:11:36,266:INFO:PyCaret optional dependencies:
2025-09-21 19:11:36,266:INFO:                shap: 0.44.1
2025-09-21 19:11:36,266:INFO:           interpret: 0.7.2
2025-09-21 19:11:36,266:INFO:                umap: 0.5.7
2025-09-21 19:11:36,266:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:11:36,266:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:11:36,266:INFO:             autoviz: Not installed
2025-09-21 19:11:36,266:INFO:           fairlearn: 0.7.0
2025-09-21 19:11:36,266:INFO:          deepchecks: Not installed
2025-09-21 19:11:36,266:INFO:             xgboost: 3.0.5
2025-09-21 19:11:36,268:INFO:            catboost: 1.2.8
2025-09-21 19:11:36,268:INFO:              kmodes: 0.12.2
2025-09-21 19:11:36,268:INFO:             mlxtend: 0.23.4
2025-09-21 19:11:36,268:INFO:       statsforecast: 1.5.0
2025-09-21 19:11:36,268:INFO:        tune_sklearn: Not installed
2025-09-21 19:11:36,268:INFO:                 ray: Not installed
2025-09-21 19:11:36,268:INFO:            hyperopt: 0.2.7
2025-09-21 19:11:36,268:INFO:              optuna: 4.5.0
2025-09-21 19:11:36,268:INFO:               skopt: 0.10.2
2025-09-21 19:11:36,268:INFO:              mlflow: 3.4.0
2025-09-21 19:11:36,268:INFO:              gradio: 5.46.1
2025-09-21 19:11:36,268:INFO:             fastapi: 0.117.1
2025-09-21 19:11:36,268:INFO:             uvicorn: 0.36.0
2025-09-21 19:11:36,268:INFO:              m2cgen: 0.10.0
2025-09-21 19:11:36,268:INFO:           evidently: 0.4.40
2025-09-21 19:11:36,268:INFO:               fugue: 0.8.7
2025-09-21 19:11:36,268:INFO:           streamlit: Not installed
2025-09-21 19:11:36,268:INFO:             prophet: Not installed
2025-09-21 19:11:36,268:INFO:None
2025-09-21 19:11:36,268:INFO:Set up data.
2025-09-21 19:11:36,280:INFO:Set up index.
2025-09-21 19:11:36,280:INFO:Assigning column types.
2025-09-21 19:11:36,287:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:11:36,287:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:11:36,287:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:11:36,287:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:11:36,287:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:11:36,287:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:11:36,290:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:11:36,290:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:11:36,292:INFO:Preparing preprocessing pipeline...
2025-09-21 19:11:36,292:INFO:Set up simple imputation.
2025-09-21 19:11:36,297:INFO:Set up encoding of ordinal features.
2025-09-21 19:11:36,301:INFO:Set up encoding of categorical features.
2025-09-21 19:11:36,301:INFO:Set up feature normalization.
2025-09-21 19:11:36,450:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:11:36,483:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                 TransformerWrapper(include=['Procedencia', 'Tipo_viajero',
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReputaciÃ³n_online', 'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:11:36,483:INFO:Creating final display dataframe.
2025-09-21 19:11:36,520:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 44)
3            Ignore features                     1
4           Numeric features                     4
5       Categorical features                     9
6                 Preprocess                  True
7            Imputation type                simple
8         Numeric imputation                  mean
9     Categorical imputation                  mode
10  Maximum one-hot encoding                    -1
11           Encoding method                  None
12                 Normalize                  True
13          Normalize method                zscore
14                  CPU Jobs                    -1
15                   Use GPU                 False
16            Log Experiment                 False
17           Experiment Name  cluster-default-name
18                       USI                  5de9
2025-09-21 19:11:36,520:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:11:36,520:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:11:36,520:INFO:setup() successfully completed in 0.27s...............
2025-09-21 19:11:36,531:INFO:Initializing create_model()
2025-09-21 19:11:36,531:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:11:36,531:INFO:Checking exceptions
2025-09-21 19:11:36,626:INFO:Importing untrained model
2025-09-21 19:11:36,637:INFO:K-Means Clustering Imported successfully
2025-09-21 19:11:36,668:INFO:Fitting Model
2025-09-21 19:11:36,876:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:11:36,876:INFO:create_models() successfully completed......................................
2025-09-21 19:11:36,884:INFO:Uploading results into container
2025-09-21 19:11:36,884:INFO:Uploading model into container now
2025-09-21 19:11:36,895:INFO:_master_model_container: 1
2025-09-21 19:11:36,895:INFO:_display_container: 2
2025-09-21 19:11:36,895:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:11:36,897:INFO:create_model() successfully completed......................................
2025-09-21 19:11:37,110:INFO:Initializing assign_model()
2025-09-21 19:11:37,110:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:11:37,110:INFO:Checking exceptions
2025-09-21 19:11:37,110:INFO:Determining Trained Model
2025-09-21 19:11:37,110:INFO:Trained Model : K-Means Clustering
2025-09-21 19:11:37,110:INFO:Copying data
2025-09-21 19:11:37,110:INFO:(1000, 24)
2025-09-21 19:11:37,110:INFO:assign_model() successfully completed......................................
2025-09-21 19:11:37,119:INFO:Initializing create_model()
2025-09-21 19:11:37,119:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:11:37,119:INFO:Checking exceptions
2025-09-21 19:11:37,204:INFO:Importing untrained model
2025-09-21 19:11:37,209:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:11:37,220:INFO:Fitting Model
2025-09-21 19:11:37,435:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:11:37,435:INFO:create_models() successfully completed......................................
2025-09-21 19:11:37,451:INFO:Uploading results into container
2025-09-21 19:11:37,451:INFO:Uploading model into container now
2025-09-21 19:11:37,460:INFO:_master_model_container: 2
2025-09-21 19:11:37,461:INFO:_display_container: 3
2025-09-21 19:11:37,461:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:11:37,461:INFO:create_model() successfully completed......................................
2025-09-21 19:11:37,680:INFO:Initializing assign_model()
2025-09-21 19:11:37,680:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:11:37,680:INFO:Checking exceptions
2025-09-21 19:11:37,680:INFO:Determining Trained Model
2025-09-21 19:11:37,680:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:11:37,681:INFO:Copying data
2025-09-21 19:11:37,683:INFO:(1000, 24)
2025-09-21 19:11:37,685:INFO:assign_model() successfully completed......................................
2025-09-21 19:11:37,687:INFO:Initializing create_model()
2025-09-21 19:11:37,688:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:11:37,688:INFO:Checking exceptions
2025-09-21 19:11:37,792:INFO:Importing untrained model
2025-09-21 19:11:37,801:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:11:37,812:INFO:Fitting Model
2025-09-21 19:11:38,006:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:11:38,009:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:11:38,011:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:11:38,012:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:11:38,012:INFO:create_models() successfully completed......................................
2025-09-21 19:11:38,018:INFO:Uploading results into container
2025-09-21 19:11:38,019:INFO:Uploading model into container now
2025-09-21 19:11:38,028:INFO:_master_model_container: 3
2025-09-21 19:11:38,028:INFO:_display_container: 4
2025-09-21 19:11:38,029:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:11:38,029:INFO:create_model() successfully completed......................................
2025-09-21 19:11:38,252:INFO:Initializing assign_model()
2025-09-21 19:11:38,252:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:11:38,252:INFO:Checking exceptions
2025-09-21 19:11:38,252:INFO:Determining Trained Model
2025-09-21 19:11:38,252:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:11:38,252:INFO:Copying data
2025-09-21 19:11:38,254:INFO:(1000, 24)
2025-09-21 19:11:38,254:INFO:assign_model() successfully completed......................................
2025-09-21 19:11:38,255:INFO:Initializing create_model()
2025-09-21 19:11:38,255:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:11:38,255:INFO:Checking exceptions
2025-09-21 19:11:38,331:INFO:Importing untrained model
2025-09-21 19:11:38,338:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:11:38,350:INFO:Fitting Model
2025-09-21 19:11:39,601:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:11:39,604:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:11:39,606:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:11:39,607:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:11:39,607:INFO:create_models() successfully completed......................................
2025-09-21 19:11:39,614:INFO:Uploading results into container
2025-09-21 19:11:39,615:INFO:Uploading model into container now
2025-09-21 19:11:39,626:INFO:_master_model_container: 4
2025-09-21 19:11:39,627:INFO:_display_container: 5
2025-09-21 19:11:39,627:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:11:39,628:INFO:create_model() successfully completed......................................
2025-09-21 19:11:39,844:INFO:Initializing assign_model()
2025-09-21 19:11:39,844:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEAC0100>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:11:39,844:INFO:Checking exceptions
2025-09-21 19:11:39,844:INFO:Determining Trained Model
2025-09-21 19:11:39,844:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:11:39,845:INFO:Copying data
2025-09-21 19:11:39,847:INFO:(1000, 24)
2025-09-21 19:11:39,847:INFO:assign_model() successfully completed......................................
2025-09-21 19:13:22,273:INFO:PyCaret ClusteringExperiment
2025-09-21 19:13:22,274:INFO:Logging name: cluster-default-name
2025-09-21 19:13:22,274:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:13:22,274:INFO:version 3.3.2
2025-09-21 19:13:22,274:INFO:Initializing setup()
2025-09-21 19:13:22,274:INFO:self.USI: 7444
2025-09-21 19:13:22,274:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:13:22,274:INFO:Checking environment
2025-09-21 19:13:22,274:INFO:python_version: 3.10.18
2025-09-21 19:13:22,276:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:13:22,276:INFO:machine: AMD64
2025-09-21 19:13:22,276:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:13:22,277:INFO:Memory: svmem(total=16486035456, available=8422113280, percent=48.9, used=8063922176, free=8422113280)
2025-09-21 19:13:22,277:INFO:Physical Core: 8
2025-09-21 19:13:22,277:INFO:Logical Core: 16
2025-09-21 19:13:22,277:INFO:Checking libraries
2025-09-21 19:13:22,277:INFO:System:
2025-09-21 19:13:22,277:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:13:22,277:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:13:22,277:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:13:22,277:INFO:PyCaret required dependencies:
2025-09-21 19:13:22,278:INFO:                 pip: 25.2
2025-09-21 19:13:22,278:INFO:          setuptools: 78.1.1
2025-09-21 19:13:22,278:INFO:             pycaret: 3.3.2
2025-09-21 19:13:22,278:INFO:             IPython: 8.37.0
2025-09-21 19:13:22,278:INFO:          ipywidgets: 8.1.7
2025-09-21 19:13:22,278:INFO:                tqdm: 4.67.1
2025-09-21 19:13:22,278:INFO:               numpy: 1.26.4
2025-09-21 19:13:22,278:INFO:              pandas: 2.1.4
2025-09-21 19:13:22,279:INFO:              jinja2: 3.1.6
2025-09-21 19:13:22,279:INFO:               scipy: 1.11.4
2025-09-21 19:13:22,279:INFO:              joblib: 1.3.2
2025-09-21 19:13:22,279:INFO:             sklearn: 1.4.2
2025-09-21 19:13:22,279:INFO:                pyod: 2.0.5
2025-09-21 19:13:22,279:INFO:            imblearn: 0.14.0
2025-09-21 19:13:22,279:INFO:   category_encoders: 2.7.0
2025-09-21 19:13:22,279:INFO:            lightgbm: 4.6.0
2025-09-21 19:13:22,279:INFO:               numba: 0.61.0
2025-09-21 19:13:22,279:INFO:            requests: 2.32.5
2025-09-21 19:13:22,279:INFO:          matplotlib: 3.7.5
2025-09-21 19:13:22,279:INFO:          scikitplot: 0.3.7
2025-09-21 19:13:22,279:INFO:         yellowbrick: 1.5
2025-09-21 19:13:22,279:INFO:              plotly: 5.24.1
2025-09-21 19:13:22,281:INFO:    plotly-resampler: Not installed
2025-09-21 19:13:22,281:INFO:             kaleido: 1.1.0
2025-09-21 19:13:22,281:INFO:           schemdraw: 0.15
2025-09-21 19:13:22,281:INFO:         statsmodels: 0.14.5
2025-09-21 19:13:22,281:INFO:              sktime: 0.26.0
2025-09-21 19:13:22,281:INFO:               tbats: 1.1.3
2025-09-21 19:13:22,281:INFO:            pmdarima: 2.0.4
2025-09-21 19:13:22,281:INFO:              psutil: 7.1.0
2025-09-21 19:13:22,281:INFO:          markupsafe: 3.0.2
2025-09-21 19:13:22,281:INFO:             pickle5: Not installed
2025-09-21 19:13:22,281:INFO:         cloudpickle: 3.1.1
2025-09-21 19:13:22,281:INFO:         deprecation: 2.1.0
2025-09-21 19:13:22,281:INFO:              xxhash: 3.5.0
2025-09-21 19:13:22,281:INFO:           wurlitzer: Not installed
2025-09-21 19:13:22,282:INFO:PyCaret optional dependencies:
2025-09-21 19:13:22,282:INFO:                shap: 0.44.1
2025-09-21 19:13:22,282:INFO:           interpret: 0.7.2
2025-09-21 19:13:22,282:INFO:                umap: 0.5.7
2025-09-21 19:13:22,282:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:13:22,282:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:13:22,282:INFO:             autoviz: Not installed
2025-09-21 19:13:22,282:INFO:           fairlearn: 0.7.0
2025-09-21 19:13:22,283:INFO:          deepchecks: Not installed
2025-09-21 19:13:22,283:INFO:             xgboost: 3.0.5
2025-09-21 19:13:22,283:INFO:            catboost: 1.2.8
2025-09-21 19:13:22,283:INFO:              kmodes: 0.12.2
2025-09-21 19:13:22,283:INFO:             mlxtend: 0.23.4
2025-09-21 19:13:22,283:INFO:       statsforecast: 1.5.0
2025-09-21 19:13:22,283:INFO:        tune_sklearn: Not installed
2025-09-21 19:13:22,283:INFO:                 ray: Not installed
2025-09-21 19:13:22,284:INFO:            hyperopt: 0.2.7
2025-09-21 19:13:22,284:INFO:              optuna: 4.5.0
2025-09-21 19:13:22,284:INFO:               skopt: 0.10.2
2025-09-21 19:13:22,284:INFO:              mlflow: 3.4.0
2025-09-21 19:13:22,285:INFO:              gradio: 5.46.1
2025-09-21 19:13:22,285:INFO:             fastapi: 0.117.1
2025-09-21 19:13:22,285:INFO:             uvicorn: 0.36.0
2025-09-21 19:13:22,285:INFO:              m2cgen: 0.10.0
2025-09-21 19:13:22,285:INFO:           evidently: 0.4.40
2025-09-21 19:13:22,286:INFO:               fugue: 0.8.7
2025-09-21 19:13:22,286:INFO:           streamlit: Not installed
2025-09-21 19:13:22,286:INFO:             prophet: Not installed
2025-09-21 19:13:22,286:INFO:None
2025-09-21 19:13:22,287:INFO:Set up data.
2025-09-21 19:13:22,292:INFO:Set up index.
2025-09-21 19:13:22,292:INFO:Assigning column types.
2025-09-21 19:13:22,295:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:13:22,295:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:13:22,296:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:13:22,296:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:13:22,296:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:13:22,296:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:13:22,297:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:13:22,297:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:13:22,299:INFO:Preparing preprocessing pipeline...
2025-09-21 19:13:22,299:INFO:Set up simple imputation.
2025-09-21 19:13:22,299:INFO:Set up feature normalization.
2025-09-21 19:13:22,341:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:13:22,353:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:13:22,353:INFO:Creating final display dataframe.
2025-09-21 19:13:22,431:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape             (1000, 4)
2   Transformed data shape             (1000, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  7444
2025-09-21 19:13:22,432:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:13:22,432:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:13:22,433:INFO:setup() successfully completed in 0.18s...............
2025-09-21 19:13:22,445:INFO:Initializing create_model()
2025-09-21 19:13:22,445:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:13:22,445:INFO:Checking exceptions
2025-09-21 19:13:22,541:INFO:Importing untrained model
2025-09-21 19:13:22,552:INFO:K-Means Clustering Imported successfully
2025-09-21 19:13:22,565:INFO:Fitting Model
2025-09-21 19:13:22,671:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:13:22,671:INFO:create_models() successfully completed......................................
2025-09-21 19:13:22,681:INFO:Uploading results into container
2025-09-21 19:13:22,682:INFO:Uploading model into container now
2025-09-21 19:13:22,698:INFO:_master_model_container: 1
2025-09-21 19:13:22,699:INFO:_display_container: 2
2025-09-21 19:13:22,700:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:13:22,700:INFO:create_model() successfully completed......................................
2025-09-21 19:13:22,997:INFO:Initializing assign_model()
2025-09-21 19:13:22,998:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:13:22,998:INFO:Checking exceptions
2025-09-21 19:13:22,998:INFO:Determining Trained Model
2025-09-21 19:13:22,998:INFO:Trained Model : K-Means Clustering
2025-09-21 19:13:22,998:INFO:Copying data
2025-09-21 19:13:23,000:INFO:(1000, 5)
2025-09-21 19:13:23,000:INFO:assign_model() successfully completed......................................
2025-09-21 19:13:23,037:INFO:Initializing create_model()
2025-09-21 19:13:23,037:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:13:23,037:INFO:Checking exceptions
2025-09-21 19:13:23,118:INFO:Importing untrained model
2025-09-21 19:13:23,129:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:13:23,139:INFO:Fitting Model
2025-09-21 19:13:23,232:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:13:23,232:INFO:create_models() successfully completed......................................
2025-09-21 19:13:23,242:INFO:Uploading results into container
2025-09-21 19:13:23,243:INFO:Uploading model into container now
2025-09-21 19:13:23,259:INFO:_master_model_container: 2
2025-09-21 19:13:23,259:INFO:_display_container: 3
2025-09-21 19:13:23,260:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:13:23,260:INFO:create_model() successfully completed......................................
2025-09-21 19:13:23,485:INFO:Initializing assign_model()
2025-09-21 19:13:23,485:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:13:23,485:INFO:Checking exceptions
2025-09-21 19:13:23,485:INFO:Determining Trained Model
2025-09-21 19:13:23,486:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:13:23,486:INFO:Copying data
2025-09-21 19:13:23,489:INFO:(1000, 5)
2025-09-21 19:13:23,489:INFO:assign_model() successfully completed......................................
2025-09-21 19:13:23,530:INFO:Initializing create_model()
2025-09-21 19:13:23,530:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:13:23,530:INFO:Checking exceptions
2025-09-21 19:13:23,611:INFO:Importing untrained model
2025-09-21 19:13:23,624:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:13:23,632:INFO:Fitting Model
2025-09-21 19:13:23,804:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:13:23,804:INFO:create_models() successfully completed......................................
2025-09-21 19:13:23,810:INFO:Uploading results into container
2025-09-21 19:13:23,812:INFO:Uploading model into container now
2025-09-21 19:13:23,825:INFO:_master_model_container: 3
2025-09-21 19:13:23,826:INFO:_display_container: 4
2025-09-21 19:13:23,827:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:13:23,827:INFO:create_model() successfully completed......................................
2025-09-21 19:13:24,051:INFO:Initializing assign_model()
2025-09-21 19:13:24,051:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:13:24,051:INFO:Checking exceptions
2025-09-21 19:13:24,051:INFO:Determining Trained Model
2025-09-21 19:13:24,052:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:13:24,052:INFO:Copying data
2025-09-21 19:13:24,056:INFO:(1000, 5)
2025-09-21 19:13:24,056:INFO:assign_model() successfully completed......................................
2025-09-21 19:13:24,117:INFO:Initializing create_model()
2025-09-21 19:13:24,117:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:13:24,117:INFO:Checking exceptions
2025-09-21 19:13:24,200:INFO:Importing untrained model
2025-09-21 19:13:24,210:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:13:24,222:INFO:Fitting Model
2025-09-21 19:13:26,109:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:13:26,112:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:13:26,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:13:26,115:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:13:26,115:INFO:create_models() successfully completed......................................
2025-09-21 19:13:26,124:INFO:Uploading results into container
2025-09-21 19:13:26,125:INFO:Uploading model into container now
2025-09-21 19:13:26,136:INFO:_master_model_container: 4
2025-09-21 19:13:26,138:INFO:_display_container: 5
2025-09-21 19:13:26,139:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:13:26,139:INFO:create_model() successfully completed......................................
2025-09-21 19:13:26,343:INFO:Initializing assign_model()
2025-09-21 19:13:26,343:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFA6A6FB0>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:13:26,343:INFO:Checking exceptions
2025-09-21 19:13:26,343:INFO:Determining Trained Model
2025-09-21 19:13:26,343:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:13:26,343:INFO:Copying data
2025-09-21 19:13:26,345:INFO:(1000, 5)
2025-09-21 19:13:26,346:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:42,301:INFO:PyCaret ClusteringExperiment
2025-09-21 19:16:42,302:INFO:Logging name: cluster-default-name
2025-09-21 19:16:42,302:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:16:42,302:INFO:version 3.3.2
2025-09-21 19:16:42,302:INFO:Initializing setup()
2025-09-21 19:16:42,302:INFO:self.USI: 52b4
2025-09-21 19:16:42,302:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:16:42,302:INFO:Checking environment
2025-09-21 19:16:42,302:INFO:python_version: 3.10.18
2025-09-21 19:16:42,302:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:16:42,302:INFO:machine: AMD64
2025-09-21 19:16:42,302:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:16:42,304:INFO:Memory: svmem(total=16486035456, available=8473554944, percent=48.6, used=8012480512, free=8473554944)
2025-09-21 19:16:42,304:INFO:Physical Core: 8
2025-09-21 19:16:42,304:INFO:Logical Core: 16
2025-09-21 19:16:42,304:INFO:Checking libraries
2025-09-21 19:16:42,304:INFO:System:
2025-09-21 19:16:42,304:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:16:42,304:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:16:42,304:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:16:42,305:INFO:PyCaret required dependencies:
2025-09-21 19:16:42,305:INFO:                 pip: 25.2
2025-09-21 19:16:42,306:INFO:          setuptools: 78.1.1
2025-09-21 19:16:42,306:INFO:             pycaret: 3.3.2
2025-09-21 19:16:42,307:INFO:             IPython: 8.37.0
2025-09-21 19:16:42,307:INFO:          ipywidgets: 8.1.7
2025-09-21 19:16:42,307:INFO:                tqdm: 4.67.1
2025-09-21 19:16:42,307:INFO:               numpy: 1.26.4
2025-09-21 19:16:42,307:INFO:              pandas: 2.1.4
2025-09-21 19:16:42,308:INFO:              jinja2: 3.1.6
2025-09-21 19:16:42,308:INFO:               scipy: 1.11.4
2025-09-21 19:16:42,308:INFO:              joblib: 1.3.2
2025-09-21 19:16:42,308:INFO:             sklearn: 1.4.2
2025-09-21 19:16:42,308:INFO:                pyod: 2.0.5
2025-09-21 19:16:42,308:INFO:            imblearn: 0.14.0
2025-09-21 19:16:42,308:INFO:   category_encoders: 2.7.0
2025-09-21 19:16:42,308:INFO:            lightgbm: 4.6.0
2025-09-21 19:16:42,309:INFO:               numba: 0.61.0
2025-09-21 19:16:42,309:INFO:            requests: 2.32.5
2025-09-21 19:16:42,309:INFO:          matplotlib: 3.7.5
2025-09-21 19:16:42,309:INFO:          scikitplot: 0.3.7
2025-09-21 19:16:42,309:INFO:         yellowbrick: 1.5
2025-09-21 19:16:42,309:INFO:              plotly: 5.24.1
2025-09-21 19:16:42,309:INFO:    plotly-resampler: Not installed
2025-09-21 19:16:42,309:INFO:             kaleido: 1.1.0
2025-09-21 19:16:42,309:INFO:           schemdraw: 0.15
2025-09-21 19:16:42,310:INFO:         statsmodels: 0.14.5
2025-09-21 19:16:42,310:INFO:              sktime: 0.26.0
2025-09-21 19:16:42,310:INFO:               tbats: 1.1.3
2025-09-21 19:16:42,310:INFO:            pmdarima: 2.0.4
2025-09-21 19:16:42,310:INFO:              psutil: 7.1.0
2025-09-21 19:16:42,310:INFO:          markupsafe: 3.0.2
2025-09-21 19:16:42,310:INFO:             pickle5: Not installed
2025-09-21 19:16:42,310:INFO:         cloudpickle: 3.1.1
2025-09-21 19:16:42,310:INFO:         deprecation: 2.1.0
2025-09-21 19:16:42,310:INFO:              xxhash: 3.5.0
2025-09-21 19:16:42,310:INFO:           wurlitzer: Not installed
2025-09-21 19:16:42,311:INFO:PyCaret optional dependencies:
2025-09-21 19:16:42,311:INFO:                shap: 0.44.1
2025-09-21 19:16:42,311:INFO:           interpret: 0.7.2
2025-09-21 19:16:42,311:INFO:                umap: 0.5.7
2025-09-21 19:16:42,311:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:16:42,311:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:16:42,311:INFO:             autoviz: Not installed
2025-09-21 19:16:42,311:INFO:           fairlearn: 0.7.0
2025-09-21 19:16:42,311:INFO:          deepchecks: Not installed
2025-09-21 19:16:42,311:INFO:             xgboost: 3.0.5
2025-09-21 19:16:42,311:INFO:            catboost: 1.2.8
2025-09-21 19:16:42,311:INFO:              kmodes: 0.12.2
2025-09-21 19:16:42,311:INFO:             mlxtend: 0.23.4
2025-09-21 19:16:42,311:INFO:       statsforecast: 1.5.0
2025-09-21 19:16:42,312:INFO:        tune_sklearn: Not installed
2025-09-21 19:16:42,312:INFO:                 ray: Not installed
2025-09-21 19:16:42,312:INFO:            hyperopt: 0.2.7
2025-09-21 19:16:42,312:INFO:              optuna: 4.5.0
2025-09-21 19:16:42,312:INFO:               skopt: 0.10.2
2025-09-21 19:16:42,312:INFO:              mlflow: 3.4.0
2025-09-21 19:16:42,312:INFO:              gradio: 5.46.1
2025-09-21 19:16:42,312:INFO:             fastapi: 0.117.1
2025-09-21 19:16:42,312:INFO:             uvicorn: 0.36.0
2025-09-21 19:16:42,312:INFO:              m2cgen: 0.10.0
2025-09-21 19:16:42,312:INFO:           evidently: 0.4.40
2025-09-21 19:16:42,312:INFO:               fugue: 0.8.7
2025-09-21 19:16:42,312:INFO:           streamlit: Not installed
2025-09-21 19:16:42,312:INFO:             prophet: Not installed
2025-09-21 19:16:42,312:INFO:None
2025-09-21 19:16:42,313:INFO:Set up data.
2025-09-21 19:16:42,317:INFO:Set up index.
2025-09-21 19:16:42,318:INFO:Assigning column types.
2025-09-21 19:16:42,324:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:16:42,324:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:16:42,325:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:16:42,325:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:16:42,325:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:16:42,325:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:16:42,326:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:16:42,326:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:16:42,329:INFO:Preparing preprocessing pipeline...
2025-09-21 19:16:42,330:INFO:Set up simple imputation.
2025-09-21 19:16:42,330:INFO:Set up feature normalization.
2025-09-21 19:16:42,371:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:16:42,379:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:16:42,380:INFO:Creating final display dataframe.
2025-09-21 19:16:42,418:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape             (1000, 4)
2   Transformed data shape             (1000, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  52b4
2025-09-21 19:16:42,418:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:16:42,419:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:16:42,419:INFO:setup() successfully completed in 0.13s...............
2025-09-21 19:16:42,427:INFO:Initializing create_model()
2025-09-21 19:16:42,428:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:16:42,428:INFO:Checking exceptions
2025-09-21 19:16:42,529:INFO:Importing untrained model
2025-09-21 19:16:42,543:INFO:K-Means Clustering Imported successfully
2025-09-21 19:16:42,556:INFO:Fitting Model
2025-09-21 19:16:42,648:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:16:42,649:INFO:create_models() successfully completed......................................
2025-09-21 19:16:42,661:INFO:Uploading results into container
2025-09-21 19:16:42,664:INFO:Uploading model into container now
2025-09-21 19:16:42,679:INFO:_master_model_container: 1
2025-09-21 19:16:42,679:INFO:_display_container: 2
2025-09-21 19:16:42,680:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:16:42,681:INFO:create_model() successfully completed......................................
2025-09-21 19:16:43,126:INFO:Initializing assign_model()
2025-09-21 19:16:43,126:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:16:43,126:INFO:Checking exceptions
2025-09-21 19:16:43,126:INFO:Determining Trained Model
2025-09-21 19:16:43,127:INFO:Trained Model : K-Means Clustering
2025-09-21 19:16:43,127:INFO:Copying data
2025-09-21 19:16:43,130:INFO:(1000, 5)
2025-09-21 19:16:43,130:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:43,181:INFO:Initializing create_model()
2025-09-21 19:16:43,182:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:16:43,182:INFO:Checking exceptions
2025-09-21 19:16:43,282:INFO:Importing untrained model
2025-09-21 19:16:43,297:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:16:43,310:INFO:Fitting Model
2025-09-21 19:16:43,418:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:16:43,418:INFO:create_models() successfully completed......................................
2025-09-21 19:16:43,431:INFO:Uploading results into container
2025-09-21 19:16:43,434:INFO:Uploading model into container now
2025-09-21 19:16:43,449:INFO:_master_model_container: 2
2025-09-21 19:16:43,449:INFO:_display_container: 3
2025-09-21 19:16:43,450:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:16:43,459:INFO:create_model() successfully completed......................................
2025-09-21 19:16:43,706:INFO:Initializing assign_model()
2025-09-21 19:16:43,706:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:16:43,706:INFO:Checking exceptions
2025-09-21 19:16:43,706:INFO:Determining Trained Model
2025-09-21 19:16:43,708:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:16:43,708:INFO:Copying data
2025-09-21 19:16:43,709:INFO:(1000, 5)
2025-09-21 19:16:43,709:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:43,743:INFO:Initializing create_model()
2025-09-21 19:16:43,743:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:16:43,743:INFO:Checking exceptions
2025-09-21 19:16:43,817:INFO:Importing untrained model
2025-09-21 19:16:43,829:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:16:43,835:INFO:Fitting Model
2025-09-21 19:16:43,946:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:16:43,946:INFO:create_models() successfully completed......................................
2025-09-21 19:16:43,955:INFO:Uploading results into container
2025-09-21 19:16:43,957:INFO:Uploading model into container now
2025-09-21 19:16:43,969:INFO:_master_model_container: 3
2025-09-21 19:16:43,969:INFO:_display_container: 4
2025-09-21 19:16:43,970:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:16:43,970:INFO:create_model() successfully completed......................................
2025-09-21 19:16:44,196:INFO:Initializing assign_model()
2025-09-21 19:16:44,198:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:16:44,198:INFO:Checking exceptions
2025-09-21 19:16:44,198:INFO:Determining Trained Model
2025-09-21 19:16:44,198:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:16:44,198:INFO:Copying data
2025-09-21 19:16:44,201:INFO:(1000, 5)
2025-09-21 19:16:44,201:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:44,258:INFO:Initializing create_model()
2025-09-21 19:16:44,258:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:16:44,263:INFO:Checking exceptions
2025-09-21 19:16:44,346:INFO:Importing untrained model
2025-09-21 19:16:44,357:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:16:44,366:INFO:Fitting Model
2025-09-21 19:16:46,581:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:16:46,584:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:16:46,587:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:16:46,587:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:16:46,588:INFO:create_models() successfully completed......................................
2025-09-21 19:16:46,597:INFO:Uploading results into container
2025-09-21 19:16:46,598:INFO:Uploading model into container now
2025-09-21 19:16:46,611:INFO:_master_model_container: 4
2025-09-21 19:16:46,611:INFO:_display_container: 5
2025-09-21 19:16:46,612:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:16:46,612:INFO:create_model() successfully completed......................................
2025-09-21 19:16:46,823:INFO:Initializing assign_model()
2025-09-21 19:16:46,823:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:16:46,823:INFO:Checking exceptions
2025-09-21 19:16:46,823:INFO:Determining Trained Model
2025-09-21 19:16:46,823:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:16:46,824:INFO:Copying data
2025-09-21 19:16:46,826:INFO:(1000, 5)
2025-09-21 19:16:46,826:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:46,829:INFO:Initializing create_model()
2025-09-21 19:16:46,829:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:16:46,830:INFO:Checking exceptions
2025-09-21 19:16:46,897:INFO:Importing untrained model
2025-09-21 19:16:46,907:INFO:K-Means Clustering Imported successfully
2025-09-21 19:16:46,917:INFO:Fitting Model
2025-09-21 19:16:47,041:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:16:47,041:INFO:create_models() successfully completed......................................
2025-09-21 19:16:47,050:INFO:Uploading results into container
2025-09-21 19:16:47,051:INFO:Uploading model into container now
2025-09-21 19:16:47,065:INFO:_master_model_container: 5
2025-09-21 19:16:47,066:INFO:_display_container: 6
2025-09-21 19:16:47,067:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:16:47,067:INFO:create_model() successfully completed......................................
2025-09-21 19:16:47,269:INFO:Initializing assign_model()
2025-09-21 19:16:47,269:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:16:47,269:INFO:Checking exceptions
2025-09-21 19:16:47,269:INFO:Determining Trained Model
2025-09-21 19:16:47,269:INFO:Trained Model : K-Means Clustering
2025-09-21 19:16:47,269:INFO:Copying data
2025-09-21 19:16:47,272:INFO:(1000, 5)
2025-09-21 19:16:47,272:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:47,305:INFO:Initializing plot_model()
2025-09-21 19:16:47,305:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=2, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, system=True)
2025-09-21 19:16:47,305:INFO:Checking exceptions
2025-09-21 19:16:47,311:INFO:Preloading libraries
2025-09-21 19:16:47,312:INFO:Copying training dataset
2025-09-21 19:16:47,312:INFO:Plot type: cluster
2025-09-21 19:16:47,312:INFO:SubProcess assign_model() called ==================================
2025-09-21 19:16:47,313:INFO:Initializing assign_model()
2025-09-21 19:16:47,313:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEFB4A90>, model=KMeans(n_clusters=2, random_state=123), transformation=True, score=True, verbose=False)
2025-09-21 19:16:47,313:INFO:Checking exceptions
2025-09-21 19:16:47,313:INFO:Determining Trained Model
2025-09-21 19:16:47,313:INFO:Trained Model : K-Means Clustering
2025-09-21 19:16:47,313:INFO:Copying data
2025-09-21 19:16:47,340:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-21 19:16:47,341:INFO:(1000, 5)
2025-09-21 19:16:47,341:INFO:assign_model() successfully completed......................................
2025-09-21 19:16:47,342:INFO:SubProcess assign_model() end ==================================
2025-09-21 19:16:47,344:INFO:Fitting PCA()
2025-09-21 19:16:47,348:INFO:Sorting dataframe
2025-09-21 19:16:47,351:INFO:Rendering Visual
2025-09-21 19:16:47,414:INFO:Visual Rendered Successfully
2025-09-21 19:16:47,674:INFO:plot_model() successfully completed......................................
2025-09-21 19:19:06,500:INFO:PyCaret ClusteringExperiment
2025-09-21 19:19:06,500:INFO:Logging name: cluster-default-name
2025-09-21 19:19:06,500:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:19:06,500:INFO:version 3.3.2
2025-09-21 19:19:06,500:INFO:Initializing setup()
2025-09-21 19:19:06,500:INFO:self.USI: bb2c
2025-09-21 19:19:06,501:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:19:06,501:INFO:Checking environment
2025-09-21 19:19:06,501:INFO:python_version: 3.10.18
2025-09-21 19:19:06,501:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:19:06,501:INFO:machine: AMD64
2025-09-21 19:19:06,501:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:19:06,501:INFO:Memory: svmem(total=16486035456, available=8435818496, percent=48.8, used=8050216960, free=8435818496)
2025-09-21 19:19:06,501:INFO:Physical Core: 8
2025-09-21 19:19:06,501:INFO:Logical Core: 16
2025-09-21 19:19:06,502:INFO:Checking libraries
2025-09-21 19:19:06,502:INFO:System:
2025-09-21 19:19:06,502:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:19:06,502:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:19:06,502:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:19:06,502:INFO:PyCaret required dependencies:
2025-09-21 19:19:06,502:INFO:                 pip: 25.2
2025-09-21 19:19:06,502:INFO:          setuptools: 78.1.1
2025-09-21 19:19:06,503:INFO:             pycaret: 3.3.2
2025-09-21 19:19:06,503:INFO:             IPython: 8.37.0
2025-09-21 19:19:06,503:INFO:          ipywidgets: 8.1.7
2025-09-21 19:19:06,503:INFO:                tqdm: 4.67.1
2025-09-21 19:19:06,503:INFO:               numpy: 1.26.4
2025-09-21 19:19:06,504:INFO:              pandas: 2.1.4
2025-09-21 19:19:06,504:INFO:              jinja2: 3.1.6
2025-09-21 19:19:06,504:INFO:               scipy: 1.11.4
2025-09-21 19:19:06,505:INFO:              joblib: 1.3.2
2025-09-21 19:19:06,505:INFO:             sklearn: 1.4.2
2025-09-21 19:19:06,505:INFO:                pyod: 2.0.5
2025-09-21 19:19:06,505:INFO:            imblearn: 0.14.0
2025-09-21 19:19:06,505:INFO:   category_encoders: 2.7.0
2025-09-21 19:19:06,505:INFO:            lightgbm: 4.6.0
2025-09-21 19:19:06,505:INFO:               numba: 0.61.0
2025-09-21 19:19:06,505:INFO:            requests: 2.32.5
2025-09-21 19:19:06,505:INFO:          matplotlib: 3.7.5
2025-09-21 19:19:06,505:INFO:          scikitplot: 0.3.7
2025-09-21 19:19:06,506:INFO:         yellowbrick: 1.5
2025-09-21 19:19:06,506:INFO:              plotly: 5.24.1
2025-09-21 19:19:06,506:INFO:    plotly-resampler: Not installed
2025-09-21 19:19:06,506:INFO:             kaleido: 1.1.0
2025-09-21 19:19:06,506:INFO:           schemdraw: 0.15
2025-09-21 19:19:06,506:INFO:         statsmodels: 0.14.5
2025-09-21 19:19:06,506:INFO:              sktime: 0.26.0
2025-09-21 19:19:06,506:INFO:               tbats: 1.1.3
2025-09-21 19:19:06,506:INFO:            pmdarima: 2.0.4
2025-09-21 19:19:06,506:INFO:              psutil: 7.1.0
2025-09-21 19:19:06,506:INFO:          markupsafe: 3.0.2
2025-09-21 19:19:06,507:INFO:             pickle5: Not installed
2025-09-21 19:19:06,507:INFO:         cloudpickle: 3.1.1
2025-09-21 19:19:06,507:INFO:         deprecation: 2.1.0
2025-09-21 19:19:06,507:INFO:              xxhash: 3.5.0
2025-09-21 19:19:06,508:INFO:           wurlitzer: Not installed
2025-09-21 19:19:06,508:INFO:PyCaret optional dependencies:
2025-09-21 19:19:06,508:INFO:                shap: 0.44.1
2025-09-21 19:19:06,508:INFO:           interpret: 0.7.2
2025-09-21 19:19:06,508:INFO:                umap: 0.5.7
2025-09-21 19:19:06,508:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:19:06,508:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:19:06,508:INFO:             autoviz: Not installed
2025-09-21 19:19:06,508:INFO:           fairlearn: 0.7.0
2025-09-21 19:19:06,509:INFO:          deepchecks: Not installed
2025-09-21 19:19:06,509:INFO:             xgboost: 3.0.5
2025-09-21 19:19:06,509:INFO:            catboost: 1.2.8
2025-09-21 19:19:06,509:INFO:              kmodes: 0.12.2
2025-09-21 19:19:06,509:INFO:             mlxtend: 0.23.4
2025-09-21 19:19:06,509:INFO:       statsforecast: 1.5.0
2025-09-21 19:19:06,509:INFO:        tune_sklearn: Not installed
2025-09-21 19:19:06,509:INFO:                 ray: Not installed
2025-09-21 19:19:06,509:INFO:            hyperopt: 0.2.7
2025-09-21 19:19:06,509:INFO:              optuna: 4.5.0
2025-09-21 19:19:06,509:INFO:               skopt: 0.10.2
2025-09-21 19:19:06,509:INFO:              mlflow: 3.4.0
2025-09-21 19:19:06,509:INFO:              gradio: 5.46.1
2025-09-21 19:19:06,509:INFO:             fastapi: 0.117.1
2025-09-21 19:19:06,509:INFO:             uvicorn: 0.36.0
2025-09-21 19:19:06,509:INFO:              m2cgen: 0.10.0
2025-09-21 19:19:06,509:INFO:           evidently: 0.4.40
2025-09-21 19:19:06,509:INFO:               fugue: 0.8.7
2025-09-21 19:19:06,509:INFO:           streamlit: Not installed
2025-09-21 19:19:06,509:INFO:             prophet: Not installed
2025-09-21 19:19:06,509:INFO:None
2025-09-21 19:19:06,511:INFO:Set up data.
2025-09-21 19:19:06,514:INFO:Set up index.
2025-09-21 19:19:06,515:INFO:Assigning column types.
2025-09-21 19:19:06,571:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:19:06,572:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:19:06,578:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:19:06,579:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:19:06,579:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:19:06,581:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:19:06,581:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:19:06,582:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:19:06,585:INFO:Preparing preprocessing pipeline...
2025-09-21 19:19:06,586:INFO:Set up simple imputation.
2025-09-21 19:19:06,586:INFO:Set up feature normalization.
2025-09-21 19:19:06,639:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:19:06,647:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:19:06,648:INFO:Creating final display dataframe.
2025-09-21 19:19:06,686:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape             (1000, 4)
2   Transformed data shape             (1000, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  bb2c
2025-09-21 19:19:06,687:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:19:06,687:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:19:06,688:INFO:setup() successfully completed in 0.2s...............
2025-09-21 19:19:06,696:INFO:Initializing create_model()
2025-09-21 19:19:06,696:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:06,696:INFO:Checking exceptions
2025-09-21 19:19:06,779:INFO:Importing untrained model
2025-09-21 19:19:06,793:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:06,803:INFO:Fitting Model
2025-09-21 19:19:06,898:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:19:06,899:INFO:create_models() successfully completed......................................
2025-09-21 19:19:06,909:INFO:Uploading results into container
2025-09-21 19:19:06,911:INFO:Uploading model into container now
2025-09-21 19:19:06,928:INFO:_master_model_container: 1
2025-09-21 19:19:06,928:INFO:_display_container: 2
2025-09-21 19:19:06,929:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:19:06,929:INFO:create_model() successfully completed......................................
2025-09-21 19:19:07,366:INFO:Initializing assign_model()
2025-09-21 19:19:07,366:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:07,366:INFO:Checking exceptions
2025-09-21 19:19:07,366:INFO:Determining Trained Model
2025-09-21 19:19:07,366:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:07,367:INFO:Copying data
2025-09-21 19:19:07,369:INFO:(1000, 5)
2025-09-21 19:19:07,369:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:07,416:INFO:Initializing create_model()
2025-09-21 19:19:07,416:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:07,416:INFO:Checking exceptions
2025-09-21 19:19:07,518:INFO:Importing untrained model
2025-09-21 19:19:07,530:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:19:07,542:INFO:Fitting Model
2025-09-21 19:19:07,643:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:19:07,643:INFO:create_models() successfully completed......................................
2025-09-21 19:19:07,659:INFO:Uploading results into container
2025-09-21 19:19:07,661:INFO:Uploading model into container now
2025-09-21 19:19:07,679:INFO:_master_model_container: 2
2025-09-21 19:19:07,680:INFO:_display_container: 3
2025-09-21 19:19:07,681:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:19:07,681:INFO:create_model() successfully completed......................................
2025-09-21 19:19:07,910:INFO:Initializing assign_model()
2025-09-21 19:19:07,910:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:19:07,910:INFO:Checking exceptions
2025-09-21 19:19:07,910:INFO:Determining Trained Model
2025-09-21 19:19:07,911:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:19:07,911:INFO:Copying data
2025-09-21 19:19:07,914:INFO:(1000, 5)
2025-09-21 19:19:07,914:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:07,950:INFO:Initializing create_model()
2025-09-21 19:19:07,950:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:07,950:INFO:Checking exceptions
2025-09-21 19:19:08,017:INFO:Importing untrained model
2025-09-21 19:19:08,025:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:19:08,033:INFO:Fitting Model
2025-09-21 19:19:08,160:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:19:08,161:INFO:create_models() successfully completed......................................
2025-09-21 19:19:08,169:INFO:Uploading results into container
2025-09-21 19:19:08,170:INFO:Uploading model into container now
2025-09-21 19:19:08,182:INFO:_master_model_container: 3
2025-09-21 19:19:08,182:INFO:_display_container: 4
2025-09-21 19:19:08,183:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:19:08,183:INFO:create_model() successfully completed......................................
2025-09-21 19:19:08,399:INFO:Initializing assign_model()
2025-09-21 19:19:08,399:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:19:08,399:INFO:Checking exceptions
2025-09-21 19:19:08,401:INFO:Determining Trained Model
2025-09-21 19:19:08,401:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:19:08,401:INFO:Copying data
2025-09-21 19:19:08,404:INFO:(1000, 5)
2025-09-21 19:19:08,405:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:08,469:INFO:Initializing create_model()
2025-09-21 19:19:08,469:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:08,469:INFO:Checking exceptions
2025-09-21 19:19:08,546:INFO:Importing untrained model
2025-09-21 19:19:08,556:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:19:08,566:INFO:Fitting Model
2025-09-21 19:19:10,848:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:19:10,852:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:19:10,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:19:10,855:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:19:10,855:INFO:create_models() successfully completed......................................
2025-09-21 19:19:10,867:INFO:Uploading results into container
2025-09-21 19:19:10,868:INFO:Uploading model into container now
2025-09-21 19:19:10,881:INFO:_master_model_container: 4
2025-09-21 19:19:10,881:INFO:_display_container: 5
2025-09-21 19:19:10,882:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:19:10,882:INFO:create_model() successfully completed......................................
2025-09-21 19:19:11,089:INFO:Initializing assign_model()
2025-09-21 19:19:11,091:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:19:11,091:INFO:Checking exceptions
2025-09-21 19:19:11,091:INFO:Determining Trained Model
2025-09-21 19:19:11,091:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:19:11,091:INFO:Copying data
2025-09-21 19:19:11,094:INFO:(1000, 5)
2025-09-21 19:19:11,094:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:11,098:INFO:Initializing create_model()
2025-09-21 19:19:11,100:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:11,100:INFO:Checking exceptions
2025-09-21 19:19:11,163:INFO:Importing untrained model
2025-09-21 19:19:11,170:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:11,178:INFO:Fitting Model
2025-09-21 19:19:11,246:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:19:11,246:INFO:create_models() successfully completed......................................
2025-09-21 19:19:11,254:INFO:Uploading results into container
2025-09-21 19:19:11,255:INFO:Uploading model into container now
2025-09-21 19:19:11,267:INFO:_master_model_container: 5
2025-09-21 19:19:11,267:INFO:_display_container: 6
2025-09-21 19:19:11,268:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:19:11,269:INFO:create_model() successfully completed......................................
2025-09-21 19:19:11,473:INFO:Initializing assign_model()
2025-09-21 19:19:11,473:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:11,474:INFO:Checking exceptions
2025-09-21 19:19:11,474:INFO:Determining Trained Model
2025-09-21 19:19:11,474:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:11,474:INFO:Copying data
2025-09-21 19:19:11,476:INFO:(1000, 5)
2025-09-21 19:19:11,476:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:11,512:INFO:Initializing plot_model()
2025-09-21 19:19:11,513:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=2, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, system=True)
2025-09-21 19:19:11,513:INFO:Checking exceptions
2025-09-21 19:19:11,517:INFO:Preloading libraries
2025-09-21 19:19:11,518:INFO:Copying training dataset
2025-09-21 19:19:11,518:INFO:Plot type: cluster
2025-09-21 19:19:11,518:INFO:SubProcess assign_model() called ==================================
2025-09-21 19:19:11,518:INFO:Initializing assign_model()
2025-09-21 19:19:11,519:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=2, random_state=123), transformation=True, score=True, verbose=False)
2025-09-21 19:19:11,519:INFO:Checking exceptions
2025-09-21 19:19:11,519:INFO:Determining Trained Model
2025-09-21 19:19:11,519:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:11,519:INFO:Copying data
2025-09-21 19:19:11,547:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-21 19:19:11,548:INFO:(1000, 5)
2025-09-21 19:19:11,549:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:11,549:INFO:SubProcess assign_model() end ==================================
2025-09-21 19:19:11,550:INFO:Fitting PCA()
2025-09-21 19:19:11,555:INFO:Sorting dataframe
2025-09-21 19:19:11,557:INFO:Rendering Visual
2025-09-21 19:19:11,618:INFO:Visual Rendered Successfully
2025-09-21 19:19:11,869:INFO:plot_model() successfully completed......................................
2025-09-21 19:19:11,869:INFO:Initializing create_model()
2025-09-21 19:19:11,870:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:11,870:INFO:Checking exceptions
2025-09-21 19:19:11,965:INFO:Importing untrained model
2025-09-21 19:19:11,978:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:11,988:INFO:Fitting Model
2025-09-21 19:19:12,061:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:19:12,062:INFO:create_models() successfully completed......................................
2025-09-21 19:19:12,070:INFO:Uploading results into container
2025-09-21 19:19:12,071:INFO:Uploading model into container now
2025-09-21 19:19:12,083:INFO:_master_model_container: 6
2025-09-21 19:19:12,084:INFO:_display_container: 7
2025-09-21 19:19:12,085:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:19:12,085:INFO:create_model() successfully completed......................................
2025-09-21 19:19:12,292:INFO:Initializing assign_model()
2025-09-21 19:19:12,292:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:12,292:INFO:Checking exceptions
2025-09-21 19:19:12,292:INFO:Determining Trained Model
2025-09-21 19:19:12,292:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:12,292:INFO:Copying data
2025-09-21 19:19:12,295:INFO:(1000, 5)
2025-09-21 19:19:12,295:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:12,329:INFO:Initializing create_model()
2025-09-21 19:19:12,329:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:12,329:INFO:Checking exceptions
2025-09-21 19:19:12,386:INFO:Importing untrained model
2025-09-21 19:19:12,394:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:12,402:INFO:Fitting Model
2025-09-21 19:19:12,488:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-21 19:19:12,488:INFO:create_models() successfully completed......................................
2025-09-21 19:19:12,496:INFO:Uploading results into container
2025-09-21 19:19:12,498:INFO:Uploading model into container now
2025-09-21 19:19:12,516:INFO:_master_model_container: 7
2025-09-21 19:19:12,517:INFO:_display_container: 8
2025-09-21 19:19:12,518:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-21 19:19:12,518:INFO:create_model() successfully completed......................................
2025-09-21 19:19:12,737:INFO:Initializing assign_model()
2025-09-21 19:19:12,737:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=3, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:12,738:INFO:Checking exceptions
2025-09-21 19:19:12,738:INFO:Determining Trained Model
2025-09-21 19:19:12,738:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:12,738:INFO:Copying data
2025-09-21 19:19:12,740:INFO:(1000, 5)
2025-09-21 19:19:12,740:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:12,774:INFO:Initializing create_model()
2025-09-21 19:19:12,775:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:12,775:INFO:Checking exceptions
2025-09-21 19:19:12,851:INFO:Importing untrained model
2025-09-21 19:19:12,860:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:12,870:INFO:Fitting Model
2025-09-21 19:19:13,004:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:19:13,004:INFO:create_models() successfully completed......................................
2025-09-21 19:19:13,018:INFO:Uploading results into container
2025-09-21 19:19:13,019:INFO:Uploading model into container now
2025-09-21 19:19:13,030:INFO:_master_model_container: 8
2025-09-21 19:19:13,031:INFO:_display_container: 9
2025-09-21 19:19:13,031:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:19:13,032:INFO:create_model() successfully completed......................................
2025-09-21 19:19:13,250:INFO:Initializing assign_model()
2025-09-21 19:19:13,251:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:13,251:INFO:Checking exceptions
2025-09-21 19:19:13,251:INFO:Determining Trained Model
2025-09-21 19:19:13,251:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:13,251:INFO:Copying data
2025-09-21 19:19:13,253:INFO:(1000, 5)
2025-09-21 19:19:13,253:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:13,286:INFO:Initializing create_model()
2025-09-21 19:19:13,287:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:13,287:INFO:Checking exceptions
2025-09-21 19:19:13,365:INFO:Importing untrained model
2025-09-21 19:19:13,374:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:13,386:INFO:Fitting Model
2025-09-21 19:19:13,477:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-21 19:19:13,477:INFO:create_models() successfully completed......................................
2025-09-21 19:19:13,483:INFO:Uploading results into container
2025-09-21 19:19:13,484:INFO:Uploading model into container now
2025-09-21 19:19:13,496:INFO:_master_model_container: 9
2025-09-21 19:19:13,496:INFO:_display_container: 10
2025-09-21 19:19:13,497:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-21 19:19:13,497:INFO:create_model() successfully completed......................................
2025-09-21 19:19:13,729:INFO:Initializing assign_model()
2025-09-21 19:19:13,729:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=5, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:13,729:INFO:Checking exceptions
2025-09-21 19:19:13,729:INFO:Determining Trained Model
2025-09-21 19:19:13,729:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:13,729:INFO:Copying data
2025-09-21 19:19:13,732:INFO:(1000, 5)
2025-09-21 19:19:13,732:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:13,779:INFO:Initializing create_model()
2025-09-21 19:19:13,779:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=6, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:13,779:INFO:Checking exceptions
2025-09-21 19:19:13,847:INFO:Importing untrained model
2025-09-21 19:19:13,856:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:13,865:INFO:Fitting Model
2025-09-21 19:19:13,962:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-21 19:19:13,962:INFO:create_models() successfully completed......................................
2025-09-21 19:19:13,972:INFO:Uploading results into container
2025-09-21 19:19:13,974:INFO:Uploading model into container now
2025-09-21 19:19:13,987:INFO:_master_model_container: 10
2025-09-21 19:19:13,987:INFO:_display_container: 11
2025-09-21 19:19:13,988:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-21 19:19:13,988:INFO:create_model() successfully completed......................................
2025-09-21 19:19:14,202:INFO:Initializing assign_model()
2025-09-21 19:19:14,202:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=6, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:14,202:INFO:Checking exceptions
2025-09-21 19:19:14,202:INFO:Determining Trained Model
2025-09-21 19:19:14,203:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:14,203:INFO:Copying data
2025-09-21 19:19:14,205:INFO:(1000, 5)
2025-09-21 19:19:14,205:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:14,239:INFO:Initializing create_model()
2025-09-21 19:19:14,239:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=7, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:14,239:INFO:Checking exceptions
2025-09-21 19:19:14,321:INFO:Importing untrained model
2025-09-21 19:19:14,333:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:14,342:INFO:Fitting Model
2025-09-21 19:19:14,429:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-21 19:19:14,429:INFO:create_models() successfully completed......................................
2025-09-21 19:19:14,435:INFO:Uploading results into container
2025-09-21 19:19:14,436:INFO:Uploading model into container now
2025-09-21 19:19:14,448:INFO:_master_model_container: 11
2025-09-21 19:19:14,448:INFO:_display_container: 12
2025-09-21 19:19:14,448:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-21 19:19:14,449:INFO:create_model() successfully completed......................................
2025-09-21 19:19:14,687:INFO:Initializing assign_model()
2025-09-21 19:19:14,687:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=7, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:14,687:INFO:Checking exceptions
2025-09-21 19:19:14,687:INFO:Determining Trained Model
2025-09-21 19:19:14,688:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:14,688:INFO:Copying data
2025-09-21 19:19:14,690:INFO:(1000, 5)
2025-09-21 19:19:14,690:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:14,720:INFO:Initializing create_model()
2025-09-21 19:19:14,720:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=8, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:14,720:INFO:Checking exceptions
2025-09-21 19:19:14,775:INFO:Importing untrained model
2025-09-21 19:19:14,782:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:14,791:INFO:Fitting Model
2025-09-21 19:19:14,856:INFO:KMeans(random_state=123)
2025-09-21 19:19:14,856:INFO:create_models() successfully completed......................................
2025-09-21 19:19:14,863:INFO:Uploading results into container
2025-09-21 19:19:14,864:INFO:Uploading model into container now
2025-09-21 19:19:14,875:INFO:_master_model_container: 12
2025-09-21 19:19:14,875:INFO:_display_container: 13
2025-09-21 19:19:14,875:INFO:KMeans(random_state=123)
2025-09-21 19:19:14,875:INFO:create_model() successfully completed......................................
2025-09-21 19:19:15,075:INFO:Initializing assign_model()
2025-09-21 19:19:15,075:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:15,075:INFO:Checking exceptions
2025-09-21 19:19:15,075:INFO:Determining Trained Model
2025-09-21 19:19:15,075:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:15,075:INFO:Copying data
2025-09-21 19:19:15,078:INFO:(1000, 5)
2025-09-21 19:19:15,078:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:15,107:INFO:Initializing create_model()
2025-09-21 19:19:15,107:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=9, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:15,107:INFO:Checking exceptions
2025-09-21 19:19:15,159:INFO:Importing untrained model
2025-09-21 19:19:15,166:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:15,172:INFO:Fitting Model
2025-09-21 19:19:15,239:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-21 19:19:15,239:INFO:create_models() successfully completed......................................
2025-09-21 19:19:15,247:INFO:Uploading results into container
2025-09-21 19:19:15,248:INFO:Uploading model into container now
2025-09-21 19:19:15,262:INFO:_master_model_container: 13
2025-09-21 19:19:15,262:INFO:_display_container: 14
2025-09-21 19:19:15,263:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-21 19:19:15,263:INFO:create_model() successfully completed......................................
2025-09-21 19:19:15,462:INFO:Initializing assign_model()
2025-09-21 19:19:15,463:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=9, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:15,463:INFO:Checking exceptions
2025-09-21 19:19:15,463:INFO:Determining Trained Model
2025-09-21 19:19:15,463:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:15,463:INFO:Copying data
2025-09-21 19:19:15,465:INFO:(1000, 5)
2025-09-21 19:19:15,465:INFO:assign_model() successfully completed......................................
2025-09-21 19:19:15,494:INFO:Initializing create_model()
2025-09-21 19:19:15,495:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, estimator=kmeans, num_clusters=10, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:19:15,495:INFO:Checking exceptions
2025-09-21 19:19:15,546:INFO:Importing untrained model
2025-09-21 19:19:15,554:INFO:K-Means Clustering Imported successfully
2025-09-21 19:19:15,562:INFO:Fitting Model
2025-09-21 19:19:15,630:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-21 19:19:15,630:INFO:create_models() successfully completed......................................
2025-09-21 19:19:15,636:INFO:Uploading results into container
2025-09-21 19:19:15,637:INFO:Uploading model into container now
2025-09-21 19:19:15,647:INFO:_master_model_container: 14
2025-09-21 19:19:15,647:INFO:_display_container: 15
2025-09-21 19:19:15,648:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-21 19:19:15,648:INFO:create_model() successfully completed......................................
2025-09-21 19:19:15,839:INFO:Initializing assign_model()
2025-09-21 19:19:15,839:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFEB7A890>, model=KMeans(n_clusters=10, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:19:15,839:INFO:Checking exceptions
2025-09-21 19:19:15,839:INFO:Determining Trained Model
2025-09-21 19:19:15,840:INFO:Trained Model : K-Means Clustering
2025-09-21 19:19:15,840:INFO:Copying data
2025-09-21 19:19:15,843:INFO:(1000, 5)
2025-09-21 19:19:15,843:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:11,863:INFO:PyCaret ClusteringExperiment
2025-09-21 19:20:11,864:INFO:Logging name: cluster-default-name
2025-09-21 19:20:11,864:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-21 19:20:11,864:INFO:version 3.3.2
2025-09-21 19:20:11,864:INFO:Initializing setup()
2025-09-21 19:20:11,864:INFO:self.USI: db64
2025-09-21 19:20:11,864:INFO:self._variable_keys: {'data', 'gpu_param', 'X', 'memory', 'seed', 'exp_id', 'html_param', 'logging_param', 'exp_name_log', '_ml_usecase', 'USI', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'idx', 'pipeline'}
2025-09-21 19:20:11,864:INFO:Checking environment
2025-09-21 19:20:11,865:INFO:python_version: 3.10.18
2025-09-21 19:20:11,865:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-21 19:20:11,865:INFO:machine: AMD64
2025-09-21 19:20:11,865:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-21 19:20:11,865:INFO:Memory: svmem(total=16486035456, available=8389316608, percent=49.1, used=8096718848, free=8389316608)
2025-09-21 19:20:11,866:INFO:Physical Core: 8
2025-09-21 19:20:11,866:INFO:Logical Core: 16
2025-09-21 19:20:11,866:INFO:Checking libraries
2025-09-21 19:20:11,866:INFO:System:
2025-09-21 19:20:11,866:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-21 19:20:11,866:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-21 19:20:11,867:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-21 19:20:11,867:INFO:PyCaret required dependencies:
2025-09-21 19:20:11,867:INFO:                 pip: 25.2
2025-09-21 19:20:11,867:INFO:          setuptools: 78.1.1
2025-09-21 19:20:11,867:INFO:             pycaret: 3.3.2
2025-09-21 19:20:11,867:INFO:             IPython: 8.37.0
2025-09-21 19:20:11,867:INFO:          ipywidgets: 8.1.7
2025-09-21 19:20:11,867:INFO:                tqdm: 4.67.1
2025-09-21 19:20:11,868:INFO:               numpy: 1.26.4
2025-09-21 19:20:11,868:INFO:              pandas: 2.1.4
2025-09-21 19:20:11,868:INFO:              jinja2: 3.1.6
2025-09-21 19:20:11,868:INFO:               scipy: 1.11.4
2025-09-21 19:20:11,868:INFO:              joblib: 1.3.2
2025-09-21 19:20:11,868:INFO:             sklearn: 1.4.2
2025-09-21 19:20:11,868:INFO:                pyod: 2.0.5
2025-09-21 19:20:11,868:INFO:            imblearn: 0.14.0
2025-09-21 19:20:11,868:INFO:   category_encoders: 2.7.0
2025-09-21 19:20:11,869:INFO:            lightgbm: 4.6.0
2025-09-21 19:20:11,869:INFO:               numba: 0.61.0
2025-09-21 19:20:11,869:INFO:            requests: 2.32.5
2025-09-21 19:20:11,869:INFO:          matplotlib: 3.7.5
2025-09-21 19:20:11,869:INFO:          scikitplot: 0.3.7
2025-09-21 19:20:11,869:INFO:         yellowbrick: 1.5
2025-09-21 19:20:11,869:INFO:              plotly: 5.24.1
2025-09-21 19:20:11,869:INFO:    plotly-resampler: Not installed
2025-09-21 19:20:11,869:INFO:             kaleido: 1.1.0
2025-09-21 19:20:11,870:INFO:           schemdraw: 0.15
2025-09-21 19:20:11,870:INFO:         statsmodels: 0.14.5
2025-09-21 19:20:11,870:INFO:              sktime: 0.26.0
2025-09-21 19:20:11,870:INFO:               tbats: 1.1.3
2025-09-21 19:20:11,870:INFO:            pmdarima: 2.0.4
2025-09-21 19:20:11,870:INFO:              psutil: 7.1.0
2025-09-21 19:20:11,870:INFO:          markupsafe: 3.0.2
2025-09-21 19:20:11,870:INFO:             pickle5: Not installed
2025-09-21 19:20:11,870:INFO:         cloudpickle: 3.1.1
2025-09-21 19:20:11,870:INFO:         deprecation: 2.1.0
2025-09-21 19:20:11,871:INFO:              xxhash: 3.5.0
2025-09-21 19:20:11,871:INFO:           wurlitzer: Not installed
2025-09-21 19:20:11,871:INFO:PyCaret optional dependencies:
2025-09-21 19:20:11,871:INFO:                shap: 0.44.1
2025-09-21 19:20:11,871:INFO:           interpret: 0.7.2
2025-09-21 19:20:11,871:INFO:                umap: 0.5.7
2025-09-21 19:20:11,871:INFO:     ydata_profiling: 4.16.1
2025-09-21 19:20:11,872:INFO:  explainerdashboard: 0.5.1
2025-09-21 19:20:11,872:INFO:             autoviz: Not installed
2025-09-21 19:20:11,872:INFO:           fairlearn: 0.7.0
2025-09-21 19:20:11,872:INFO:          deepchecks: Not installed
2025-09-21 19:20:11,872:INFO:             xgboost: 3.0.5
2025-09-21 19:20:11,872:INFO:            catboost: 1.2.8
2025-09-21 19:20:11,872:INFO:              kmodes: 0.12.2
2025-09-21 19:20:11,872:INFO:             mlxtend: 0.23.4
2025-09-21 19:20:11,872:INFO:       statsforecast: 1.5.0
2025-09-21 19:20:11,873:INFO:        tune_sklearn: Not installed
2025-09-21 19:20:11,873:INFO:                 ray: Not installed
2025-09-21 19:20:11,873:INFO:            hyperopt: 0.2.7
2025-09-21 19:20:11,873:INFO:              optuna: 4.5.0
2025-09-21 19:20:11,873:INFO:               skopt: 0.10.2
2025-09-21 19:20:11,873:INFO:              mlflow: 3.4.0
2025-09-21 19:20:11,873:INFO:              gradio: 5.46.1
2025-09-21 19:20:11,873:INFO:             fastapi: 0.117.1
2025-09-21 19:20:11,873:INFO:             uvicorn: 0.36.0
2025-09-21 19:20:11,873:INFO:              m2cgen: 0.10.0
2025-09-21 19:20:11,873:INFO:           evidently: 0.4.40
2025-09-21 19:20:11,874:INFO:               fugue: 0.8.7
2025-09-21 19:20:11,874:INFO:           streamlit: Not installed
2025-09-21 19:20:11,874:INFO:             prophet: Not installed
2025-09-21 19:20:11,874:INFO:None
2025-09-21 19:20:11,874:INFO:Set up data.
2025-09-21 19:20:11,881:INFO:Set up index.
2025-09-21 19:20:11,882:INFO:Assigning column types.
2025-09-21 19:20:11,888:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-21 19:20:11,888:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:20:11,889:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:20:11,889:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-21 19:20:11,890:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:20:11,890:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-21 19:20:11,890:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:20:11,892:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:20:11,895:INFO:Preparing preprocessing pipeline...
2025-09-21 19:20:11,895:INFO:Set up simple imputation.
2025-09-21 19:20:11,895:INFO:Set up feature normalization.
2025-09-21 19:20:11,940:INFO:Finished creating preprocessing pipeline.
2025-09-21 19:20:11,952:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-21 19:20:11,952:INFO:Creating final display dataframe.
2025-09-21 19:20:11,995:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape             (1000, 4)
2   Transformed data shape             (1000, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  db64
2025-09-21 19:20:11,996:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:20:11,997:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-21 19:20:11,998:INFO:setup() successfully completed in 0.15s...............
2025-09-21 19:20:12,005:INFO:Initializing create_model()
2025-09-21 19:20:12,006:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:12,006:INFO:Checking exceptions
2025-09-21 19:20:12,115:INFO:Importing untrained model
2025-09-21 19:20:12,126:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:12,136:INFO:Fitting Model
2025-09-21 19:20:12,227:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:20:12,227:INFO:create_models() successfully completed......................................
2025-09-21 19:20:12,238:INFO:Uploading results into container
2025-09-21 19:20:12,239:INFO:Uploading model into container now
2025-09-21 19:20:12,253:INFO:_master_model_container: 1
2025-09-21 19:20:12,254:INFO:_display_container: 2
2025-09-21 19:20:12,255:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:20:12,256:INFO:create_model() successfully completed......................................
2025-09-21 19:20:12,495:INFO:Initializing assign_model()
2025-09-21 19:20:12,495:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:12,495:INFO:Checking exceptions
2025-09-21 19:20:12,495:INFO:Determining Trained Model
2025-09-21 19:20:12,495:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:12,496:INFO:Copying data
2025-09-21 19:20:12,498:INFO:(1000, 5)
2025-09-21 19:20:12,498:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:12,534:INFO:Initializing create_model()
2025-09-21 19:20:12,534:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:12,534:INFO:Checking exceptions
2025-09-21 19:20:12,656:INFO:Importing untrained model
2025-09-21 19:20:12,671:INFO:Agglomerative Clustering Imported successfully
2025-09-21 19:20:12,682:INFO:Fitting Model
2025-09-21 19:20:12,756:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:20:12,756:INFO:create_models() successfully completed......................................
2025-09-21 19:20:12,763:INFO:Uploading results into container
2025-09-21 19:20:12,764:INFO:Uploading model into container now
2025-09-21 19:20:12,776:INFO:_master_model_container: 2
2025-09-21 19:20:12,776:INFO:_display_container: 3
2025-09-21 19:20:12,777:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-21 19:20:12,777:INFO:create_model() successfully completed......................................
2025-09-21 19:20:12,978:INFO:Initializing assign_model()
2025-09-21 19:20:12,978:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-21 19:20:12,979:INFO:Checking exceptions
2025-09-21 19:20:12,979:INFO:Determining Trained Model
2025-09-21 19:20:12,979:INFO:Trained Model : Agglomerative Clustering
2025-09-21 19:20:12,979:INFO:Copying data
2025-09-21 19:20:12,983:INFO:(1000, 5)
2025-09-21 19:20:12,984:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:13,021:INFO:Initializing create_model()
2025-09-21 19:20:13,021:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:13,021:INFO:Checking exceptions
2025-09-21 19:20:13,102:INFO:Importing untrained model
2025-09-21 19:20:13,116:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-21 19:20:13,122:INFO:Fitting Model
2025-09-21 19:20:13,239:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:20:13,239:INFO:create_models() successfully completed......................................
2025-09-21 19:20:13,249:INFO:Uploading results into container
2025-09-21 19:20:13,250:INFO:Uploading model into container now
2025-09-21 19:20:13,263:INFO:_master_model_container: 3
2025-09-21 19:20:13,264:INFO:_display_container: 4
2025-09-21 19:20:13,264:INFO:DBSCAN(n_jobs=-1)
2025-09-21 19:20:13,264:INFO:create_model() successfully completed......................................
2025-09-21 19:20:13,474:INFO:Initializing assign_model()
2025-09-21 19:20:13,474:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:20:13,474:INFO:Checking exceptions
2025-09-21 19:20:13,474:INFO:Determining Trained Model
2025-09-21 19:20:13,474:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-21 19:20:13,475:INFO:Copying data
2025-09-21 19:20:13,477:INFO:(1000, 5)
2025-09-21 19:20:13,477:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:13,531:INFO:Initializing create_model()
2025-09-21 19:20:13,532:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:13,532:INFO:Checking exceptions
2025-09-21 19:20:13,609:INFO:Importing untrained model
2025-09-21 19:20:13,620:INFO:Mean Shift Clustering Imported successfully
2025-09-21 19:20:13,680:INFO:Fitting Model
2025-09-21 19:20:15,294:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:20:15,298:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:20:15,301:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning:

Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)



2025-09-21 19:20:15,301:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:20:15,301:INFO:create_models() successfully completed......................................
2025-09-21 19:20:15,308:INFO:Uploading results into container
2025-09-21 19:20:15,308:INFO:Uploading model into container now
2025-09-21 19:20:15,321:INFO:_master_model_container: 4
2025-09-21 19:20:15,321:INFO:_display_container: 5
2025-09-21 19:20:15,321:INFO:MeanShift(n_jobs=-1)
2025-09-21 19:20:15,321:INFO:create_model() successfully completed......................................
2025-09-21 19:20:15,525:INFO:Initializing assign_model()
2025-09-21 19:20:15,525:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-21 19:20:15,525:INFO:Checking exceptions
2025-09-21 19:20:15,525:INFO:Determining Trained Model
2025-09-21 19:20:15,525:INFO:Trained Model : Mean Shift Clustering
2025-09-21 19:20:15,525:INFO:Copying data
2025-09-21 19:20:15,525:INFO:(1000, 5)
2025-09-21 19:20:15,525:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:15,525:INFO:Initializing create_model()
2025-09-21 19:20:15,525:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:15,525:INFO:Checking exceptions
2025-09-21 19:20:15,600:INFO:Importing untrained model
2025-09-21 19:20:15,607:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:15,616:INFO:Fitting Model
2025-09-21 19:20:15,688:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:20:15,688:INFO:create_models() successfully completed......................................
2025-09-21 19:20:15,695:INFO:Uploading results into container
2025-09-21 19:20:15,696:INFO:Uploading model into container now
2025-09-21 19:20:15,707:INFO:_master_model_container: 5
2025-09-21 19:20:15,708:INFO:_display_container: 6
2025-09-21 19:20:15,708:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:20:15,709:INFO:create_model() successfully completed......................................
2025-09-21 19:20:15,918:INFO:Initializing assign_model()
2025-09-21 19:20:15,918:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:15,919:INFO:Checking exceptions
2025-09-21 19:20:15,919:INFO:Determining Trained Model
2025-09-21 19:20:15,919:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:15,919:INFO:Copying data
2025-09-21 19:20:15,921:INFO:(1000, 5)
2025-09-21 19:20:15,921:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:15,955:INFO:Initializing plot_model()
2025-09-21 19:20:15,956:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=2, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, system=True)
2025-09-21 19:20:15,956:INFO:Checking exceptions
2025-09-21 19:20:15,961:INFO:Preloading libraries
2025-09-21 19:20:15,961:INFO:Copying training dataset
2025-09-21 19:20:15,962:INFO:Plot type: cluster
2025-09-21 19:20:15,962:INFO:SubProcess assign_model() called ==================================
2025-09-21 19:20:15,962:INFO:Initializing assign_model()
2025-09-21 19:20:15,962:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=2, random_state=123), transformation=True, score=True, verbose=False)
2025-09-21 19:20:15,963:INFO:Checking exceptions
2025-09-21 19:20:15,963:INFO:Determining Trained Model
2025-09-21 19:20:15,963:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:15,963:INFO:Copying data
2025-09-21 19:20:15,987:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-21 19:20:15,988:INFO:(1000, 5)
2025-09-21 19:20:15,988:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:15,988:INFO:SubProcess assign_model() end ==================================
2025-09-21 19:20:15,990:INFO:Fitting PCA()
2025-09-21 19:20:15,995:INFO:Sorting dataframe
2025-09-21 19:20:15,997:INFO:Rendering Visual
2025-09-21 19:20:16,058:INFO:Visual Rendered Successfully
2025-09-21 19:20:16,265:INFO:plot_model() successfully completed......................................
2025-09-21 19:20:16,265:INFO:Initializing create_model()
2025-09-21 19:20:16,266:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:16,266:INFO:Checking exceptions
2025-09-21 19:20:16,346:INFO:Importing untrained model
2025-09-21 19:20:16,354:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:16,365:INFO:Fitting Model
2025-09-21 19:20:16,437:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:20:16,437:INFO:create_models() successfully completed......................................
2025-09-21 19:20:16,463:INFO:Uploading results into container
2025-09-21 19:20:16,468:INFO:Uploading model into container now
2025-09-21 19:20:16,482:INFO:_master_model_container: 6
2025-09-21 19:20:16,483:INFO:_display_container: 7
2025-09-21 19:20:16,483:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-21 19:20:16,484:INFO:create_model() successfully completed......................................
2025-09-21 19:20:16,685:INFO:Initializing assign_model()
2025-09-21 19:20:16,685:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:16,685:INFO:Checking exceptions
2025-09-21 19:20:16,686:INFO:Determining Trained Model
2025-09-21 19:20:16,686:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:16,686:INFO:Copying data
2025-09-21 19:20:16,688:INFO:(1000, 5)
2025-09-21 19:20:16,688:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:16,721:INFO:Initializing create_model()
2025-09-21 19:20:16,721:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:16,721:INFO:Checking exceptions
2025-09-21 19:20:16,781:INFO:Importing untrained model
2025-09-21 19:20:16,788:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:16,797:INFO:Fitting Model
2025-09-21 19:20:16,865:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-21 19:20:16,865:INFO:create_models() successfully completed......................................
2025-09-21 19:20:16,872:INFO:Uploading results into container
2025-09-21 19:20:16,873:INFO:Uploading model into container now
2025-09-21 19:20:16,885:INFO:_master_model_container: 7
2025-09-21 19:20:16,885:INFO:_display_container: 8
2025-09-21 19:20:16,886:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-21 19:20:16,887:INFO:create_model() successfully completed......................................
2025-09-21 19:20:17,095:INFO:Initializing assign_model()
2025-09-21 19:20:17,095:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=3, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:17,095:INFO:Checking exceptions
2025-09-21 19:20:17,095:INFO:Determining Trained Model
2025-09-21 19:20:17,095:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:17,095:INFO:Copying data
2025-09-21 19:20:17,097:INFO:(1000, 5)
2025-09-21 19:20:17,098:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:17,131:INFO:Initializing create_model()
2025-09-21 19:20:17,131:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:17,131:INFO:Checking exceptions
2025-09-21 19:20:17,197:INFO:Importing untrained model
2025-09-21 19:20:17,205:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:17,212:INFO:Fitting Model
2025-09-21 19:20:17,339:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:20:17,340:INFO:create_models() successfully completed......................................
2025-09-21 19:20:17,350:INFO:Uploading results into container
2025-09-21 19:20:17,351:INFO:Uploading model into container now
2025-09-21 19:20:17,364:INFO:_master_model_container: 8
2025-09-21 19:20:17,365:INFO:_display_container: 9
2025-09-21 19:20:17,365:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-21 19:20:17,366:INFO:create_model() successfully completed......................................
2025-09-21 19:20:17,565:INFO:Initializing assign_model()
2025-09-21 19:20:17,565:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:17,565:INFO:Checking exceptions
2025-09-21 19:20:17,565:INFO:Determining Trained Model
2025-09-21 19:20:17,565:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:17,565:INFO:Copying data
2025-09-21 19:20:17,565:INFO:(1000, 5)
2025-09-21 19:20:17,576:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:17,608:INFO:Initializing create_model()
2025-09-21 19:20:17,608:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:17,608:INFO:Checking exceptions
2025-09-21 19:20:17,688:INFO:Importing untrained model
2025-09-21 19:20:17,700:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:17,708:INFO:Fitting Model
2025-09-21 19:20:17,782:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-21 19:20:17,782:INFO:create_models() successfully completed......................................
2025-09-21 19:20:17,794:INFO:Uploading results into container
2025-09-21 19:20:17,796:INFO:Uploading model into container now
2025-09-21 19:20:17,808:INFO:_master_model_container: 9
2025-09-21 19:20:17,808:INFO:_display_container: 10
2025-09-21 19:20:17,811:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-21 19:20:17,811:INFO:create_model() successfully completed......................................
2025-09-21 19:20:18,012:INFO:Initializing assign_model()
2025-09-21 19:20:18,012:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=5, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:18,012:INFO:Checking exceptions
2025-09-21 19:20:18,012:INFO:Determining Trained Model
2025-09-21 19:20:18,012:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:18,012:INFO:Copying data
2025-09-21 19:20:18,012:INFO:(1000, 5)
2025-09-21 19:20:18,012:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:18,050:INFO:Initializing create_model()
2025-09-21 19:20:18,050:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=6, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:18,050:INFO:Checking exceptions
2025-09-21 19:20:18,118:INFO:Importing untrained model
2025-09-21 19:20:18,123:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:18,134:INFO:Fitting Model
2025-09-21 19:20:18,214:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-21 19:20:18,216:INFO:create_models() successfully completed......................................
2025-09-21 19:20:18,223:INFO:Uploading results into container
2025-09-21 19:20:18,225:INFO:Uploading model into container now
2025-09-21 19:20:18,238:INFO:_master_model_container: 10
2025-09-21 19:20:18,238:INFO:_display_container: 11
2025-09-21 19:20:18,240:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-21 19:20:18,240:INFO:create_model() successfully completed......................................
2025-09-21 19:20:18,450:INFO:Initializing assign_model()
2025-09-21 19:20:18,450:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=6, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:18,450:INFO:Checking exceptions
2025-09-21 19:20:18,450:INFO:Determining Trained Model
2025-09-21 19:20:18,450:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:18,450:INFO:Copying data
2025-09-21 19:20:18,450:INFO:(1000, 5)
2025-09-21 19:20:18,450:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:18,488:INFO:Initializing create_model()
2025-09-21 19:20:18,488:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=7, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:18,488:INFO:Checking exceptions
2025-09-21 19:20:18,560:INFO:Importing untrained model
2025-09-21 19:20:18,564:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:18,578:INFO:Fitting Model
2025-09-21 19:20:18,667:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-21 19:20:18,667:INFO:create_models() successfully completed......................................
2025-09-21 19:20:18,673:INFO:Uploading results into container
2025-09-21 19:20:18,675:INFO:Uploading model into container now
2025-09-21 19:20:18,688:INFO:_master_model_container: 11
2025-09-21 19:20:18,688:INFO:_display_container: 12
2025-09-21 19:20:18,688:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-21 19:20:18,690:INFO:create_model() successfully completed......................................
2025-09-21 19:20:18,911:INFO:Initializing assign_model()
2025-09-21 19:20:18,911:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=7, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:18,911:INFO:Checking exceptions
2025-09-21 19:20:18,911:INFO:Determining Trained Model
2025-09-21 19:20:18,911:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:18,911:INFO:Copying data
2025-09-21 19:20:18,911:INFO:(1000, 5)
2025-09-21 19:20:18,924:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:18,956:INFO:Initializing create_model()
2025-09-21 19:20:18,956:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=8, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:18,956:INFO:Checking exceptions
2025-09-21 19:20:19,016:INFO:Importing untrained model
2025-09-21 19:20:19,025:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:19,033:INFO:Fitting Model
2025-09-21 19:20:19,111:INFO:KMeans(random_state=123)
2025-09-21 19:20:19,111:INFO:create_models() successfully completed......................................
2025-09-21 19:20:19,119:INFO:Uploading results into container
2025-09-21 19:20:19,119:INFO:Uploading model into container now
2025-09-21 19:20:19,135:INFO:_master_model_container: 12
2025-09-21 19:20:19,135:INFO:_display_container: 13
2025-09-21 19:20:19,137:INFO:KMeans(random_state=123)
2025-09-21 19:20:19,137:INFO:create_model() successfully completed......................................
2025-09-21 19:20:19,342:INFO:Initializing assign_model()
2025-09-21 19:20:19,342:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:19,343:INFO:Checking exceptions
2025-09-21 19:20:19,343:INFO:Determining Trained Model
2025-09-21 19:20:19,343:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:19,343:INFO:Copying data
2025-09-21 19:20:19,345:INFO:(1000, 5)
2025-09-21 19:20:19,345:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:19,377:INFO:Initializing create_model()
2025-09-21 19:20:19,377:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=9, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:19,377:INFO:Checking exceptions
2025-09-21 19:20:19,449:INFO:Importing untrained model
2025-09-21 19:20:19,456:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:19,467:INFO:Fitting Model
2025-09-21 19:20:19,549:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-21 19:20:19,550:INFO:create_models() successfully completed......................................
2025-09-21 19:20:19,557:INFO:Uploading results into container
2025-09-21 19:20:19,559:INFO:Uploading model into container now
2025-09-21 19:20:19,571:INFO:_master_model_container: 13
2025-09-21 19:20:19,571:INFO:_display_container: 14
2025-09-21 19:20:19,572:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-21 19:20:19,572:INFO:create_model() successfully completed......................................
2025-09-21 19:20:19,781:INFO:Initializing assign_model()
2025-09-21 19:20:19,781:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=9, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:19,782:INFO:Checking exceptions
2025-09-21 19:20:19,782:INFO:Determining Trained Model
2025-09-21 19:20:19,782:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:19,782:INFO:Copying data
2025-09-21 19:20:19,784:INFO:(1000, 5)
2025-09-21 19:20:19,784:INFO:assign_model() successfully completed......................................
2025-09-21 19:20:19,819:INFO:Initializing create_model()
2025-09-21 19:20:19,820:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, estimator=kmeans, num_clusters=10, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-21 19:20:19,820:INFO:Checking exceptions
2025-09-21 19:20:19,881:INFO:Importing untrained model
2025-09-21 19:20:19,889:INFO:K-Means Clustering Imported successfully
2025-09-21 19:20:19,898:INFO:Fitting Model
2025-09-21 19:20:19,973:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-21 19:20:19,973:INFO:create_models() successfully completed......................................
2025-09-21 19:20:19,981:INFO:Uploading results into container
2025-09-21 19:20:19,982:INFO:Uploading model into container now
2025-09-21 19:20:19,993:INFO:_master_model_container: 14
2025-09-21 19:20:19,994:INFO:_display_container: 15
2025-09-21 19:20:19,994:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-21 19:20:19,995:INFO:create_model() successfully completed......................................
2025-09-21 19:20:20,194:INFO:Initializing assign_model()
2025-09-21 19:20:20,194:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001EFFF083760>, model=KMeans(n_clusters=10, random_state=123), transformation=False, score=True, verbose=False)
2025-09-21 19:20:20,194:INFO:Checking exceptions
2025-09-21 19:20:20,194:INFO:Determining Trained Model
2025-09-21 19:20:20,194:INFO:Trained Model : K-Means Clustering
2025-09-21 19:20:20,194:INFO:Copying data
2025-09-21 19:20:20,196:INFO:(1000, 5)
2025-09-21 19:20:20,196:INFO:assign_model() successfully completed......................................
2025-09-22 15:22:42,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:22:42,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:22:42,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:22:42,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:22:46,422:INFO:PyCaret ClusteringExperiment
2025-09-22 15:22:46,422:INFO:Logging name: cluster-default-name
2025-09-22 15:22:46,422:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-22 15:22:46,422:INFO:version 3.3.2
2025-09-22 15:22:46,422:INFO:Initializing setup()
2025-09-22 15:22:46,422:INFO:self.USI: 9fff
2025-09-22 15:22:46,422:INFO:self._variable_keys: {'seed', 'data', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'html_param', 'logging_param', 'idx', 'X', 'USI', 'exp_id', 'memory', 'exp_name_log', '_available_plots', 'gpu_param', 'n_jobs_param', '_ml_usecase'}
2025-09-22 15:22:46,422:INFO:Checking environment
2025-09-22 15:22:46,423:INFO:python_version: 3.10.18
2025-09-22 15:22:46,423:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-22 15:22:46,423:INFO:machine: AMD64
2025-09-22 15:22:46,423:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-22 15:22:46,423:INFO:Memory: svmem(total=16486035456, available=7463354368, percent=54.7, used=9022681088, free=7463354368)
2025-09-22 15:22:46,423:INFO:Physical Core: 8
2025-09-22 15:22:46,423:INFO:Logical Core: 16
2025-09-22 15:22:46,423:INFO:Checking libraries
2025-09-22 15:22:46,423:INFO:System:
2025-09-22 15:22:46,423:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-22 15:22:46,423:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-22 15:22:46,423:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-22 15:22:46,423:INFO:PyCaret required dependencies:
2025-09-22 15:22:48,532:INFO:                 pip: 25.2
2025-09-22 15:22:48,532:INFO:          setuptools: 78.1.1
2025-09-22 15:22:48,532:INFO:             pycaret: 3.3.2
2025-09-22 15:22:48,532:INFO:             IPython: 8.37.0
2025-09-22 15:22:48,532:INFO:          ipywidgets: 8.1.7
2025-09-22 15:22:48,532:INFO:                tqdm: 4.67.1
2025-09-22 15:22:48,532:INFO:               numpy: 1.26.4
2025-09-22 15:22:48,532:INFO:              pandas: 2.1.4
2025-09-22 15:22:48,532:INFO:              jinja2: 3.1.6
2025-09-22 15:22:48,532:INFO:               scipy: 1.11.4
2025-09-22 15:22:48,532:INFO:              joblib: 1.3.2
2025-09-22 15:22:48,532:INFO:             sklearn: 1.4.2
2025-09-22 15:22:48,532:INFO:                pyod: 2.0.5
2025-09-22 15:22:48,532:INFO:            imblearn: 0.14.0
2025-09-22 15:22:48,532:INFO:   category_encoders: 2.7.0
2025-09-22 15:22:48,532:INFO:            lightgbm: 4.6.0
2025-09-22 15:22:48,532:INFO:               numba: 0.61.0
2025-09-22 15:22:48,532:INFO:            requests: 2.32.5
2025-09-22 15:22:48,532:INFO:          matplotlib: 3.7.5
2025-09-22 15:22:48,532:INFO:          scikitplot: 0.3.7
2025-09-22 15:22:48,532:INFO:         yellowbrick: 1.5
2025-09-22 15:22:48,532:INFO:              plotly: 5.24.1
2025-09-22 15:22:48,532:INFO:    plotly-resampler: Not installed
2025-09-22 15:22:48,532:INFO:             kaleido: 1.1.0
2025-09-22 15:22:48,532:INFO:           schemdraw: 0.15
2025-09-22 15:22:48,532:INFO:         statsmodels: 0.14.5
2025-09-22 15:22:48,532:INFO:              sktime: 0.26.0
2025-09-22 15:22:48,532:INFO:               tbats: 1.1.3
2025-09-22 15:22:48,532:INFO:            pmdarima: 2.0.4
2025-09-22 15:22:48,532:INFO:              psutil: 7.1.0
2025-09-22 15:22:48,532:INFO:          markupsafe: 3.0.2
2025-09-22 15:22:48,532:INFO:             pickle5: Not installed
2025-09-22 15:22:48,532:INFO:         cloudpickle: 3.1.1
2025-09-22 15:22:48,532:INFO:         deprecation: 2.1.0
2025-09-22 15:22:48,532:INFO:              xxhash: 3.5.0
2025-09-22 15:22:48,532:INFO:           wurlitzer: Not installed
2025-09-22 15:22:48,532:INFO:PyCaret optional dependencies:
2025-09-22 15:22:57,416:INFO:                shap: 0.44.1
2025-09-22 15:22:57,416:INFO:           interpret: 0.7.2
2025-09-22 15:22:57,416:INFO:                umap: 0.5.7
2025-09-22 15:22:57,416:INFO:     ydata_profiling: 4.16.1
2025-09-22 15:22:57,416:INFO:  explainerdashboard: 0.5.1
2025-09-22 15:22:57,416:INFO:             autoviz: Not installed
2025-09-22 15:22:57,417:INFO:           fairlearn: 0.7.0
2025-09-22 15:22:57,417:INFO:          deepchecks: Not installed
2025-09-22 15:22:57,417:INFO:             xgboost: 3.0.5
2025-09-22 15:22:57,417:INFO:            catboost: 1.2.8
2025-09-22 15:22:57,417:INFO:              kmodes: 0.12.2
2025-09-22 15:22:57,417:INFO:             mlxtend: 0.23.4
2025-09-22 15:22:57,417:INFO:       statsforecast: 1.5.0
2025-09-22 15:22:57,417:INFO:        tune_sklearn: Not installed
2025-09-22 15:22:57,417:INFO:                 ray: Not installed
2025-09-22 15:22:57,417:INFO:            hyperopt: 0.2.7
2025-09-22 15:22:57,417:INFO:              optuna: 4.5.0
2025-09-22 15:22:57,417:INFO:               skopt: 0.10.2
2025-09-22 15:22:57,417:INFO:              mlflow: 3.4.0
2025-09-22 15:22:57,417:INFO:              gradio: 5.46.1
2025-09-22 15:22:57,417:INFO:             fastapi: 0.117.1
2025-09-22 15:22:57,417:INFO:             uvicorn: 0.36.0
2025-09-22 15:22:57,417:INFO:              m2cgen: 0.10.0
2025-09-22 15:22:57,417:INFO:           evidently: 0.4.40
2025-09-22 15:22:57,417:INFO:               fugue: 0.8.7
2025-09-22 15:22:57,417:INFO:           streamlit: Not installed
2025-09-22 15:22:57,418:INFO:             prophet: Not installed
2025-09-22 15:22:57,418:INFO:None
2025-09-22 15:22:57,418:INFO:Set up data.
2025-09-22 15:22:57,429:INFO:Set up index.
2025-09-22 15:22:57,430:INFO:Assigning column types.
2025-09-22 15:22:57,437:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-22 15:22:57,437:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:22:57,437:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:22:57,447:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:22:57,448:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:22:57,448:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-22 15:22:57,448:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:22:57,448:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:22:57,450:INFO:Preparing preprocessing pipeline...
2025-09-22 15:22:57,450:INFO:Set up simple imputation.
2025-09-22 15:22:57,450:INFO:Set up feature normalization.
2025-09-22 15:22:57,509:INFO:Finished creating preprocessing pipeline.
2025-09-22 15:22:57,517:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['id', 'estadia_dias', 'edad',
                                             'antelacion_reserva_dias',
                                             'num_huespedes', 'calificacion'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-22 15:22:57,518:INFO:Creating final display dataframe.
2025-09-22 15:22:57,569:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape             (5000, 6)
2   Transformed data shape             (5000, 6)
3         Numeric features                     6
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  9fff
2025-09-22 15:22:57,570:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:22:57,570:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:22:57,570:INFO:setup() successfully completed in 11.16s...............
2025-09-22 15:22:57,571:INFO:Initializing create_model()
2025-09-22 15:22:57,571:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:22:57,571:INFO:Checking exceptions
2025-09-22 15:22:57,655:INFO:Importing untrained model
2025-09-22 15:22:57,665:INFO:K-Means Clustering Imported successfully
2025-09-22 15:22:57,711:INFO:Fitting Model
2025-09-22 15:22:58,405:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:22:58,405:INFO:create_models() successfully completed......................................
2025-09-22 15:22:58,417:INFO:Uploading results into container
2025-09-22 15:22:58,421:INFO:Uploading model into container now
2025-09-22 15:22:58,437:INFO:_master_model_container: 1
2025-09-22 15:22:58,437:INFO:_display_container: 2
2025-09-22 15:22:58,438:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:22:58,438:INFO:create_model() successfully completed......................................
2025-09-22 15:22:58,650:INFO:Initializing assign_model()
2025-09-22 15:22:58,650:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:22:58,650:INFO:Checking exceptions
2025-09-22 15:22:58,650:INFO:Determining Trained Model
2025-09-22 15:22:58,650:INFO:Trained Model : K-Means Clustering
2025-09-22 15:22:58,651:INFO:Copying data
2025-09-22 15:22:58,655:INFO:(5000, 7)
2025-09-22 15:22:58,655:INFO:assign_model() successfully completed......................................
2025-09-22 15:22:59,109:INFO:Initializing create_model()
2025-09-22 15:22:59,109:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:22:59,109:INFO:Checking exceptions
2025-09-22 15:22:59,186:INFO:Importing untrained model
2025-09-22 15:22:59,193:INFO:Agglomerative Clustering Imported successfully
2025-09-22 15:22:59,201:INFO:Fitting Model
2025-09-22 15:23:00,268:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-22 15:23:00,268:INFO:create_models() successfully completed......................................
2025-09-22 15:23:00,281:INFO:Uploading results into container
2025-09-22 15:23:00,281:INFO:Uploading model into container now
2025-09-22 15:23:00,290:INFO:_master_model_container: 2
2025-09-22 15:23:00,292:INFO:_display_container: 3
2025-09-22 15:23:00,292:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-22 15:23:00,292:INFO:create_model() successfully completed......................................
2025-09-22 15:23:00,463:INFO:Initializing assign_model()
2025-09-22 15:23:00,464:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-22 15:23:00,464:INFO:Checking exceptions
2025-09-22 15:23:00,464:INFO:Determining Trained Model
2025-09-22 15:23:00,464:INFO:Trained Model : Agglomerative Clustering
2025-09-22 15:23:00,464:INFO:Copying data
2025-09-22 15:23:00,467:INFO:(5000, 7)
2025-09-22 15:23:00,467:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:00,894:INFO:Initializing create_model()
2025-09-22 15:23:00,894:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:00,894:INFO:Checking exceptions
2025-09-22 15:23:01,003:INFO:Importing untrained model
2025-09-22 15:23:01,009:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-22 15:23:01,017:INFO:Fitting Model
2025-09-22 15:23:01,583:INFO:DBSCAN(n_jobs=-1)
2025-09-22 15:23:01,583:INFO:create_models() successfully completed......................................
2025-09-22 15:23:01,599:INFO:Uploading results into container
2025-09-22 15:23:01,599:INFO:Uploading model into container now
2025-09-22 15:23:01,608:INFO:_master_model_container: 3
2025-09-22 15:23:01,609:INFO:_display_container: 4
2025-09-22 15:23:01,609:INFO:DBSCAN(n_jobs=-1)
2025-09-22 15:23:01,609:INFO:create_model() successfully completed......................................
2025-09-22 15:23:01,782:INFO:Initializing assign_model()
2025-09-22 15:23:01,782:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-22 15:23:01,782:INFO:Checking exceptions
2025-09-22 15:23:01,782:INFO:Determining Trained Model
2025-09-22 15:23:01,782:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-22 15:23:01,782:INFO:Copying data
2025-09-22 15:23:01,782:INFO:(5000, 7)
2025-09-22 15:23:01,782:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:02,298:INFO:Initializing create_model()
2025-09-22 15:23:02,298:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:02,298:INFO:Checking exceptions
2025-09-22 15:23:02,381:INFO:Importing untrained model
2025-09-22 15:23:02,388:INFO:Mean Shift Clustering Imported successfully
2025-09-22 15:23:02,395:INFO:Fitting Model
2025-09-22 15:23:13,469:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-22 15:23:13,471:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-22 15:23:13,474:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-22 15:23:13,474:INFO:MeanShift(n_jobs=-1)
2025-09-22 15:23:13,474:INFO:create_models() successfully completed......................................
2025-09-22 15:23:13,481:INFO:Uploading results into container
2025-09-22 15:23:13,482:INFO:Uploading model into container now
2025-09-22 15:23:13,492:INFO:_master_model_container: 4
2025-09-22 15:23:13,492:INFO:_display_container: 5
2025-09-22 15:23:13,493:INFO:MeanShift(n_jobs=-1)
2025-09-22 15:23:13,494:INFO:create_model() successfully completed......................................
2025-09-22 15:23:13,672:INFO:Initializing assign_model()
2025-09-22 15:23:13,672:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-22 15:23:13,672:INFO:Checking exceptions
2025-09-22 15:23:13,672:INFO:Determining Trained Model
2025-09-22 15:23:13,672:INFO:Trained Model : Mean Shift Clustering
2025-09-22 15:23:13,672:INFO:Copying data
2025-09-22 15:23:13,676:INFO:(5000, 7)
2025-09-22 15:23:13,676:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:13,681:INFO:Initializing create_model()
2025-09-22 15:23:13,681:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:13,681:INFO:Checking exceptions
2025-09-22 15:23:13,739:INFO:Importing untrained model
2025-09-22 15:23:13,744:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:13,751:INFO:Fitting Model
2025-09-22 15:23:14,296:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:23:14,296:INFO:create_models() successfully completed......................................
2025-09-22 15:23:14,317:INFO:Uploading results into container
2025-09-22 15:23:14,317:INFO:Uploading model into container now
2025-09-22 15:23:14,329:INFO:_master_model_container: 5
2025-09-22 15:23:14,329:INFO:_display_container: 6
2025-09-22 15:23:14,331:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:23:14,331:INFO:create_model() successfully completed......................................
2025-09-22 15:23:14,496:INFO:Initializing assign_model()
2025-09-22 15:23:14,496:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:14,496:INFO:Checking exceptions
2025-09-22 15:23:14,496:INFO:Determining Trained Model
2025-09-22 15:23:14,496:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:14,496:INFO:Copying data
2025-09-22 15:23:14,496:INFO:(5000, 7)
2025-09-22 15:23:14,496:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:15,027:INFO:Initializing plot_model()
2025-09-22 15:23:15,027:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=2, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, system=True)
2025-09-22 15:23:15,027:INFO:Checking exceptions
2025-09-22 15:23:15,027:INFO:Preloading libraries
2025-09-22 15:23:15,027:INFO:Copying training dataset
2025-09-22 15:23:15,027:INFO:Plot type: cluster
2025-09-22 15:23:15,027:INFO:SubProcess assign_model() called ==================================
2025-09-22 15:23:15,027:INFO:Initializing assign_model()
2025-09-22 15:23:15,027:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=2, random_state=123), transformation=True, score=True, verbose=False)
2025-09-22 15:23:15,027:INFO:Checking exceptions
2025-09-22 15:23:15,027:INFO:Determining Trained Model
2025-09-22 15:23:15,027:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:15,027:INFO:Copying data
2025-09-22 15:23:15,060:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-22 15:23:15,063:INFO:(5000, 7)
2025-09-22 15:23:15,063:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:15,063:INFO:SubProcess assign_model() end ==================================
2025-09-22 15:23:15,067:INFO:Fitting PCA()
2025-09-22 15:23:15,086:INFO:Sorting dataframe
2025-09-22 15:23:15,100:INFO:Rendering Visual
2025-09-22 15:23:15,720:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\kaleido\_sync_server.py:11: UserWarning:



Warning: You have Plotly version 5.24.1, which is not compatible with this version of Kaleido (1.1.0).

This means that static image generation (e.g. `fig.write_image()`) will not work.

Please upgrade Plotly to version 6.1.1 or greater, or downgrade Kaleido to version 0.2.1.



2025-09-22 15:23:15,871:INFO:Visual Rendered Successfully
2025-09-22 15:23:16,049:INFO:plot_model() successfully completed......................................
2025-09-22 15:23:16,049:INFO:Initializing create_model()
2025-09-22 15:23:16,050:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:16,050:INFO:Checking exceptions
2025-09-22 15:23:16,203:INFO:Importing untrained model
2025-09-22 15:23:16,209:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:16,219:INFO:Fitting Model
2025-09-22 15:23:16,796:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:23:16,796:INFO:create_models() successfully completed......................................
2025-09-22 15:23:16,804:INFO:Uploading results into container
2025-09-22 15:23:16,805:INFO:Uploading model into container now
2025-09-22 15:23:16,816:INFO:_master_model_container: 6
2025-09-22 15:23:16,816:INFO:_display_container: 7
2025-09-22 15:23:16,816:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:23:16,818:INFO:create_model() successfully completed......................................
2025-09-22 15:23:17,000:INFO:Initializing assign_model()
2025-09-22 15:23:17,000:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:17,000:INFO:Checking exceptions
2025-09-22 15:23:17,000:INFO:Determining Trained Model
2025-09-22 15:23:17,001:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:17,001:INFO:Copying data
2025-09-22 15:23:17,004:INFO:(5000, 7)
2025-09-22 15:23:17,004:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:17,511:INFO:Initializing create_model()
2025-09-22 15:23:17,511:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:17,511:INFO:Checking exceptions
2025-09-22 15:23:17,590:INFO:Importing untrained model
2025-09-22 15:23:17,598:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:17,611:INFO:Fitting Model
2025-09-22 15:23:18,086:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-22 15:23:18,086:INFO:create_models() successfully completed......................................
2025-09-22 15:23:18,093:INFO:Uploading results into container
2025-09-22 15:23:18,094:INFO:Uploading model into container now
2025-09-22 15:23:18,104:INFO:_master_model_container: 7
2025-09-22 15:23:18,105:INFO:_display_container: 8
2025-09-22 15:23:18,106:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-22 15:23:18,106:INFO:create_model() successfully completed......................................
2025-09-22 15:23:18,287:INFO:Initializing assign_model()
2025-09-22 15:23:18,288:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=3, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:18,288:INFO:Checking exceptions
2025-09-22 15:23:18,288:INFO:Determining Trained Model
2025-09-22 15:23:18,288:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:18,289:INFO:Copying data
2025-09-22 15:23:18,292:INFO:(5000, 7)
2025-09-22 15:23:18,293:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:18,738:INFO:Initializing create_model()
2025-09-22 15:23:18,739:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:18,739:INFO:Checking exceptions
2025-09-22 15:23:18,806:INFO:Importing untrained model
2025-09-22 15:23:18,812:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:18,820:INFO:Fitting Model
2025-09-22 15:23:19,272:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:23:19,272:INFO:create_models() successfully completed......................................
2025-09-22 15:23:19,281:INFO:Uploading results into container
2025-09-22 15:23:19,284:INFO:Uploading model into container now
2025-09-22 15:23:19,298:INFO:_master_model_container: 8
2025-09-22 15:23:19,298:INFO:_display_container: 9
2025-09-22 15:23:19,299:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:23:19,299:INFO:create_model() successfully completed......................................
2025-09-22 15:23:19,496:INFO:Initializing assign_model()
2025-09-22 15:23:19,496:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:19,496:INFO:Checking exceptions
2025-09-22 15:23:19,496:INFO:Determining Trained Model
2025-09-22 15:23:19,496:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:19,496:INFO:Copying data
2025-09-22 15:23:19,501:INFO:(5000, 7)
2025-09-22 15:23:19,502:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:19,965:INFO:Initializing create_model()
2025-09-22 15:23:19,965:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:19,965:INFO:Checking exceptions
2025-09-22 15:23:20,037:INFO:Importing untrained model
2025-09-22 15:23:20,044:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:20,051:INFO:Fitting Model
2025-09-22 15:23:20,560:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-22 15:23:20,560:INFO:create_models() successfully completed......................................
2025-09-22 15:23:20,566:INFO:Uploading results into container
2025-09-22 15:23:20,567:INFO:Uploading model into container now
2025-09-22 15:23:20,577:INFO:_master_model_container: 9
2025-09-22 15:23:20,577:INFO:_display_container: 10
2025-09-22 15:23:20,578:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-22 15:23:20,579:INFO:create_model() successfully completed......................................
2025-09-22 15:23:20,762:INFO:Initializing assign_model()
2025-09-22 15:23:20,762:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=5, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:20,762:INFO:Checking exceptions
2025-09-22 15:23:20,763:INFO:Determining Trained Model
2025-09-22 15:23:20,763:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:20,763:INFO:Copying data
2025-09-22 15:23:20,767:INFO:(5000, 7)
2025-09-22 15:23:20,768:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:21,216:INFO:Initializing create_model()
2025-09-22 15:23:21,216:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=6, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:21,216:INFO:Checking exceptions
2025-09-22 15:23:21,290:INFO:Importing untrained model
2025-09-22 15:23:21,298:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:21,306:INFO:Fitting Model
2025-09-22 15:23:21,748:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-22 15:23:21,748:INFO:create_models() successfully completed......................................
2025-09-22 15:23:21,756:INFO:Uploading results into container
2025-09-22 15:23:21,757:INFO:Uploading model into container now
2025-09-22 15:23:21,766:INFO:_master_model_container: 10
2025-09-22 15:23:21,767:INFO:_display_container: 11
2025-09-22 15:23:21,767:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-22 15:23:21,767:INFO:create_model() successfully completed......................................
2025-09-22 15:23:21,942:INFO:Initializing assign_model()
2025-09-22 15:23:21,942:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=6, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:21,942:INFO:Checking exceptions
2025-09-22 15:23:21,942:INFO:Determining Trained Model
2025-09-22 15:23:21,942:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:21,942:INFO:Copying data
2025-09-22 15:23:21,947:INFO:(5000, 7)
2025-09-22 15:23:21,947:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:22,369:INFO:Initializing create_model()
2025-09-22 15:23:22,369:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=7, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:22,369:INFO:Checking exceptions
2025-09-22 15:23:22,476:INFO:Importing untrained model
2025-09-22 15:23:22,482:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:22,493:INFO:Fitting Model
2025-09-22 15:23:22,931:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-22 15:23:22,931:INFO:create_models() successfully completed......................................
2025-09-22 15:23:22,938:INFO:Uploading results into container
2025-09-22 15:23:22,938:INFO:Uploading model into container now
2025-09-22 15:23:22,947:INFO:_master_model_container: 11
2025-09-22 15:23:22,947:INFO:_display_container: 12
2025-09-22 15:23:22,951:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-22 15:23:22,951:INFO:create_model() successfully completed......................................
2025-09-22 15:23:23,132:INFO:Initializing assign_model()
2025-09-22 15:23:23,132:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=7, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:23,132:INFO:Checking exceptions
2025-09-22 15:23:23,132:INFO:Determining Trained Model
2025-09-22 15:23:23,132:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:23,132:INFO:Copying data
2025-09-22 15:23:23,132:INFO:(5000, 7)
2025-09-22 15:23:23,132:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:23,574:INFO:Initializing create_model()
2025-09-22 15:23:23,574:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=8, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:23,574:INFO:Checking exceptions
2025-09-22 15:23:23,671:INFO:Importing untrained model
2025-09-22 15:23:23,676:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:23,680:INFO:Fitting Model
2025-09-22 15:23:24,151:INFO:KMeans(random_state=123)
2025-09-22 15:23:24,151:INFO:create_models() successfully completed......................................
2025-09-22 15:23:24,159:INFO:Uploading results into container
2025-09-22 15:23:24,161:INFO:Uploading model into container now
2025-09-22 15:23:24,172:INFO:_master_model_container: 12
2025-09-22 15:23:24,172:INFO:_display_container: 13
2025-09-22 15:23:24,173:INFO:KMeans(random_state=123)
2025-09-22 15:23:24,173:INFO:create_model() successfully completed......................................
2025-09-22 15:23:24,367:INFO:Initializing assign_model()
2025-09-22 15:23:24,367:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:24,367:INFO:Checking exceptions
2025-09-22 15:23:24,367:INFO:Determining Trained Model
2025-09-22 15:23:24,367:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:24,367:INFO:Copying data
2025-09-22 15:23:24,371:INFO:(5000, 7)
2025-09-22 15:23:24,372:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:24,840:INFO:Initializing create_model()
2025-09-22 15:23:24,841:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=9, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:24,841:INFO:Checking exceptions
2025-09-22 15:23:24,909:INFO:Importing untrained model
2025-09-22 15:23:24,931:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:24,940:INFO:Fitting Model
2025-09-22 15:23:25,407:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-22 15:23:25,407:INFO:create_models() successfully completed......................................
2025-09-22 15:23:25,415:INFO:Uploading results into container
2025-09-22 15:23:25,415:INFO:Uploading model into container now
2025-09-22 15:23:25,429:INFO:_master_model_container: 13
2025-09-22 15:23:25,429:INFO:_display_container: 14
2025-09-22 15:23:25,430:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-22 15:23:25,431:INFO:create_model() successfully completed......................................
2025-09-22 15:23:25,628:INFO:Initializing assign_model()
2025-09-22 15:23:25,628:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=9, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:25,629:INFO:Checking exceptions
2025-09-22 15:23:25,629:INFO:Determining Trained Model
2025-09-22 15:23:25,629:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:25,629:INFO:Copying data
2025-09-22 15:23:25,633:INFO:(5000, 7)
2025-09-22 15:23:25,633:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:26,075:INFO:Initializing create_model()
2025-09-22 15:23:26,075:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, estimator=kmeans, num_clusters=10, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:23:26,075:INFO:Checking exceptions
2025-09-22 15:23:26,135:INFO:Importing untrained model
2025-09-22 15:23:26,140:INFO:K-Means Clustering Imported successfully
2025-09-22 15:23:26,147:INFO:Fitting Model
2025-09-22 15:23:26,581:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-22 15:23:26,581:INFO:create_models() successfully completed......................................
2025-09-22 15:23:26,590:INFO:Uploading results into container
2025-09-22 15:23:26,590:INFO:Uploading model into container now
2025-09-22 15:23:26,601:INFO:_master_model_container: 14
2025-09-22 15:23:26,601:INFO:_display_container: 15
2025-09-22 15:23:26,601:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-22 15:23:26,601:INFO:create_model() successfully completed......................................
2025-09-22 15:23:26,785:INFO:Initializing assign_model()
2025-09-22 15:23:26,785:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BEC5CAF2E0>, model=KMeans(n_clusters=10, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:23:26,785:INFO:Checking exceptions
2025-09-22 15:23:26,785:INFO:Determining Trained Model
2025-09-22 15:23:26,785:INFO:Trained Model : K-Means Clustering
2025-09-22 15:23:26,785:INFO:Copying data
2025-09-22 15:23:26,797:INFO:(5000, 7)
2025-09-22 15:23:26,797:INFO:assign_model() successfully completed......................................
2025-09-22 15:23:27,892:WARNING:WARNING	Comm:base_comm.py:get_comm()- No such comm: 4613b5fa52474624a3c2b7d46abcafa5
2025-09-22 15:23:27,901:WARNING:WARNING	Comm:base_comm.py:get_comm()- No such comm: a62c620b63624d5ebb806c756515dea1
2025-09-22 15:31:52,290:INFO:PyCaret ClusteringExperiment
2025-09-22 15:31:52,290:INFO:Logging name: cluster-default-name
2025-09-22 15:31:52,290:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-22 15:31:52,290:INFO:version 3.3.2
2025-09-22 15:31:52,290:INFO:Initializing setup()
2025-09-22 15:31:52,290:INFO:self.USI: a4d8
2025-09-22 15:31:52,290:INFO:self._variable_keys: {'seed', 'data', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'html_param', 'logging_param', 'idx', 'X', 'USI', 'exp_id', 'memory', 'exp_name_log', '_available_plots', 'gpu_param', 'n_jobs_param', '_ml_usecase'}
2025-09-22 15:31:52,290:INFO:Checking environment
2025-09-22 15:31:52,291:INFO:python_version: 3.10.18
2025-09-22 15:31:52,291:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-22 15:31:52,291:INFO:machine: AMD64
2025-09-22 15:31:52,291:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-22 15:31:52,291:INFO:Memory: svmem(total=16486035456, available=6508556288, percent=60.5, used=9977479168, free=6508556288)
2025-09-22 15:31:52,291:INFO:Physical Core: 8
2025-09-22 15:31:52,291:INFO:Logical Core: 16
2025-09-22 15:31:52,291:INFO:Checking libraries
2025-09-22 15:31:52,291:INFO:System:
2025-09-22 15:31:52,291:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-22 15:31:52,292:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-22 15:31:52,292:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-22 15:31:52,292:INFO:PyCaret required dependencies:
2025-09-22 15:31:52,292:INFO:                 pip: 25.2
2025-09-22 15:31:52,292:INFO:          setuptools: 78.1.1
2025-09-22 15:31:52,292:INFO:             pycaret: 3.3.2
2025-09-22 15:31:52,292:INFO:             IPython: 8.37.0
2025-09-22 15:31:52,292:INFO:          ipywidgets: 8.1.7
2025-09-22 15:31:52,293:INFO:                tqdm: 4.67.1
2025-09-22 15:31:52,293:INFO:               numpy: 1.26.4
2025-09-22 15:31:52,293:INFO:              pandas: 2.1.4
2025-09-22 15:31:52,293:INFO:              jinja2: 3.1.6
2025-09-22 15:31:52,293:INFO:               scipy: 1.11.4
2025-09-22 15:31:52,293:INFO:              joblib: 1.3.2
2025-09-22 15:31:52,293:INFO:             sklearn: 1.4.2
2025-09-22 15:31:52,293:INFO:                pyod: 2.0.5
2025-09-22 15:31:52,293:INFO:            imblearn: 0.14.0
2025-09-22 15:31:52,293:INFO:   category_encoders: 2.7.0
2025-09-22 15:31:52,293:INFO:            lightgbm: 4.6.0
2025-09-22 15:31:52,293:INFO:               numba: 0.61.0
2025-09-22 15:31:52,293:INFO:            requests: 2.32.5
2025-09-22 15:31:52,293:INFO:          matplotlib: 3.7.5
2025-09-22 15:31:52,293:INFO:          scikitplot: 0.3.7
2025-09-22 15:31:52,293:INFO:         yellowbrick: 1.5
2025-09-22 15:31:52,293:INFO:              plotly: 5.24.1
2025-09-22 15:31:52,293:INFO:    plotly-resampler: Not installed
2025-09-22 15:31:52,293:INFO:             kaleido: 1.1.0
2025-09-22 15:31:52,293:INFO:           schemdraw: 0.15
2025-09-22 15:31:52,293:INFO:         statsmodels: 0.14.5
2025-09-22 15:31:52,293:INFO:              sktime: 0.26.0
2025-09-22 15:31:52,293:INFO:               tbats: 1.1.3
2025-09-22 15:31:52,295:INFO:            pmdarima: 2.0.4
2025-09-22 15:31:52,295:INFO:              psutil: 7.1.0
2025-09-22 15:31:52,295:INFO:          markupsafe: 3.0.2
2025-09-22 15:31:52,295:INFO:             pickle5: Not installed
2025-09-22 15:31:52,295:INFO:         cloudpickle: 3.1.1
2025-09-22 15:31:52,295:INFO:         deprecation: 2.1.0
2025-09-22 15:31:52,295:INFO:              xxhash: 3.5.0
2025-09-22 15:31:52,295:INFO:           wurlitzer: Not installed
2025-09-22 15:31:52,295:INFO:PyCaret optional dependencies:
2025-09-22 15:31:52,295:INFO:                shap: 0.44.1
2025-09-22 15:31:52,295:INFO:           interpret: 0.7.2
2025-09-22 15:31:52,295:INFO:                umap: 0.5.7
2025-09-22 15:31:52,295:INFO:     ydata_profiling: 4.16.1
2025-09-22 15:31:52,295:INFO:  explainerdashboard: 0.5.1
2025-09-22 15:31:52,295:INFO:             autoviz: Not installed
2025-09-22 15:31:52,295:INFO:           fairlearn: 0.7.0
2025-09-22 15:31:52,295:INFO:          deepchecks: Not installed
2025-09-22 15:31:52,295:INFO:             xgboost: 3.0.5
2025-09-22 15:31:52,295:INFO:            catboost: 1.2.8
2025-09-22 15:31:52,296:INFO:              kmodes: 0.12.2
2025-09-22 15:31:52,296:INFO:             mlxtend: 0.23.4
2025-09-22 15:31:52,296:INFO:       statsforecast: 1.5.0
2025-09-22 15:31:52,296:INFO:        tune_sklearn: Not installed
2025-09-22 15:31:52,296:INFO:                 ray: Not installed
2025-09-22 15:31:52,296:INFO:            hyperopt: 0.2.7
2025-09-22 15:31:52,296:INFO:              optuna: 4.5.0
2025-09-22 15:31:52,296:INFO:               skopt: 0.10.2
2025-09-22 15:31:52,296:INFO:              mlflow: 3.4.0
2025-09-22 15:31:52,296:INFO:              gradio: 5.46.1
2025-09-22 15:31:52,296:INFO:             fastapi: 0.117.1
2025-09-22 15:31:52,296:INFO:             uvicorn: 0.36.0
2025-09-22 15:31:52,296:INFO:              m2cgen: 0.10.0
2025-09-22 15:31:52,296:INFO:           evidently: 0.4.40
2025-09-22 15:31:52,296:INFO:               fugue: 0.8.7
2025-09-22 15:31:52,296:INFO:           streamlit: Not installed
2025-09-22 15:31:52,296:INFO:             prophet: Not installed
2025-09-22 15:31:52,296:INFO:None
2025-09-22 15:31:52,296:INFO:Set up data.
2025-09-22 15:31:52,301:INFO:Set up index.
2025-09-22 15:31:52,301:INFO:Assigning column types.
2025-09-22 15:31:52,307:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-22 15:31:52,307:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:31:52,307:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:31:52,307:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:31:52,308:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:31:52,308:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-22 15:31:52,308:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:31:52,308:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:31:52,309:INFO:Preparing preprocessing pipeline...
2025-09-22 15:31:52,309:INFO:Set up simple imputation.
2025-09-22 15:31:52,310:INFO:Set up feature normalization.
2025-09-22 15:31:52,347:INFO:Finished creating preprocessing pipeline.
2025-09-22 15:31:52,353:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n',
                                             'AtenciÃ³n_personal', 'Limpieza'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-22 15:31:52,353:INFO:Creating final display dataframe.
2025-09-22 15:31:52,391:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape            (50000, 6)
2   Transformed data shape            (50000, 6)
3         Numeric features                     6
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  a4d8
2025-09-22 15:31:52,391:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:31:52,392:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:31:52,392:INFO:setup() successfully completed in 0.11s...............
2025-09-22 15:31:52,392:INFO:Initializing create_model()
2025-09-22 15:31:52,392:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BE8AD80850>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:31:52,392:INFO:Checking exceptions
2025-09-22 15:31:52,478:INFO:Importing untrained model
2025-09-22 15:31:52,484:INFO:K-Means Clustering Imported successfully
2025-09-22 15:31:52,496:INFO:Fitting Model
2025-09-22 15:32:24,186:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:32:24,186:INFO:create_models() successfully completed......................................
2025-09-22 15:32:24,197:INFO:Uploading results into container
2025-09-22 15:32:24,198:INFO:Uploading model into container now
2025-09-22 15:32:24,208:INFO:_master_model_container: 1
2025-09-22 15:32:24,208:INFO:_display_container: 2
2025-09-22 15:32:24,211:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:32:24,211:INFO:create_model() successfully completed......................................
2025-09-22 15:32:24,401:INFO:Initializing assign_model()
2025-09-22 15:32:24,401:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BE8AD80850>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:32:24,401:INFO:Checking exceptions
2025-09-22 15:32:24,401:INFO:Determining Trained Model
2025-09-22 15:32:24,401:INFO:Trained Model : K-Means Clustering
2025-09-22 15:32:24,401:INFO:Copying data
2025-09-22 15:32:24,427:INFO:(50000, 7)
2025-09-22 15:32:24,427:INFO:assign_model() successfully completed......................................
2025-09-22 15:32:56,992:INFO:Initializing create_model()
2025-09-22 15:32:56,992:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BE8AD80850>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:32:56,992:INFO:Checking exceptions
2025-09-22 15:32:57,075:INFO:Importing untrained model
2025-09-22 15:32:57,082:INFO:Agglomerative Clustering Imported successfully
2025-09-22 15:32:57,085:INFO:Fitting Model
2025-09-22 15:37:18,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:37:18,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:37:18,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:37:18,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 15:37:22,060:INFO:PyCaret ClusteringExperiment
2025-09-22 15:37:22,060:INFO:Logging name: cluster-default-name
2025-09-22 15:37:22,060:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-22 15:37:22,062:INFO:version 3.3.2
2025-09-22 15:37:22,062:INFO:Initializing setup()
2025-09-22 15:37:22,062:INFO:self.USI: 3c4b
2025-09-22 15:37:22,062:INFO:self._variable_keys: {'_available_plots', 'USI', 'memory', 'pipeline', 'gpu_param', 'n_jobs_param', 'seed', 'data', '_ml_usecase', 'log_plots_param', 'gpu_n_jobs_param', 'logging_param', 'idx', 'exp_id', 'X', 'html_param', 'exp_name_log'}
2025-09-22 15:37:22,062:INFO:Checking environment
2025-09-22 15:37:22,062:INFO:python_version: 3.10.18
2025-09-22 15:37:22,062:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-22 15:37:22,062:INFO:machine: AMD64
2025-09-22 15:37:22,062:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-22 15:37:22,062:INFO:Memory: svmem(total=16486035456, available=10991816704, percent=33.3, used=5494218752, free=10991816704)
2025-09-22 15:37:22,062:INFO:Physical Core: 8
2025-09-22 15:37:22,062:INFO:Logical Core: 16
2025-09-22 15:37:22,062:INFO:Checking libraries
2025-09-22 15:37:22,062:INFO:System:
2025-09-22 15:37:22,062:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-22 15:37:22,062:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-22 15:37:22,062:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-22 15:37:22,062:INFO:PyCaret required dependencies:
2025-09-22 15:37:24,351:INFO:                 pip: 25.2
2025-09-22 15:37:24,351:INFO:          setuptools: 78.1.1
2025-09-22 15:37:24,351:INFO:             pycaret: 3.3.2
2025-09-22 15:37:24,351:INFO:             IPython: 8.37.0
2025-09-22 15:37:24,351:INFO:          ipywidgets: 8.1.7
2025-09-22 15:37:24,351:INFO:                tqdm: 4.67.1
2025-09-22 15:37:24,351:INFO:               numpy: 1.26.4
2025-09-22 15:37:24,351:INFO:              pandas: 2.1.4
2025-09-22 15:37:24,351:INFO:              jinja2: 3.1.6
2025-09-22 15:37:24,351:INFO:               scipy: 1.11.4
2025-09-22 15:37:24,351:INFO:              joblib: 1.3.2
2025-09-22 15:37:24,351:INFO:             sklearn: 1.4.2
2025-09-22 15:37:24,351:INFO:                pyod: 2.0.5
2025-09-22 15:37:24,351:INFO:            imblearn: 0.14.0
2025-09-22 15:37:24,351:INFO:   category_encoders: 2.7.0
2025-09-22 15:37:24,351:INFO:            lightgbm: 4.6.0
2025-09-22 15:37:24,351:INFO:               numba: 0.61.0
2025-09-22 15:37:24,351:INFO:            requests: 2.32.5
2025-09-22 15:37:24,351:INFO:          matplotlib: 3.7.5
2025-09-22 15:37:24,351:INFO:          scikitplot: 0.3.7
2025-09-22 15:37:24,351:INFO:         yellowbrick: 1.5
2025-09-22 15:37:24,351:INFO:              plotly: 5.24.1
2025-09-22 15:37:24,351:INFO:    plotly-resampler: Not installed
2025-09-22 15:37:24,351:INFO:             kaleido: 1.1.0
2025-09-22 15:37:24,351:INFO:           schemdraw: 0.15
2025-09-22 15:37:24,351:INFO:         statsmodels: 0.14.5
2025-09-22 15:37:24,351:INFO:              sktime: 0.26.0
2025-09-22 15:37:24,351:INFO:               tbats: 1.1.3
2025-09-22 15:37:24,351:INFO:            pmdarima: 2.0.4
2025-09-22 15:37:24,352:INFO:              psutil: 7.1.0
2025-09-22 15:37:24,352:INFO:          markupsafe: 3.0.2
2025-09-22 15:37:24,352:INFO:             pickle5: Not installed
2025-09-22 15:37:24,352:INFO:         cloudpickle: 3.1.1
2025-09-22 15:37:24,352:INFO:         deprecation: 2.1.0
2025-09-22 15:37:24,352:INFO:              xxhash: 3.5.0
2025-09-22 15:37:24,352:INFO:           wurlitzer: Not installed
2025-09-22 15:37:24,352:INFO:PyCaret optional dependencies:
2025-09-22 15:37:33,862:INFO:                shap: 0.44.1
2025-09-22 15:37:33,862:INFO:           interpret: 0.7.2
2025-09-22 15:37:33,862:INFO:                umap: 0.5.7
2025-09-22 15:37:33,862:INFO:     ydata_profiling: 4.16.1
2025-09-22 15:37:33,862:INFO:  explainerdashboard: 0.5.1
2025-09-22 15:37:33,862:INFO:             autoviz: Not installed
2025-09-22 15:37:33,862:INFO:           fairlearn: 0.7.0
2025-09-22 15:37:33,862:INFO:          deepchecks: Not installed
2025-09-22 15:37:33,862:INFO:             xgboost: 3.0.5
2025-09-22 15:37:33,862:INFO:            catboost: 1.2.8
2025-09-22 15:37:33,864:INFO:              kmodes: 0.12.2
2025-09-22 15:37:33,864:INFO:             mlxtend: 0.23.4
2025-09-22 15:37:33,864:INFO:       statsforecast: 1.5.0
2025-09-22 15:37:33,864:INFO:        tune_sklearn: Not installed
2025-09-22 15:37:33,864:INFO:                 ray: Not installed
2025-09-22 15:37:33,864:INFO:            hyperopt: 0.2.7
2025-09-22 15:37:33,864:INFO:              optuna: 4.5.0
2025-09-22 15:37:33,864:INFO:               skopt: 0.10.2
2025-09-22 15:37:33,864:INFO:              mlflow: 3.4.0
2025-09-22 15:37:33,864:INFO:              gradio: 5.46.1
2025-09-22 15:37:33,864:INFO:             fastapi: 0.117.1
2025-09-22 15:37:33,864:INFO:             uvicorn: 0.36.0
2025-09-22 15:37:33,864:INFO:              m2cgen: 0.10.0
2025-09-22 15:37:33,864:INFO:           evidently: 0.4.40
2025-09-22 15:37:33,864:INFO:               fugue: 0.8.7
2025-09-22 15:37:33,864:INFO:           streamlit: Not installed
2025-09-22 15:37:33,864:INFO:             prophet: Not installed
2025-09-22 15:37:33,864:INFO:None
2025-09-22 15:37:33,864:INFO:Set up data.
2025-09-22 15:37:33,871:INFO:Set up index.
2025-09-22 15:37:33,871:INFO:Assigning column types.
2025-09-22 15:37:33,879:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-22 15:37:33,879:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:37:33,879:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:37:33,889:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:37:33,889:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:37:33,889:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-22 15:37:33,889:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:37:33,889:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:37:33,894:INFO:Preparing preprocessing pipeline...
2025-09-22 15:37:33,895:INFO:Set up simple imputation.
2025-09-22 15:37:33,895:INFO:Set up feature normalization.
2025-09-22 15:37:33,929:INFO:Finished creating preprocessing pipeline.
2025-09-22 15:37:33,935:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['id', 'estadia_dias', 'edad',
                                             'antelacion_reserva_dias',
                                             'num_huespedes', 'calificacion'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-22 15:37:33,935:INFO:Creating final display dataframe.
2025-09-22 15:37:33,969:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape              (100, 6)
2   Transformed data shape              (100, 6)
3         Numeric features                     6
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  3c4b
2025-09-22 15:37:33,969:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:37:33,969:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:37:33,969:INFO:setup() successfully completed in 11.92s...............
2025-09-22 15:37:33,971:INFO:Initializing create_model()
2025-09-22 15:37:33,971:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:33,971:INFO:Checking exceptions
2025-09-22 15:37:34,046:INFO:Importing untrained model
2025-09-22 15:37:34,058:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:34,068:INFO:Fitting Model
2025-09-22 15:37:34,243:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:37:34,243:INFO:create_models() successfully completed......................................
2025-09-22 15:37:34,252:INFO:Uploading results into container
2025-09-22 15:37:34,252:INFO:Uploading model into container now
2025-09-22 15:37:34,266:INFO:_master_model_container: 1
2025-09-22 15:37:34,268:INFO:_display_container: 2
2025-09-22 15:37:34,268:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:37:34,268:INFO:create_model() successfully completed......................................
2025-09-22 15:37:34,446:INFO:Initializing assign_model()
2025-09-22 15:37:34,446:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:34,446:INFO:Checking exceptions
2025-09-22 15:37:34,447:INFO:Determining Trained Model
2025-09-22 15:37:34,447:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:34,447:INFO:Copying data
2025-09-22 15:37:34,447:INFO:(100, 7)
2025-09-22 15:37:34,447:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:34,459:INFO:Initializing create_model()
2025-09-22 15:37:34,459:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:34,459:INFO:Checking exceptions
2025-09-22 15:37:34,523:INFO:Importing untrained model
2025-09-22 15:37:34,533:INFO:Agglomerative Clustering Imported successfully
2025-09-22 15:37:34,542:INFO:Fitting Model
2025-09-22 15:37:34,575:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-22 15:37:34,578:INFO:create_models() successfully completed......................................
2025-09-22 15:37:34,584:INFO:Uploading results into container
2025-09-22 15:37:34,584:INFO:Uploading model into container now
2025-09-22 15:37:34,593:INFO:_master_model_container: 2
2025-09-22 15:37:34,593:INFO:_display_container: 3
2025-09-22 15:37:34,593:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-22 15:37:34,595:INFO:create_model() successfully completed......................................
2025-09-22 15:37:34,763:INFO:Initializing assign_model()
2025-09-22 15:37:34,763:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=False)
2025-09-22 15:37:34,763:INFO:Checking exceptions
2025-09-22 15:37:34,763:INFO:Determining Trained Model
2025-09-22 15:37:34,765:INFO:Trained Model : Agglomerative Clustering
2025-09-22 15:37:34,765:INFO:Copying data
2025-09-22 15:37:34,765:INFO:(100, 7)
2025-09-22 15:37:34,765:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:34,773:INFO:Initializing create_model()
2025-09-22 15:37:34,773:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:34,773:INFO:Checking exceptions
2025-09-22 15:37:34,826:INFO:Importing untrained model
2025-09-22 15:37:34,834:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-22 15:37:34,843:INFO:Fitting Model
2025-09-22 15:37:34,906:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-22 15:37:34,908:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-22 15:37:34,908:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-22 15:37:34,911:INFO:DBSCAN(n_jobs=-1)
2025-09-22 15:37:34,911:INFO:create_models() successfully completed......................................
2025-09-22 15:37:34,917:INFO:Uploading results into container
2025-09-22 15:37:34,917:INFO:Uploading model into container now
2025-09-22 15:37:34,930:INFO:_master_model_container: 3
2025-09-22 15:37:34,930:INFO:_display_container: 4
2025-09-22 15:37:34,930:INFO:DBSCAN(n_jobs=-1)
2025-09-22 15:37:34,930:INFO:create_model() successfully completed......................................
2025-09-22 15:37:35,105:INFO:Initializing assign_model()
2025-09-22 15:37:35,105:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-22 15:37:35,105:INFO:Checking exceptions
2025-09-22 15:37:35,105:INFO:Determining Trained Model
2025-09-22 15:37:35,105:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-22 15:37:35,105:INFO:Copying data
2025-09-22 15:37:35,105:INFO:(100, 7)
2025-09-22 15:37:35,105:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:35,105:INFO:Initializing create_model()
2025-09-22 15:37:35,105:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:35,105:INFO:Checking exceptions
2025-09-22 15:37:35,289:INFO:Importing untrained model
2025-09-22 15:37:35,295:INFO:Mean Shift Clustering Imported successfully
2025-09-22 15:37:35,307:INFO:Fitting Model
2025-09-22 15:37:39,269:INFO:MeanShift(n_jobs=-1)
2025-09-22 15:37:39,269:INFO:create_models() successfully completed......................................
2025-09-22 15:37:39,276:INFO:Uploading results into container
2025-09-22 15:37:39,277:INFO:Uploading model into container now
2025-09-22 15:37:39,290:INFO:_master_model_container: 4
2025-09-22 15:37:39,290:INFO:_display_container: 5
2025-09-22 15:37:39,290:INFO:MeanShift(n_jobs=-1)
2025-09-22 15:37:39,291:INFO:create_model() successfully completed......................................
2025-09-22 15:37:39,470:INFO:Initializing assign_model()
2025-09-22 15:37:39,471:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=False)
2025-09-22 15:37:39,471:INFO:Checking exceptions
2025-09-22 15:37:39,471:INFO:Determining Trained Model
2025-09-22 15:37:39,471:INFO:Trained Model : Mean Shift Clustering
2025-09-22 15:37:39,471:INFO:Copying data
2025-09-22 15:37:39,473:INFO:(100, 7)
2025-09-22 15:37:39,473:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:39,485:INFO:Initializing create_model()
2025-09-22 15:37:39,485:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:39,485:INFO:Checking exceptions
2025-09-22 15:37:39,560:INFO:Importing untrained model
2025-09-22 15:37:39,571:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:39,583:INFO:Fitting Model
2025-09-22 15:37:39,658:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:37:39,658:INFO:create_models() successfully completed......................................
2025-09-22 15:37:39,666:INFO:Uploading results into container
2025-09-22 15:37:39,667:INFO:Uploading model into container now
2025-09-22 15:37:39,679:INFO:_master_model_container: 5
2025-09-22 15:37:39,680:INFO:_display_container: 6
2025-09-22 15:37:39,680:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:37:39,681:INFO:create_model() successfully completed......................................
2025-09-22 15:37:39,868:INFO:Initializing assign_model()
2025-09-22 15:37:39,868:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:39,868:INFO:Checking exceptions
2025-09-22 15:37:39,868:INFO:Determining Trained Model
2025-09-22 15:37:39,868:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:39,868:INFO:Copying data
2025-09-22 15:37:39,870:INFO:(100, 7)
2025-09-22 15:37:39,870:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:39,879:INFO:Initializing plot_model()
2025-09-22 15:37:39,879:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=2, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, system=True)
2025-09-22 15:37:39,879:INFO:Checking exceptions
2025-09-22 15:37:39,882:INFO:Preloading libraries
2025-09-22 15:37:39,883:INFO:Copying training dataset
2025-09-22 15:37:39,883:INFO:Plot type: cluster
2025-09-22 15:37:39,884:INFO:SubProcess assign_model() called ==================================
2025-09-22 15:37:39,884:INFO:Initializing assign_model()
2025-09-22 15:37:39,884:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=2, random_state=123), transformation=True, score=True, verbose=False)
2025-09-22 15:37:39,884:INFO:Checking exceptions
2025-09-22 15:37:39,884:INFO:Determining Trained Model
2025-09-22 15:37:39,884:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:39,884:INFO:Copying data
2025-09-22 15:37:39,893:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-22 15:37:39,893:INFO:(100, 7)
2025-09-22 15:37:39,894:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:39,894:INFO:SubProcess assign_model() end ==================================
2025-09-22 15:37:39,896:INFO:Fitting PCA()
2025-09-22 15:37:39,907:INFO:Sorting dataframe
2025-09-22 15:37:39,910:INFO:Rendering Visual
2025-09-22 15:37:40,496:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\kaleido\_sync_server.py:11: UserWarning:



Warning: You have Plotly version 5.24.1, which is not compatible with this version of Kaleido (1.1.0).

This means that static image generation (e.g. `fig.write_image()`) will not work.

Please upgrade Plotly to version 6.1.1 or greater, or downgrade Kaleido to version 0.2.1.



2025-09-22 15:37:40,628:INFO:Visual Rendered Successfully
2025-09-22 15:37:40,831:INFO:plot_model() successfully completed......................................
2025-09-22 15:37:40,831:INFO:Initializing create_model()
2025-09-22 15:37:40,833:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:40,833:INFO:Checking exceptions
2025-09-22 15:37:40,881:INFO:Importing untrained model
2025-09-22 15:37:40,887:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:40,897:INFO:Fitting Model
2025-09-22 15:37:40,930:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:37:40,930:INFO:create_models() successfully completed......................................
2025-09-22 15:37:40,939:INFO:Uploading results into container
2025-09-22 15:37:40,941:INFO:Uploading model into container now
2025-09-22 15:37:40,951:INFO:_master_model_container: 6
2025-09-22 15:37:40,952:INFO:_display_container: 7
2025-09-22 15:37:40,953:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:37:40,953:INFO:create_model() successfully completed......................................
2025-09-22 15:37:41,165:INFO:Initializing assign_model()
2025-09-22 15:37:41,166:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:41,166:INFO:Checking exceptions
2025-09-22 15:37:41,166:INFO:Determining Trained Model
2025-09-22 15:37:41,166:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:41,166:INFO:Copying data
2025-09-22 15:37:41,167:INFO:(100, 7)
2025-09-22 15:37:41,167:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:41,174:INFO:Initializing create_model()
2025-09-22 15:37:41,174:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:41,174:INFO:Checking exceptions
2025-09-22 15:37:41,217:INFO:Importing untrained model
2025-09-22 15:37:41,237:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:41,248:INFO:Fitting Model
2025-09-22 15:37:41,293:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-22 15:37:41,293:INFO:create_models() successfully completed......................................
2025-09-22 15:37:41,301:INFO:Uploading results into container
2025-09-22 15:37:41,302:INFO:Uploading model into container now
2025-09-22 15:37:41,315:INFO:_master_model_container: 7
2025-09-22 15:37:41,315:INFO:_display_container: 8
2025-09-22 15:37:41,316:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-22 15:37:41,317:INFO:create_model() successfully completed......................................
2025-09-22 15:37:41,509:INFO:Initializing assign_model()
2025-09-22 15:37:41,510:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=3, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:41,510:INFO:Checking exceptions
2025-09-22 15:37:41,510:INFO:Determining Trained Model
2025-09-22 15:37:41,510:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:41,510:INFO:Copying data
2025-09-22 15:37:41,512:INFO:(100, 7)
2025-09-22 15:37:41,512:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:41,519:INFO:Initializing create_model()
2025-09-22 15:37:41,519:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:41,519:INFO:Checking exceptions
2025-09-22 15:37:41,560:INFO:Importing untrained model
2025-09-22 15:37:41,566:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:41,573:INFO:Fitting Model
2025-09-22 15:37:41,604:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:37:41,605:INFO:create_models() successfully completed......................................
2025-09-22 15:37:41,612:INFO:Uploading results into container
2025-09-22 15:37:41,613:INFO:Uploading model into container now
2025-09-22 15:37:41,624:INFO:_master_model_container: 8
2025-09-22 15:37:41,625:INFO:_display_container: 9
2025-09-22 15:37:41,625:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:37:41,625:INFO:create_model() successfully completed......................................
2025-09-22 15:37:41,807:INFO:Initializing assign_model()
2025-09-22 15:37:41,807:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:41,807:INFO:Checking exceptions
2025-09-22 15:37:41,807:INFO:Determining Trained Model
2025-09-22 15:37:41,807:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:41,807:INFO:Copying data
2025-09-22 15:37:41,808:INFO:(100, 7)
2025-09-22 15:37:41,809:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:41,816:INFO:Initializing create_model()
2025-09-22 15:37:41,816:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:41,816:INFO:Checking exceptions
2025-09-22 15:37:41,853:INFO:Importing untrained model
2025-09-22 15:37:41,865:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:41,875:INFO:Fitting Model
2025-09-22 15:37:41,924:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-22 15:37:41,924:INFO:create_models() successfully completed......................................
2025-09-22 15:37:41,937:INFO:Uploading results into container
2025-09-22 15:37:41,939:INFO:Uploading model into container now
2025-09-22 15:37:41,950:INFO:_master_model_container: 9
2025-09-22 15:37:41,951:INFO:_display_container: 10
2025-09-22 15:37:41,951:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-22 15:37:41,952:INFO:create_model() successfully completed......................................
2025-09-22 15:37:42,145:INFO:Initializing assign_model()
2025-09-22 15:37:42,145:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=5, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:42,145:INFO:Checking exceptions
2025-09-22 15:37:42,145:INFO:Determining Trained Model
2025-09-22 15:37:42,145:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:42,146:INFO:Copying data
2025-09-22 15:37:42,147:INFO:(100, 7)
2025-09-22 15:37:42,147:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:42,155:INFO:Initializing create_model()
2025-09-22 15:37:42,155:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=6, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:42,155:INFO:Checking exceptions
2025-09-22 15:37:42,192:INFO:Importing untrained model
2025-09-22 15:37:42,200:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:42,207:INFO:Fitting Model
2025-09-22 15:37:42,250:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-22 15:37:42,250:INFO:create_models() successfully completed......................................
2025-09-22 15:37:42,258:INFO:Uploading results into container
2025-09-22 15:37:42,259:INFO:Uploading model into container now
2025-09-22 15:37:42,273:INFO:_master_model_container: 10
2025-09-22 15:37:42,274:INFO:_display_container: 11
2025-09-22 15:37:42,274:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-22 15:37:42,275:INFO:create_model() successfully completed......................................
2025-09-22 15:37:42,479:INFO:Initializing assign_model()
2025-09-22 15:37:42,480:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=6, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:42,480:INFO:Checking exceptions
2025-09-22 15:37:42,480:INFO:Determining Trained Model
2025-09-22 15:37:42,480:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:42,480:INFO:Copying data
2025-09-22 15:37:42,481:INFO:(100, 7)
2025-09-22 15:37:42,481:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:42,489:INFO:Initializing create_model()
2025-09-22 15:37:42,489:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=7, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:42,489:INFO:Checking exceptions
2025-09-22 15:37:42,528:INFO:Importing untrained model
2025-09-22 15:37:42,540:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:42,554:INFO:Fitting Model
2025-09-22 15:37:42,593:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-22 15:37:42,593:INFO:create_models() successfully completed......................................
2025-09-22 15:37:42,600:INFO:Uploading results into container
2025-09-22 15:37:42,602:INFO:Uploading model into container now
2025-09-22 15:37:42,613:INFO:_master_model_container: 11
2025-09-22 15:37:42,613:INFO:_display_container: 12
2025-09-22 15:37:42,615:INFO:KMeans(n_clusters=7, random_state=123)
2025-09-22 15:37:42,615:INFO:create_model() successfully completed......................................
2025-09-22 15:37:42,801:INFO:Initializing assign_model()
2025-09-22 15:37:42,801:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=7, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:42,801:INFO:Checking exceptions
2025-09-22 15:37:42,801:INFO:Determining Trained Model
2025-09-22 15:37:42,801:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:42,802:INFO:Copying data
2025-09-22 15:37:42,803:INFO:(100, 7)
2025-09-22 15:37:42,803:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:42,810:INFO:Initializing create_model()
2025-09-22 15:37:42,810:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=8, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:42,810:INFO:Checking exceptions
2025-09-22 15:37:42,847:INFO:Importing untrained model
2025-09-22 15:37:42,856:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:42,862:INFO:Fitting Model
2025-09-22 15:37:42,903:INFO:KMeans(random_state=123)
2025-09-22 15:37:42,903:INFO:create_models() successfully completed......................................
2025-09-22 15:37:42,912:INFO:Uploading results into container
2025-09-22 15:37:42,914:INFO:Uploading model into container now
2025-09-22 15:37:42,925:INFO:_master_model_container: 12
2025-09-22 15:37:42,925:INFO:_display_container: 13
2025-09-22 15:37:42,925:INFO:KMeans(random_state=123)
2025-09-22 15:37:42,926:INFO:create_model() successfully completed......................................
2025-09-22 15:37:43,122:INFO:Initializing assign_model()
2025-09-22 15:37:43,123:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:43,123:INFO:Checking exceptions
2025-09-22 15:37:43,123:INFO:Determining Trained Model
2025-09-22 15:37:43,123:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:43,123:INFO:Copying data
2025-09-22 15:37:43,124:INFO:(100, 7)
2025-09-22 15:37:43,125:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:43,134:INFO:Initializing create_model()
2025-09-22 15:37:43,134:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=9, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:43,134:INFO:Checking exceptions
2025-09-22 15:37:43,174:INFO:Importing untrained model
2025-09-22 15:37:43,183:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:43,192:INFO:Fitting Model
2025-09-22 15:37:43,228:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-22 15:37:43,229:INFO:create_models() successfully completed......................................
2025-09-22 15:37:43,237:INFO:Uploading results into container
2025-09-22 15:37:43,238:INFO:Uploading model into container now
2025-09-22 15:37:43,253:INFO:_master_model_container: 13
2025-09-22 15:37:43,254:INFO:_display_container: 14
2025-09-22 15:37:43,254:INFO:KMeans(n_clusters=9, random_state=123)
2025-09-22 15:37:43,254:INFO:create_model() successfully completed......................................
2025-09-22 15:37:43,464:INFO:Initializing assign_model()
2025-09-22 15:37:43,464:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=9, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:43,464:INFO:Checking exceptions
2025-09-22 15:37:43,464:INFO:Determining Trained Model
2025-09-22 15:37:43,465:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:43,465:INFO:Copying data
2025-09-22 15:37:43,467:INFO:(100, 7)
2025-09-22 15:37:43,467:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:43,476:INFO:Initializing create_model()
2025-09-22 15:37:43,476:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, estimator=kmeans, num_clusters=10, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:37:43,476:INFO:Checking exceptions
2025-09-22 15:37:43,519:INFO:Importing untrained model
2025-09-22 15:37:43,525:INFO:K-Means Clustering Imported successfully
2025-09-22 15:37:43,534:INFO:Fitting Model
2025-09-22 15:37:43,575:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-22 15:37:43,576:INFO:create_models() successfully completed......................................
2025-09-22 15:37:43,586:INFO:Uploading results into container
2025-09-22 15:37:43,588:INFO:Uploading model into container now
2025-09-22 15:37:43,604:INFO:_master_model_container: 14
2025-09-22 15:37:43,604:INFO:_display_container: 15
2025-09-22 15:37:43,605:INFO:KMeans(n_clusters=10, random_state=123)
2025-09-22 15:37:43,606:INFO:create_model() successfully completed......................................
2025-09-22 15:37:43,817:INFO:Initializing assign_model()
2025-09-22 15:37:43,818:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E7721FDF0>, model=KMeans(n_clusters=10, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:37:43,818:INFO:Checking exceptions
2025-09-22 15:37:43,818:INFO:Determining Trained Model
2025-09-22 15:37:43,818:INFO:Trained Model : K-Means Clustering
2025-09-22 15:37:43,818:INFO:Copying data
2025-09-22 15:37:43,819:INFO:(100, 7)
2025-09-22 15:37:43,819:INFO:assign_model() successfully completed......................................
2025-09-22 15:37:44,597:WARNING:WARNING	Comm:base_comm.py:get_comm()- No such comm: a90ee2e4711b4fa381bbc9fce98e4d7c
2025-09-22 15:37:44,606:WARNING:WARNING	Comm:base_comm.py:get_comm()- No such comm: 4b370157bcda4b13879da03a28b32f8f
2025-09-22 15:56:07,076:INFO:PyCaret ClusteringExperiment
2025-09-22 15:56:07,076:INFO:Logging name: cluster-default-name
2025-09-22 15:56:07,076:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-22 15:56:07,076:INFO:version 3.3.2
2025-09-22 15:56:07,076:INFO:Initializing setup()
2025-09-22 15:56:07,076:INFO:self.USI: 9a15
2025-09-22 15:56:07,076:INFO:self._variable_keys: {'_available_plots', 'USI', 'memory', 'pipeline', 'gpu_param', 'n_jobs_param', 'seed', 'data', '_ml_usecase', 'log_plots_param', 'gpu_n_jobs_param', 'logging_param', 'idx', 'exp_id', 'X', 'html_param', 'exp_name_log'}
2025-09-22 15:56:07,076:INFO:Checking environment
2025-09-22 15:56:07,076:INFO:python_version: 3.10.18
2025-09-22 15:56:07,076:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-22 15:56:07,076:INFO:machine: AMD64
2025-09-22 15:56:07,076:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-22 15:56:07,076:INFO:Memory: svmem(total=16486035456, available=10409811968, percent=36.9, used=6076223488, free=10409811968)
2025-09-22 15:56:07,076:INFO:Physical Core: 8
2025-09-22 15:56:07,076:INFO:Logical Core: 16
2025-09-22 15:56:07,076:INFO:Checking libraries
2025-09-22 15:56:07,076:INFO:System:
2025-09-22 15:56:07,076:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-22 15:56:07,076:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-22 15:56:07,076:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-22 15:56:07,076:INFO:PyCaret required dependencies:
2025-09-22 15:56:07,078:INFO:                 pip: 25.2
2025-09-22 15:56:07,078:INFO:          setuptools: 78.1.1
2025-09-22 15:56:07,078:INFO:             pycaret: 3.3.2
2025-09-22 15:56:07,078:INFO:             IPython: 8.37.0
2025-09-22 15:56:07,078:INFO:          ipywidgets: 8.1.7
2025-09-22 15:56:07,078:INFO:                tqdm: 4.67.1
2025-09-22 15:56:07,078:INFO:               numpy: 1.26.4
2025-09-22 15:56:07,078:INFO:              pandas: 2.1.4
2025-09-22 15:56:07,078:INFO:              jinja2: 3.1.6
2025-09-22 15:56:07,078:INFO:               scipy: 1.11.4
2025-09-22 15:56:07,078:INFO:              joblib: 1.3.2
2025-09-22 15:56:07,078:INFO:             sklearn: 1.4.2
2025-09-22 15:56:07,079:INFO:                pyod: 2.0.5
2025-09-22 15:56:07,079:INFO:            imblearn: 0.14.0
2025-09-22 15:56:07,079:INFO:   category_encoders: 2.7.0
2025-09-22 15:56:07,079:INFO:            lightgbm: 4.6.0
2025-09-22 15:56:07,079:INFO:               numba: 0.61.0
2025-09-22 15:56:07,079:INFO:            requests: 2.32.5
2025-09-22 15:56:07,079:INFO:          matplotlib: 3.7.5
2025-09-22 15:56:07,079:INFO:          scikitplot: 0.3.7
2025-09-22 15:56:07,079:INFO:         yellowbrick: 1.5
2025-09-22 15:56:07,079:INFO:              plotly: 5.24.1
2025-09-22 15:56:07,079:INFO:    plotly-resampler: Not installed
2025-09-22 15:56:07,079:INFO:             kaleido: 1.1.0
2025-09-22 15:56:07,079:INFO:           schemdraw: 0.15
2025-09-22 15:56:07,079:INFO:         statsmodels: 0.14.5
2025-09-22 15:56:07,079:INFO:              sktime: 0.26.0
2025-09-22 15:56:07,079:INFO:               tbats: 1.1.3
2025-09-22 15:56:07,079:INFO:            pmdarima: 2.0.4
2025-09-22 15:56:07,079:INFO:              psutil: 7.1.0
2025-09-22 15:56:07,079:INFO:          markupsafe: 3.0.2
2025-09-22 15:56:07,079:INFO:             pickle5: Not installed
2025-09-22 15:56:07,079:INFO:         cloudpickle: 3.1.1
2025-09-22 15:56:07,079:INFO:         deprecation: 2.1.0
2025-09-22 15:56:07,079:INFO:              xxhash: 3.5.0
2025-09-22 15:56:07,079:INFO:           wurlitzer: Not installed
2025-09-22 15:56:07,079:INFO:PyCaret optional dependencies:
2025-09-22 15:56:07,079:INFO:                shap: 0.44.1
2025-09-22 15:56:07,079:INFO:           interpret: 0.7.2
2025-09-22 15:56:07,079:INFO:                umap: 0.5.7
2025-09-22 15:56:07,079:INFO:     ydata_profiling: 4.16.1
2025-09-22 15:56:07,079:INFO:  explainerdashboard: 0.5.1
2025-09-22 15:56:07,079:INFO:             autoviz: Not installed
2025-09-22 15:56:07,079:INFO:           fairlearn: 0.7.0
2025-09-22 15:56:07,079:INFO:          deepchecks: Not installed
2025-09-22 15:56:07,079:INFO:             xgboost: 3.0.5
2025-09-22 15:56:07,079:INFO:            catboost: 1.2.8
2025-09-22 15:56:07,079:INFO:              kmodes: 0.12.2
2025-09-22 15:56:07,079:INFO:             mlxtend: 0.23.4
2025-09-22 15:56:07,079:INFO:       statsforecast: 1.5.0
2025-09-22 15:56:07,079:INFO:        tune_sklearn: Not installed
2025-09-22 15:56:07,079:INFO:                 ray: Not installed
2025-09-22 15:56:07,079:INFO:            hyperopt: 0.2.7
2025-09-22 15:56:07,079:INFO:              optuna: 4.5.0
2025-09-22 15:56:07,079:INFO:               skopt: 0.10.2
2025-09-22 15:56:07,079:INFO:              mlflow: 3.4.0
2025-09-22 15:56:07,079:INFO:              gradio: 5.46.1
2025-09-22 15:56:07,079:INFO:             fastapi: 0.117.1
2025-09-22 15:56:07,079:INFO:             uvicorn: 0.36.0
2025-09-22 15:56:07,079:INFO:              m2cgen: 0.10.0
2025-09-22 15:56:07,079:INFO:           evidently: 0.4.40
2025-09-22 15:56:07,079:INFO:               fugue: 0.8.7
2025-09-22 15:56:07,079:INFO:           streamlit: Not installed
2025-09-22 15:56:07,079:INFO:             prophet: Not installed
2025-09-22 15:56:07,079:INFO:None
2025-09-22 15:56:07,079:INFO:Set up data.
2025-09-22 15:56:07,088:INFO:Set up index.
2025-09-22 15:56:07,088:INFO:Assigning column types.
2025-09-22 15:56:07,088:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-22 15:56:07,088:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:56:07,088:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:56:07,088:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-22 15:56:07,088:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:56:07,088:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-22 15:56:07,088:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:56:07,093:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:56:07,093:INFO:Preparing preprocessing pipeline...
2025-09-22 15:56:07,093:INFO:Set up simple imputation.
2025-09-22 15:56:07,093:INFO:Set up feature normalization.
2025-09-22 15:56:07,131:INFO:Finished creating preprocessing pipeline.
2025-09-22 15:56:07,135:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n',
                                             'AtenciÃ³n_personal', 'Limpieza'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-22 15:56:07,135:INFO:Creating final display dataframe.
2025-09-22 15:56:07,171:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape            (50000, 6)
2   Transformed data shape            (50000, 6)
3         Numeric features                     6
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  9a15
2025-09-22 15:56:07,171:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:56:07,171:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-22 15:56:07,171:INFO:setup() successfully completed in 0.1s...............
2025-09-22 15:56:07,171:INFO:Initializing create_model()
2025-09-22 15:56:07,171:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:56:07,171:INFO:Checking exceptions
2025-09-22 15:56:07,245:INFO:Importing untrained model
2025-09-22 15:56:07,255:INFO:K-Means Clustering Imported successfully
2025-09-22 15:56:07,261:INFO:Fitting Model
2025-09-22 15:56:39,618:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:56:39,618:INFO:create_models() successfully completed......................................
2025-09-22 15:56:39,628:INFO:Uploading results into container
2025-09-22 15:56:39,630:INFO:Uploading model into container now
2025-09-22 15:56:39,641:INFO:_master_model_container: 1
2025-09-22 15:56:39,641:INFO:_display_container: 2
2025-09-22 15:56:39,643:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 15:56:39,643:INFO:create_model() successfully completed......................................
2025-09-22 15:56:39,883:INFO:Initializing assign_model()
2025-09-22 15:56:39,883:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:56:39,883:INFO:Checking exceptions
2025-09-22 15:56:39,883:INFO:Determining Trained Model
2025-09-22 15:56:39,883:INFO:Trained Model : K-Means Clustering
2025-09-22 15:56:39,883:INFO:Copying data
2025-09-22 15:56:39,915:INFO:(50000, 7)
2025-09-22 15:56:39,915:INFO:assign_model() successfully completed......................................
2025-09-22 15:57:12,939:INFO:Initializing create_model()
2025-09-22 15:57:12,939:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:57:12,939:INFO:Checking exceptions
2025-09-22 15:57:13,017:INFO:Importing untrained model
2025-09-22 15:57:13,024:INFO:K-Means Clustering Imported successfully
2025-09-22 15:57:13,034:INFO:Fitting Model
2025-09-22 15:57:47,659:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:57:47,659:INFO:create_models() successfully completed......................................
2025-09-22 15:57:47,671:INFO:Uploading results into container
2025-09-22 15:57:47,672:INFO:Uploading model into container now
2025-09-22 15:57:47,685:INFO:_master_model_container: 2
2025-09-22 15:57:47,686:INFO:_display_container: 3
2025-09-22 15:57:47,687:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:57:47,689:INFO:create_model() successfully completed......................................
2025-09-22 15:57:47,879:INFO:Initializing assign_model()
2025-09-22 15:57:47,880:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:57:47,880:INFO:Checking exceptions
2025-09-22 15:57:47,880:INFO:Determining Trained Model
2025-09-22 15:57:47,880:INFO:Trained Model : K-Means Clustering
2025-09-22 15:57:47,880:INFO:Copying data
2025-09-22 15:57:47,906:INFO:(50000, 7)
2025-09-22 15:57:47,906:INFO:assign_model() successfully completed......................................
2025-09-22 15:58:24,016:INFO:Initializing plot_model()
2025-09-22 15:58:24,016:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=2, random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, system=True)
2025-09-22 15:58:24,016:INFO:Checking exceptions
2025-09-22 15:58:24,021:INFO:Preloading libraries
2025-09-22 15:58:24,022:INFO:Copying training dataset
2025-09-22 15:58:24,022:INFO:Plot type: cluster
2025-09-22 15:58:24,023:INFO:SubProcess assign_model() called ==================================
2025-09-22 15:58:24,023:INFO:Initializing assign_model()
2025-09-22 15:58:24,024:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=2, random_state=123), transformation=True, score=True, verbose=False)
2025-09-22 15:58:24,024:INFO:Checking exceptions
2025-09-22 15:58:24,024:INFO:Determining Trained Model
2025-09-22 15:58:24,024:INFO:Trained Model : K-Means Clustering
2025-09-22 15:58:24,025:INFO:Copying data
2025-09-22 15:58:24,061:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-09-22 15:58:24,087:INFO:(50000, 7)
2025-09-22 15:58:24,087:INFO:assign_model() successfully completed......................................
2025-09-22 15:58:24,089:INFO:SubProcess assign_model() end ==================================
2025-09-22 15:58:24,093:INFO:Fitting PCA()
2025-09-22 15:58:24,150:INFO:Sorting dataframe
2025-09-22 15:58:24,195:INFO:Rendering Visual
2025-09-22 15:58:24,484:INFO:Visual Rendered Successfully
2025-09-22 15:58:24,712:INFO:plot_model() successfully completed......................................
2025-09-22 15:58:24,713:INFO:Initializing create_model()
2025-09-22 15:58:24,713:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:58:24,713:INFO:Checking exceptions
2025-09-22 15:58:24,808:INFO:Importing untrained model
2025-09-22 15:58:24,820:INFO:K-Means Clustering Imported successfully
2025-09-22 15:58:24,842:INFO:Fitting Model
2025-09-22 15:58:59,682:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:58:59,682:INFO:create_models() successfully completed......................................
2025-09-22 15:58:59,695:INFO:Uploading results into container
2025-09-22 15:58:59,697:INFO:Uploading model into container now
2025-09-22 15:58:59,709:INFO:_master_model_container: 3
2025-09-22 15:58:59,709:INFO:_display_container: 4
2025-09-22 15:58:59,710:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-22 15:58:59,711:INFO:create_model() successfully completed......................................
2025-09-22 15:58:59,885:INFO:Initializing assign_model()
2025-09-22 15:58:59,896:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 15:58:59,896:INFO:Checking exceptions
2025-09-22 15:58:59,896:INFO:Determining Trained Model
2025-09-22 15:58:59,896:INFO:Trained Model : K-Means Clustering
2025-09-22 15:58:59,896:INFO:Copying data
2025-09-22 15:58:59,922:INFO:(50000, 7)
2025-09-22 15:58:59,922:INFO:assign_model() successfully completed......................................
2025-09-22 15:59:36,227:INFO:Initializing create_model()
2025-09-22 15:59:36,227:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 15:59:36,228:INFO:Checking exceptions
2025-09-22 15:59:36,317:INFO:Importing untrained model
2025-09-22 15:59:36,328:INFO:K-Means Clustering Imported successfully
2025-09-22 15:59:36,338:INFO:Fitting Model
2025-09-22 16:00:09,202:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-22 16:00:09,204:INFO:create_models() successfully completed......................................
2025-09-22 16:00:09,212:INFO:Uploading results into container
2025-09-22 16:00:09,214:INFO:Uploading model into container now
2025-09-22 16:00:09,224:INFO:_master_model_container: 4
2025-09-22 16:00:09,225:INFO:_display_container: 5
2025-09-22 16:00:09,225:INFO:KMeans(n_clusters=3, random_state=123)
2025-09-22 16:00:09,226:INFO:create_model() successfully completed......................................
2025-09-22 16:00:09,406:INFO:Initializing assign_model()
2025-09-22 16:00:09,407:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=3, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 16:00:09,407:INFO:Checking exceptions
2025-09-22 16:00:09,407:INFO:Determining Trained Model
2025-09-22 16:00:09,407:INFO:Trained Model : K-Means Clustering
2025-09-22 16:00:09,407:INFO:Copying data
2025-09-22 16:00:09,432:INFO:(50000, 7)
2025-09-22 16:00:09,432:INFO:assign_model() successfully completed......................................
2025-09-22 16:00:43,902:INFO:Initializing create_model()
2025-09-22 16:00:43,902:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 16:00:43,902:INFO:Checking exceptions
2025-09-22 16:00:44,013:INFO:Importing untrained model
2025-09-22 16:00:44,022:INFO:K-Means Clustering Imported successfully
2025-09-22 16:00:44,039:INFO:Fitting Model
2025-09-22 16:01:15,177:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 16:01:15,177:INFO:create_models() successfully completed......................................
2025-09-22 16:01:15,187:INFO:Uploading results into container
2025-09-22 16:01:15,189:INFO:Uploading model into container now
2025-09-22 16:01:15,202:INFO:_master_model_container: 5
2025-09-22 16:01:15,203:INFO:_display_container: 6
2025-09-22 16:01:15,204:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-22 16:01:15,204:INFO:create_model() successfully completed......................................
2025-09-22 16:01:15,384:INFO:Initializing assign_model()
2025-09-22 16:01:15,384:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 16:01:15,384:INFO:Checking exceptions
2025-09-22 16:01:15,384:INFO:Determining Trained Model
2025-09-22 16:01:15,384:INFO:Trained Model : K-Means Clustering
2025-09-22 16:01:15,385:INFO:Copying data
2025-09-22 16:01:15,411:INFO:(50000, 7)
2025-09-22 16:01:15,411:INFO:assign_model() successfully completed......................................
2025-09-22 16:01:48,395:INFO:Initializing create_model()
2025-09-22 16:01:48,395:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 16:01:48,395:INFO:Checking exceptions
2025-09-22 16:01:48,542:INFO:Importing untrained model
2025-09-22 16:01:48,551:INFO:K-Means Clustering Imported successfully
2025-09-22 16:01:48,557:INFO:Fitting Model
2025-09-22 16:02:19,382:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-22 16:02:19,382:INFO:create_models() successfully completed......................................
2025-09-22 16:02:19,394:INFO:Uploading results into container
2025-09-22 16:02:19,395:INFO:Uploading model into container now
2025-09-22 16:02:19,406:INFO:_master_model_container: 6
2025-09-22 16:02:19,406:INFO:_display_container: 7
2025-09-22 16:02:19,407:INFO:KMeans(n_clusters=5, random_state=123)
2025-09-22 16:02:19,407:INFO:create_model() successfully completed......................................
2025-09-22 16:02:19,589:INFO:Initializing assign_model()
2025-09-22 16:02:19,589:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=5, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 16:02:19,589:INFO:Checking exceptions
2025-09-22 16:02:19,589:INFO:Determining Trained Model
2025-09-22 16:02:19,589:INFO:Trained Model : K-Means Clustering
2025-09-22 16:02:19,589:INFO:Copying data
2025-09-22 16:02:19,617:INFO:(50000, 7)
2025-09-22 16:02:19,617:INFO:assign_model() successfully completed......................................
2025-09-22 16:03:02,573:INFO:Initializing create_model()
2025-09-22 16:03:02,573:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, estimator=kmeans, num_clusters=6, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-22 16:03:02,573:INFO:Checking exceptions
2025-09-22 16:03:02,700:INFO:Importing untrained model
2025-09-22 16:03:02,707:INFO:K-Means Clustering Imported successfully
2025-09-22 16:03:02,722:INFO:Fitting Model
2025-09-22 16:03:34,296:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-22 16:03:34,296:INFO:create_models() successfully completed......................................
2025-09-22 16:03:34,304:INFO:Uploading results into container
2025-09-22 16:03:34,308:INFO:Uploading model into container now
2025-09-22 16:03:34,316:INFO:_master_model_container: 7
2025-09-22 16:03:34,316:INFO:_display_container: 8
2025-09-22 16:03:34,321:INFO:KMeans(n_clusters=6, random_state=123)
2025-09-22 16:03:34,321:INFO:create_model() successfully completed......................................
2025-09-22 16:03:34,518:INFO:Initializing assign_model()
2025-09-22 16:03:34,518:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000021E3C2D0850>, model=KMeans(n_clusters=6, random_state=123), transformation=False, score=True, verbose=False)
2025-09-22 16:03:34,518:INFO:Checking exceptions
2025-09-22 16:03:34,518:INFO:Determining Trained Model
2025-09-22 16:03:34,518:INFO:Trained Model : K-Means Clustering
2025-09-22 16:03:34,518:INFO:Copying data
2025-09-22 16:03:34,547:INFO:(50000, 7)
2025-09-22 16:03:34,547:INFO:assign_model() successfully completed......................................
2025-09-23 10:25:37,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 10:25:37,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 10:25:37,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 10:25:37,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 10:25:41,678:INFO:PyCaret ClusteringExperiment
2025-09-23 10:25:41,678:INFO:Logging name: cluster-default-name
2025-09-23 10:25:41,678:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 10:25:41,678:INFO:version 3.3.2
2025-09-23 10:25:41,678:INFO:Initializing setup()
2025-09-23 10:25:41,678:INFO:self.USI: 08c5
2025-09-23 10:25:41,678:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'data', 'X', 'logging_param', 'exp_name_log', 'seed', 'gpu_param', 'html_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'memory'}
2025-09-23 10:25:41,678:INFO:Checking environment
2025-09-23 10:25:41,678:INFO:python_version: 3.10.18
2025-09-23 10:25:41,678:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 10:25:41,678:INFO:machine: AMD64
2025-09-23 10:25:41,678:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 10:25:41,678:INFO:Memory: svmem(total=16486035456, available=6262644736, percent=62.0, used=10223390720, free=6262644736)
2025-09-23 10:25:41,678:INFO:Physical Core: 8
2025-09-23 10:25:41,678:INFO:Logical Core: 16
2025-09-23 10:25:41,678:INFO:Checking libraries
2025-09-23 10:25:41,678:INFO:System:
2025-09-23 10:25:41,678:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 10:25:41,678:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 10:25:41,678:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 10:25:41,678:INFO:PyCaret required dependencies:
2025-09-23 10:25:43,866:INFO:                 pip: 25.2
2025-09-23 10:25:43,866:INFO:          setuptools: 78.1.1
2025-09-23 10:25:43,866:INFO:             pycaret: 3.3.2
2025-09-23 10:25:43,867:INFO:             IPython: 8.37.0
2025-09-23 10:25:43,867:INFO:          ipywidgets: 8.1.7
2025-09-23 10:25:43,867:INFO:                tqdm: 4.67.1
2025-09-23 10:25:43,867:INFO:               numpy: 1.26.4
2025-09-23 10:25:43,867:INFO:              pandas: 2.1.4
2025-09-23 10:25:43,867:INFO:              jinja2: 3.1.6
2025-09-23 10:25:43,867:INFO:               scipy: 1.11.4
2025-09-23 10:25:43,867:INFO:              joblib: 1.3.2
2025-09-23 10:25:43,867:INFO:             sklearn: 1.4.2
2025-09-23 10:25:43,867:INFO:                pyod: 2.0.5
2025-09-23 10:25:43,867:INFO:            imblearn: 0.14.0
2025-09-23 10:25:43,867:INFO:   category_encoders: 2.7.0
2025-09-23 10:25:43,867:INFO:            lightgbm: 4.6.0
2025-09-23 10:25:43,867:INFO:               numba: 0.61.0
2025-09-23 10:25:43,867:INFO:            requests: 2.32.5
2025-09-23 10:25:43,867:INFO:          matplotlib: 3.7.5
2025-09-23 10:25:43,867:INFO:          scikitplot: 0.3.7
2025-09-23 10:25:43,867:INFO:         yellowbrick: 1.5
2025-09-23 10:25:43,867:INFO:              plotly: 5.24.1
2025-09-23 10:25:43,868:INFO:    plotly-resampler: Not installed
2025-09-23 10:25:43,868:INFO:             kaleido: 1.1.0
2025-09-23 10:25:43,868:INFO:           schemdraw: 0.15
2025-09-23 10:25:43,868:INFO:         statsmodels: 0.14.5
2025-09-23 10:25:43,868:INFO:              sktime: 0.26.0
2025-09-23 10:25:43,868:INFO:               tbats: 1.1.3
2025-09-23 10:25:43,868:INFO:            pmdarima: 2.0.4
2025-09-23 10:25:43,868:INFO:              psutil: 7.1.0
2025-09-23 10:25:43,868:INFO:          markupsafe: 3.0.2
2025-09-23 10:25:43,868:INFO:             pickle5: Not installed
2025-09-23 10:25:43,868:INFO:         cloudpickle: 3.1.1
2025-09-23 10:25:43,868:INFO:         deprecation: 2.1.0
2025-09-23 10:25:43,868:INFO:              xxhash: 3.5.0
2025-09-23 10:25:43,868:INFO:           wurlitzer: Not installed
2025-09-23 10:25:43,868:INFO:PyCaret optional dependencies:
2025-09-23 10:25:52,792:INFO:                shap: 0.44.1
2025-09-23 10:25:52,792:INFO:           interpret: 0.7.2
2025-09-23 10:25:52,792:INFO:                umap: 0.5.7
2025-09-23 10:25:52,792:INFO:     ydata_profiling: 4.16.1
2025-09-23 10:25:52,792:INFO:  explainerdashboard: 0.5.1
2025-09-23 10:25:52,792:INFO:             autoviz: Not installed
2025-09-23 10:25:52,792:INFO:           fairlearn: 0.7.0
2025-09-23 10:25:52,792:INFO:          deepchecks: Not installed
2025-09-23 10:25:52,793:INFO:             xgboost: 3.0.5
2025-09-23 10:25:52,793:INFO:            catboost: 1.2.8
2025-09-23 10:25:52,793:INFO:              kmodes: 0.12.2
2025-09-23 10:25:52,793:INFO:             mlxtend: 0.23.4
2025-09-23 10:25:52,793:INFO:       statsforecast: 1.5.0
2025-09-23 10:25:52,793:INFO:        tune_sklearn: Not installed
2025-09-23 10:25:52,793:INFO:                 ray: Not installed
2025-09-23 10:25:52,793:INFO:            hyperopt: 0.2.7
2025-09-23 10:25:52,793:INFO:              optuna: 4.5.0
2025-09-23 10:25:52,793:INFO:               skopt: 0.10.2
2025-09-23 10:25:52,793:INFO:              mlflow: 3.4.0
2025-09-23 10:25:52,793:INFO:              gradio: 5.46.1
2025-09-23 10:25:52,793:INFO:             fastapi: 0.117.1
2025-09-23 10:25:52,793:INFO:             uvicorn: 0.36.0
2025-09-23 10:25:52,793:INFO:              m2cgen: 0.10.0
2025-09-23 10:25:52,793:INFO:           evidently: 0.4.40
2025-09-23 10:25:52,793:INFO:               fugue: 0.8.7
2025-09-23 10:25:52,793:INFO:           streamlit: Not installed
2025-09-23 10:25:52,793:INFO:             prophet: Not installed
2025-09-23 10:25:52,793:INFO:None
2025-09-23 10:25:52,794:INFO:Set up data.
2025-09-23 10:25:52,808:INFO:Set up index.
2025-09-23 10:25:52,808:INFO:Assigning column types.
2025-09-23 10:25:52,814:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 10:25:52,814:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 10:25:52,814:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 10:25:52,825:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 10:25:52,826:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 10:25:52,826:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 10:25:52,826:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 10:25:52,826:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 10:25:52,828:INFO:Preparing preprocessing pipeline...
2025-09-23 10:25:52,828:INFO:Set up simple imputation.
2025-09-23 10:25:52,834:INFO:Set up encoding of ordinal features.
2025-09-23 10:25:52,837:INFO:Set up encoding of categorical features.
2025-09-23 10:25:52,837:INFO:Set up feature normalization.
2025-09-23 10:25:53,220:INFO:Finished creating preprocessing pipeline.
2025-09-23 10:25:53,258:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 10:25:53,259:INFO:Creating final display dataframe.
2025-09-23 10:25:53,579:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 49)
3           Numeric features                     4
4       Categorical features                    10
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                 Normalize                  True
12          Normalize method                zscore
13                  CPU Jobs                    -1
14                   Use GPU                 False
15            Log Experiment                 False
16           Experiment Name  cluster-default-name
17                       USI                  08c5
2025-09-23 10:25:53,591:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 10:25:53,592:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 10:25:53,593:INFO:setup() successfully completed in 11.94s...............
2025-09-23 10:25:53,593:INFO:Initializing create_model()
2025-09-23 10:25:53,593:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:25:53,593:INFO:Checking exceptions
2025-09-23 10:25:53,735:INFO:Importing untrained model
2025-09-23 10:25:53,742:INFO:K-Means Clustering Imported successfully
2025-09-23 10:25:53,753:INFO:Fitting Model
2025-09-23 10:25:54,137:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:25:54,137:INFO:create_models() successfully completed......................................
2025-09-23 10:25:54,144:INFO:Uploading results into container
2025-09-23 10:25:54,147:INFO:Uploading model into container now
2025-09-23 10:25:54,157:INFO:_master_model_container: 1
2025-09-23 10:25:54,158:INFO:_display_container: 2
2025-09-23 10:25:54,159:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:25:54,159:INFO:create_model() successfully completed......................................
2025-09-23 10:25:54,336:INFO:Initializing assign_model()
2025-09-23 10:25:54,336:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:25:54,336:INFO:Checking exceptions
2025-09-23 10:25:54,336:INFO:Determining Trained Model
2025-09-23 10:25:54,336:INFO:Trained Model : K-Means Clustering
2025-09-23 10:25:54,336:INFO:Copying data
2025-09-23 10:25:54,338:INFO:(1000, 25)
2025-09-23 10:25:54,340:INFO:assign_model() successfully completed......................................
2025-09-23 10:25:54,395:INFO:Initializing save_model()
2025-09-23 10:25:54,395:INFO:save_model(model=KMeans(n_clusters=4, random_state=123), model_name=modelo_hoteles_kmeans, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-09-23 10:25:54,395:INFO:Adding model into prep_pipe
2025-09-23 10:25:54,416:INFO:modelo_hoteles_kmeans.pkl saved in current working directory
2025-09-23 10:25:54,447:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada', 'Canal_reserva',
                                             'OcupaciÃ³n', 'ReseÃ±a',
                                             'Re...
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=123))])
2025-09-23 10:25:54,447:INFO:save_model() successfully completed......................................
2025-09-23 10:28:47,774:INFO:Initializing create_model()
2025-09-23 10:28:47,774:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:28:47,774:INFO:Checking exceptions
2025-09-23 10:28:47,882:INFO:Importing untrained model
2025-09-23 10:28:47,891:INFO:K-Means Clustering Imported successfully
2025-09-23 10:28:47,905:INFO:Fitting Model
2025-09-23 10:28:48,126:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:28:48,126:INFO:create_models() successfully completed......................................
2025-09-23 10:28:48,133:INFO:Uploading results into container
2025-09-23 10:28:48,135:INFO:Uploading model into container now
2025-09-23 10:28:48,146:INFO:_master_model_container: 2
2025-09-23 10:28:48,146:INFO:_display_container: 3
2025-09-23 10:28:48,146:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:28:48,146:INFO:create_model() successfully completed......................................
2025-09-23 10:28:48,326:INFO:Initializing assign_model()
2025-09-23 10:28:48,326:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:28:48,326:INFO:Checking exceptions
2025-09-23 10:28:48,326:INFO:Determining Trained Model
2025-09-23 10:28:48,326:INFO:Trained Model : K-Means Clustering
2025-09-23 10:28:48,326:INFO:Copying data
2025-09-23 10:28:48,326:INFO:(1000, 25)
2025-09-23 10:28:48,326:INFO:assign_model() successfully completed......................................
2025-09-23 10:28:48,326:INFO:Initializing create_model()
2025-09-23 10:28:48,326:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=gmm, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:28:48,326:INFO:Checking exceptions
2025-09-23 10:28:48,326:INFO:Initializing create_model()
2025-09-23 10:28:48,326:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:28:48,326:INFO:Checking exceptions
2025-09-23 10:28:48,407:INFO:Importing untrained model
2025-09-23 10:28:48,412:INFO:Agglomerative Clustering Imported successfully
2025-09-23 10:28:48,425:INFO:Fitting Model
2025-09-23 10:28:48,658:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:28:48,658:INFO:create_models() successfully completed......................................
2025-09-23 10:28:48,664:INFO:Uploading results into container
2025-09-23 10:28:48,667:INFO:Uploading model into container now
2025-09-23 10:28:48,677:INFO:_master_model_container: 3
2025-09-23 10:28:48,677:INFO:_display_container: 4
2025-09-23 10:28:48,678:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:28:48,678:INFO:create_model() successfully completed......................................
2025-09-23 10:28:48,864:INFO:Initializing assign_model()
2025-09-23 10:28:48,864:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=True)
2025-09-23 10:28:48,864:INFO:Checking exceptions
2025-09-23 10:28:48,864:INFO:Determining Trained Model
2025-09-23 10:28:48,864:INFO:Trained Model : Agglomerative Clustering
2025-09-23 10:28:48,864:INFO:Copying data
2025-09-23 10:28:48,868:INFO:(1000, 25)
2025-09-23 10:28:48,868:INFO:assign_model() successfully completed......................................
2025-09-23 10:28:48,872:INFO:Initializing create_model()
2025-09-23 10:28:48,872:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:28:48,872:INFO:Checking exceptions
2025-09-23 10:28:48,994:INFO:Importing untrained model
2025-09-23 10:28:49,001:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-23 10:28:49,013:INFO:Fitting Model
2025-09-23 10:28:49,207:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:28:49,214:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:28:49,216:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:28:49,217:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:28:49,217:INFO:create_models() successfully completed......................................
2025-09-23 10:28:49,226:INFO:Uploading results into container
2025-09-23 10:28:49,227:INFO:Uploading model into container now
2025-09-23 10:28:49,234:INFO:_master_model_container: 4
2025-09-23 10:28:49,236:INFO:_display_container: 5
2025-09-23 10:28:49,236:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:28:49,237:INFO:create_model() successfully completed......................................
2025-09-23 10:28:49,418:INFO:Initializing assign_model()
2025-09-23 10:28:49,419:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:28:49,419:INFO:Checking exceptions
2025-09-23 10:28:49,419:INFO:Determining Trained Model
2025-09-23 10:28:49,419:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-23 10:28:49,420:INFO:Copying data
2025-09-23 10:28:49,424:INFO:(1000, 25)
2025-09-23 10:28:49,424:INFO:assign_model() successfully completed......................................
2025-09-23 10:28:49,425:INFO:Initializing create_model()
2025-09-23 10:28:49,425:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:28:49,425:INFO:Checking exceptions
2025-09-23 10:28:49,518:INFO:Importing untrained model
2025-09-23 10:28:49,523:INFO:Mean Shift Clustering Imported successfully
2025-09-23 10:28:49,535:INFO:Fitting Model
2025-09-23 10:28:54,936:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:28:54,942:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:28:54,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:28:54,945:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:28:54,945:INFO:create_models() successfully completed......................................
2025-09-23 10:28:54,953:INFO:Uploading results into container
2025-09-23 10:28:54,955:INFO:Uploading model into container now
2025-09-23 10:28:54,965:INFO:_master_model_container: 5
2025-09-23 10:28:54,965:INFO:_display_container: 6
2025-09-23 10:28:54,966:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:28:54,966:INFO:create_model() successfully completed......................................
2025-09-23 10:28:55,147:INFO:Initializing assign_model()
2025-09-23 10:28:55,147:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:28:55,147:INFO:Checking exceptions
2025-09-23 10:28:55,147:INFO:Determining Trained Model
2025-09-23 10:28:55,147:INFO:Trained Model : Mean Shift Clustering
2025-09-23 10:28:55,147:INFO:Copying data
2025-09-23 10:28:55,149:INFO:(1000, 25)
2025-09-23 10:28:55,150:INFO:assign_model() successfully completed......................................
2025-09-23 10:40:53,224:INFO:Initializing create_model()
2025-09-23 10:40:53,224:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:40:53,224:INFO:Checking exceptions
2025-09-23 10:40:53,333:INFO:Importing untrained model
2025-09-23 10:40:53,343:INFO:K-Means Clustering Imported successfully
2025-09-23 10:40:53,365:INFO:Fitting Model
2025-09-23 10:40:53,574:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:40:53,574:INFO:create_models() successfully completed......................................
2025-09-23 10:40:53,581:INFO:Uploading results into container
2025-09-23 10:40:53,582:INFO:Uploading model into container now
2025-09-23 10:40:53,592:INFO:_master_model_container: 6
2025-09-23 10:40:53,593:INFO:_display_container: 7
2025-09-23 10:40:53,593:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:40:53,594:INFO:create_model() successfully completed......................................
2025-09-23 10:40:53,779:INFO:Initializing assign_model()
2025-09-23 10:40:53,780:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:40:53,780:INFO:Checking exceptions
2025-09-23 10:40:53,781:INFO:Determining Trained Model
2025-09-23 10:40:53,781:INFO:Trained Model : K-Means Clustering
2025-09-23 10:40:53,781:INFO:Copying data
2025-09-23 10:40:53,783:INFO:(1000, 25)
2025-09-23 10:40:53,783:INFO:assign_model() successfully completed......................................
2025-09-23 10:40:53,810:INFO:Initializing create_model()
2025-09-23 10:40:53,810:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=gmm, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:40:53,810:INFO:Checking exceptions
2025-09-23 10:40:53,810:INFO:Initializing create_model()
2025-09-23 10:40:53,810:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:40:53,810:INFO:Checking exceptions
2025-09-23 10:40:53,885:INFO:Importing untrained model
2025-09-23 10:40:53,892:INFO:Agglomerative Clustering Imported successfully
2025-09-23 10:40:53,902:INFO:Fitting Model
2025-09-23 10:40:54,115:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:40:54,115:INFO:create_models() successfully completed......................................
2025-09-23 10:40:54,123:INFO:Uploading results into container
2025-09-23 10:40:54,123:INFO:Uploading model into container now
2025-09-23 10:40:54,133:INFO:_master_model_container: 7
2025-09-23 10:40:54,133:INFO:_display_container: 8
2025-09-23 10:40:54,134:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:40:54,134:INFO:create_model() successfully completed......................................
2025-09-23 10:40:54,327:INFO:Initializing assign_model()
2025-09-23 10:40:54,327:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=True)
2025-09-23 10:40:54,327:INFO:Checking exceptions
2025-09-23 10:40:54,327:INFO:Determining Trained Model
2025-09-23 10:40:54,327:INFO:Trained Model : Agglomerative Clustering
2025-09-23 10:40:54,327:INFO:Copying data
2025-09-23 10:40:54,330:INFO:(1000, 25)
2025-09-23 10:40:54,331:INFO:assign_model() successfully completed......................................
2025-09-23 10:40:54,360:INFO:Initializing create_model()
2025-09-23 10:40:54,360:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:40:54,360:INFO:Checking exceptions
2025-09-23 10:40:54,451:INFO:Importing untrained model
2025-09-23 10:40:54,457:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-23 10:40:54,469:INFO:Fitting Model
2025-09-23 10:40:54,688:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:40:54,690:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:40:54,693:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:40:54,694:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:40:54,694:INFO:create_models() successfully completed......................................
2025-09-23 10:40:54,703:INFO:Uploading results into container
2025-09-23 10:40:54,704:INFO:Uploading model into container now
2025-09-23 10:40:54,716:INFO:_master_model_container: 8
2025-09-23 10:40:54,716:INFO:_display_container: 9
2025-09-23 10:40:54,716:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:40:54,717:INFO:create_model() successfully completed......................................
2025-09-23 10:40:54,913:INFO:Initializing assign_model()
2025-09-23 10:40:54,914:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:40:54,914:INFO:Checking exceptions
2025-09-23 10:40:54,914:INFO:Determining Trained Model
2025-09-23 10:40:54,914:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-23 10:40:54,914:INFO:Copying data
2025-09-23 10:40:54,917:INFO:(1000, 25)
2025-09-23 10:40:54,917:INFO:assign_model() successfully completed......................................
2025-09-23 10:40:54,918:INFO:Initializing create_model()
2025-09-23 10:40:54,918:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:40:54,918:INFO:Checking exceptions
2025-09-23 10:40:55,006:INFO:Importing untrained model
2025-09-23 10:40:55,012:INFO:Mean Shift Clustering Imported successfully
2025-09-23 10:40:55,024:INFO:Fitting Model
2025-09-23 10:41:00,105:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:41:00,108:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:41:00,112:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:41:00,113:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:41:00,113:INFO:create_models() successfully completed......................................
2025-09-23 10:41:00,123:INFO:Uploading results into container
2025-09-23 10:41:00,124:INFO:Uploading model into container now
2025-09-23 10:41:00,135:INFO:_master_model_container: 9
2025-09-23 10:41:00,136:INFO:_display_container: 10
2025-09-23 10:41:00,138:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:41:00,138:INFO:create_model() successfully completed......................................
2025-09-23 10:41:00,320:INFO:Initializing assign_model()
2025-09-23 10:41:00,320:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:41:00,320:INFO:Checking exceptions
2025-09-23 10:41:00,320:INFO:Determining Trained Model
2025-09-23 10:41:00,320:INFO:Trained Model : Mean Shift Clustering
2025-09-23 10:41:00,320:INFO:Copying data
2025-09-23 10:41:00,323:INFO:(1000, 25)
2025-09-23 10:41:00,323:INFO:assign_model() successfully completed......................................
2025-09-23 10:43:07,195:INFO:Initializing create_model()
2025-09-23 10:43:07,195:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:43:07,196:INFO:Checking exceptions
2025-09-23 10:43:07,364:INFO:Importing untrained model
2025-09-23 10:43:07,369:INFO:K-Means Clustering Imported successfully
2025-09-23 10:43:07,386:INFO:Fitting Model
2025-09-23 10:43:07,588:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:43:07,588:INFO:create_models() successfully completed......................................
2025-09-23 10:43:07,594:INFO:Uploading results into container
2025-09-23 10:43:07,596:INFO:Uploading model into container now
2025-09-23 10:43:07,608:INFO:_master_model_container: 10
2025-09-23 10:43:07,608:INFO:_display_container: 11
2025-09-23 10:43:07,608:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:43:07,608:INFO:create_model() successfully completed......................................
2025-09-23 10:43:07,794:INFO:Initializing assign_model()
2025-09-23 10:43:07,794:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:43:07,794:INFO:Checking exceptions
2025-09-23 10:43:07,794:INFO:Determining Trained Model
2025-09-23 10:43:07,794:INFO:Trained Model : K-Means Clustering
2025-09-23 10:43:07,794:INFO:Copying data
2025-09-23 10:43:07,798:INFO:(1000, 25)
2025-09-23 10:43:07,798:INFO:assign_model() successfully completed......................................
2025-09-23 10:43:07,834:INFO:Initializing save_model()
2025-09-23 10:43:07,834:INFO:save_model(model=KMeans(n_clusters=4, random_state=123), model_name=modelo_hoteles_kmeans_best, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-09-23 10:43:07,834:INFO:Adding model into prep_pipe
2025-09-23 10:43:07,853:INFO:modelo_hoteles_kmeans_best.pkl saved in current working directory
2025-09-23 10:43:07,881:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada', 'Canal_reserva',
                                             'OcupaciÃ³n', 'ReseÃ±a',
                                             'Re...
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=123))])
2025-09-23 10:43:07,881:INFO:save_model() successfully completed......................................
2025-09-23 10:47:19,119:INFO:Initializing create_model()
2025-09-23 10:47:19,121:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:47:19,121:INFO:Checking exceptions
2025-09-23 10:47:19,236:INFO:Importing untrained model
2025-09-23 10:47:19,242:INFO:K-Means Clustering Imported successfully
2025-09-23 10:47:19,256:INFO:Fitting Model
2025-09-23 10:47:19,460:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:47:19,461:INFO:create_models() successfully completed......................................
2025-09-23 10:47:19,470:INFO:Uploading results into container
2025-09-23 10:47:19,471:INFO:Uploading model into container now
2025-09-23 10:47:19,481:INFO:_master_model_container: 11
2025-09-23 10:47:19,481:INFO:_display_container: 12
2025-09-23 10:47:19,482:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:47:19,482:INFO:create_model() successfully completed......................................
2025-09-23 10:47:19,694:INFO:Initializing assign_model()
2025-09-23 10:47:19,694:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:47:19,694:INFO:Checking exceptions
2025-09-23 10:47:19,694:INFO:Determining Trained Model
2025-09-23 10:47:19,694:INFO:Trained Model : K-Means Clustering
2025-09-23 10:47:19,694:INFO:Copying data
2025-09-23 10:47:19,697:INFO:(1000, 25)
2025-09-23 10:47:19,697:INFO:assign_model() successfully completed......................................
2025-09-23 10:47:19,732:INFO:Initializing save_model()
2025-09-23 10:47:19,732:INFO:save_model(model=KMeans(n_clusters=4, random_state=123), model_name=modelo_hoteles_kmeans_best, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-09-23 10:47:19,732:INFO:Adding model into prep_pipe
2025-09-23 10:47:19,753:INFO:modelo_hoteles_kmeans_best.pkl saved in current working directory
2025-09-23 10:47:19,785:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada', 'Canal_reserva',
                                             'OcupaciÃ³n', 'ReseÃ±a',
                                             'Re...
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=123))])
2025-09-23 10:47:19,785:INFO:save_model() successfully completed......................................
2025-09-23 10:48:05,497:INFO:Initializing create_model()
2025-09-23 10:48:05,498:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:48:05,498:INFO:Checking exceptions
2025-09-23 10:48:05,612:INFO:Importing untrained model
2025-09-23 10:48:05,622:INFO:K-Means Clustering Imported successfully
2025-09-23 10:48:05,637:INFO:Fitting Model
2025-09-23 10:48:05,847:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:48:05,848:INFO:create_models() successfully completed......................................
2025-09-23 10:48:05,853:INFO:Uploading results into container
2025-09-23 10:48:05,855:INFO:Uploading model into container now
2025-09-23 10:48:05,864:INFO:_master_model_container: 12
2025-09-23 10:48:05,865:INFO:_display_container: 13
2025-09-23 10:48:05,865:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:48:05,866:INFO:create_model() successfully completed......................................
2025-09-23 10:48:06,056:INFO:Initializing assign_model()
2025-09-23 10:48:06,056:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:48:06,056:INFO:Checking exceptions
2025-09-23 10:48:06,056:INFO:Determining Trained Model
2025-09-23 10:48:06,056:INFO:Trained Model : K-Means Clustering
2025-09-23 10:48:06,057:INFO:Copying data
2025-09-23 10:48:06,059:INFO:(1000, 25)
2025-09-23 10:48:06,059:INFO:assign_model() successfully completed......................................
2025-09-23 10:48:06,099:INFO:Initializing create_model()
2025-09-23 10:48:06,100:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=gmm, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:48:06,100:INFO:Checking exceptions
2025-09-23 10:48:06,100:INFO:Initializing create_model()
2025-09-23 10:48:06,101:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:48:06,101:INFO:Checking exceptions
2025-09-23 10:48:06,189:INFO:Importing untrained model
2025-09-23 10:48:06,201:INFO:Agglomerative Clustering Imported successfully
2025-09-23 10:48:06,212:INFO:Fitting Model
2025-09-23 10:48:06,428:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:48:06,428:INFO:create_models() successfully completed......................................
2025-09-23 10:48:06,436:INFO:Uploading results into container
2025-09-23 10:48:06,437:INFO:Uploading model into container now
2025-09-23 10:48:06,446:INFO:_master_model_container: 13
2025-09-23 10:48:06,446:INFO:_display_container: 14
2025-09-23 10:48:06,448:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:48:06,448:INFO:create_model() successfully completed......................................
2025-09-23 10:48:06,640:INFO:Initializing assign_model()
2025-09-23 10:48:06,640:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=True)
2025-09-23 10:48:06,640:INFO:Checking exceptions
2025-09-23 10:48:06,640:INFO:Determining Trained Model
2025-09-23 10:48:06,640:INFO:Trained Model : Agglomerative Clustering
2025-09-23 10:48:06,641:INFO:Copying data
2025-09-23 10:48:06,643:INFO:(1000, 25)
2025-09-23 10:48:06,643:INFO:assign_model() successfully completed......................................
2025-09-23 10:48:06,669:INFO:Initializing create_model()
2025-09-23 10:48:06,670:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:48:06,670:INFO:Checking exceptions
2025-09-23 10:48:06,768:INFO:Importing untrained model
2025-09-23 10:48:06,775:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-23 10:48:06,789:INFO:Fitting Model
2025-09-23 10:48:06,985:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:48:06,988:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:48:06,990:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:48:06,991:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:48:06,991:INFO:create_models() successfully completed......................................
2025-09-23 10:48:07,000:INFO:Uploading results into container
2025-09-23 10:48:07,000:INFO:Uploading model into container now
2025-09-23 10:48:07,011:INFO:_master_model_container: 14
2025-09-23 10:48:07,011:INFO:_display_container: 15
2025-09-23 10:48:07,012:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:48:07,013:INFO:create_model() successfully completed......................................
2025-09-23 10:48:07,213:INFO:Initializing assign_model()
2025-09-23 10:48:07,213:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:48:07,213:INFO:Checking exceptions
2025-09-23 10:48:07,213:INFO:Determining Trained Model
2025-09-23 10:48:07,214:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-23 10:48:07,214:INFO:Copying data
2025-09-23 10:48:07,216:INFO:(1000, 25)
2025-09-23 10:48:07,216:INFO:assign_model() successfully completed......................................
2025-09-23 10:48:07,218:INFO:Initializing create_model()
2025-09-23 10:48:07,218:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:48:07,218:INFO:Checking exceptions
2025-09-23 10:48:07,312:INFO:Importing untrained model
2025-09-23 10:48:07,323:INFO:Mean Shift Clustering Imported successfully
2025-09-23 10:48:07,333:INFO:Fitting Model
2025-09-23 10:48:12,404:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:48:12,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:48:12,412:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:48:12,413:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:48:12,413:INFO:create_models() successfully completed......................................
2025-09-23 10:48:12,421:INFO:Uploading results into container
2025-09-23 10:48:12,422:INFO:Uploading model into container now
2025-09-23 10:48:12,433:INFO:_master_model_container: 15
2025-09-23 10:48:12,434:INFO:_display_container: 16
2025-09-23 10:48:12,434:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:48:12,435:INFO:create_model() successfully completed......................................
2025-09-23 10:48:12,615:INFO:Initializing assign_model()
2025-09-23 10:48:12,616:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:48:12,616:INFO:Checking exceptions
2025-09-23 10:48:12,616:INFO:Determining Trained Model
2025-09-23 10:48:12,616:INFO:Trained Model : Mean Shift Clustering
2025-09-23 10:48:12,616:INFO:Copying data
2025-09-23 10:48:12,619:INFO:(1000, 25)
2025-09-23 10:48:12,619:INFO:assign_model() successfully completed......................................
2025-09-23 10:52:46,152:INFO:Initializing create_model()
2025-09-23 10:52:46,153:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:52:46,153:INFO:Checking exceptions
2025-09-23 10:52:46,265:INFO:Importing untrained model
2025-09-23 10:52:46,271:INFO:K-Means Clustering Imported successfully
2025-09-23 10:52:46,286:INFO:Fitting Model
2025-09-23 10:52:46,558:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:52:46,558:INFO:create_models() successfully completed......................................
2025-09-23 10:52:46,567:INFO:Uploading results into container
2025-09-23 10:52:46,568:INFO:Uploading model into container now
2025-09-23 10:52:46,580:INFO:_master_model_container: 16
2025-09-23 10:52:46,581:INFO:_display_container: 17
2025-09-23 10:52:46,588:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 10:52:46,588:INFO:create_model() successfully completed......................................
2025-09-23 10:52:46,786:INFO:Initializing assign_model()
2025-09-23 10:52:46,786:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 10:52:46,786:INFO:Checking exceptions
2025-09-23 10:52:46,786:INFO:Determining Trained Model
2025-09-23 10:52:46,786:INFO:Trained Model : K-Means Clustering
2025-09-23 10:52:46,786:INFO:Copying data
2025-09-23 10:52:46,788:INFO:(1000, 25)
2025-09-23 10:52:46,789:INFO:assign_model() successfully completed......................................
2025-09-23 10:52:46,810:INFO:Initializing create_model()
2025-09-23 10:52:46,810:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=gmm, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:52:46,811:INFO:Checking exceptions
2025-09-23 10:52:46,811:INFO:Initializing create_model()
2025-09-23 10:52:46,811:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=hclust, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:52:46,811:INFO:Checking exceptions
2025-09-23 10:52:46,892:INFO:Importing untrained model
2025-09-23 10:52:46,903:INFO:Agglomerative Clustering Imported successfully
2025-09-23 10:52:46,916:INFO:Fitting Model
2025-09-23 10:52:47,141:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:52:47,141:INFO:create_models() successfully completed......................................
2025-09-23 10:52:47,146:INFO:Uploading results into container
2025-09-23 10:52:47,147:INFO:Uploading model into container now
2025-09-23 10:52:47,157:INFO:_master_model_container: 17
2025-09-23 10:52:47,157:INFO:_display_container: 18
2025-09-23 10:52:47,158:INFO:AgglomerativeClustering(n_clusters=4)
2025-09-23 10:52:47,158:INFO:create_model() successfully completed......................................
2025-09-23 10:52:47,341:INFO:Initializing assign_model()
2025-09-23 10:52:47,341:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=AgglomerativeClustering(n_clusters=4), transformation=False, score=True, verbose=True)
2025-09-23 10:52:47,341:INFO:Checking exceptions
2025-09-23 10:52:47,341:INFO:Determining Trained Model
2025-09-23 10:52:47,341:INFO:Trained Model : Agglomerative Clustering
2025-09-23 10:52:47,341:INFO:Copying data
2025-09-23 10:52:47,344:INFO:(1000, 25)
2025-09-23 10:52:47,344:INFO:assign_model() successfully completed......................................
2025-09-23 10:52:47,370:INFO:Initializing create_model()
2025-09-23 10:52:47,370:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=dbscan, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:52:47,370:INFO:Checking exceptions
2025-09-23 10:52:47,471:INFO:Importing untrained model
2025-09-23 10:52:47,478:INFO:Density-Based Spatial Clustering Imported successfully
2025-09-23 10:52:47,491:INFO:Fitting Model
2025-09-23 10:52:47,721:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:52:47,724:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:52:47,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:52:47,727:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:52:47,727:INFO:create_models() successfully completed......................................
2025-09-23 10:52:47,734:INFO:Uploading results into container
2025-09-23 10:52:47,735:INFO:Uploading model into container now
2025-09-23 10:52:47,746:INFO:_master_model_container: 18
2025-09-23 10:52:47,747:INFO:_display_container: 19
2025-09-23 10:52:47,747:INFO:DBSCAN(n_jobs=-1)
2025-09-23 10:52:47,748:INFO:create_model() successfully completed......................................
2025-09-23 10:52:47,941:INFO:Initializing assign_model()
2025-09-23 10:52:47,941:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=DBSCAN(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:52:47,941:INFO:Checking exceptions
2025-09-23 10:52:47,941:INFO:Determining Trained Model
2025-09-23 10:52:47,941:INFO:Trained Model : Density-Based Spatial Clustering
2025-09-23 10:52:47,941:INFO:Copying data
2025-09-23 10:52:47,944:INFO:(1000, 25)
2025-09-23 10:52:47,944:INFO:assign_model() successfully completed......................................
2025-09-23 10:52:47,946:INFO:Initializing create_model()
2025-09-23 10:52:47,946:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, estimator=meanshift, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 10:52:47,947:INFO:Checking exceptions
2025-09-23 10:52:48,028:INFO:Importing untrained model
2025-09-23 10:52:48,036:INFO:Mean Shift Clustering Imported successfully
2025-09-23 10:52:48,047:INFO:Fitting Model
2025-09-23 10:52:49,384:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 140, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 186, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 297, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:52:49,387:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 373, in calinski_harabasz_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:52:49,391:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py:528: UserWarning: Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\utils\generic.py", line 526, in _calculate_unsupervised_metric
    calculated_metric = score_func(target, labels, **container.args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 446, in davies_bouldin_score
    check_number_of_labels(n_labels, n_samples)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\cluster\_unsupervised.py", line 37, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)


2025-09-23 10:52:49,391:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:52:49,391:INFO:create_models() successfully completed......................................
2025-09-23 10:52:49,398:INFO:Uploading results into container
2025-09-23 10:52:49,400:INFO:Uploading model into container now
2025-09-23 10:52:49,410:INFO:_master_model_container: 19
2025-09-23 10:52:49,410:INFO:_display_container: 20
2025-09-23 10:52:49,411:INFO:MeanShift(n_jobs=-1)
2025-09-23 10:52:49,412:INFO:create_model() successfully completed......................................
2025-09-23 10:52:49,597:INFO:Initializing assign_model()
2025-09-23 10:52:49,597:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235EDA80130>, model=MeanShift(n_jobs=-1), transformation=False, score=True, verbose=True)
2025-09-23 10:52:49,597:INFO:Checking exceptions
2025-09-23 10:52:49,597:INFO:Determining Trained Model
2025-09-23 10:52:49,597:INFO:Trained Model : Mean Shift Clustering
2025-09-23 10:52:49,597:INFO:Copying data
2025-09-23 10:52:49,600:INFO:(1000, 25)
2025-09-23 10:52:49,600:INFO:assign_model() successfully completed......................................
2025-09-23 12:09:31,474:INFO:PyCaret ClusteringExperiment
2025-09-23 12:09:31,474:INFO:Logging name: cluster-default-name
2025-09-23 12:09:31,474:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 12:09:31,474:INFO:version 3.3.2
2025-09-23 12:09:31,474:INFO:Initializing setup()
2025-09-23 12:09:31,475:INFO:self.USI: 6d9b
2025-09-23 12:09:31,475:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'data', 'X', 'logging_param', 'exp_name_log', 'seed', 'gpu_param', 'html_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'memory'}
2025-09-23 12:09:31,475:INFO:Checking environment
2025-09-23 12:09:31,475:INFO:python_version: 3.10.18
2025-09-23 12:09:31,475:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 12:09:31,475:INFO:machine: AMD64
2025-09-23 12:09:31,476:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 12:09:31,476:INFO:Memory: svmem(total=16486035456, available=6281867264, percent=61.9, used=10204168192, free=6281867264)
2025-09-23 12:09:31,476:INFO:Physical Core: 8
2025-09-23 12:09:31,476:INFO:Logical Core: 16
2025-09-23 12:09:31,476:INFO:Checking libraries
2025-09-23 12:09:31,476:INFO:System:
2025-09-23 12:09:31,476:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 12:09:31,476:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 12:09:31,477:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 12:09:31,477:INFO:PyCaret required dependencies:
2025-09-23 12:09:31,477:INFO:                 pip: 25.2
2025-09-23 12:09:31,477:INFO:          setuptools: 78.1.1
2025-09-23 12:09:31,477:INFO:             pycaret: 3.3.2
2025-09-23 12:09:31,477:INFO:             IPython: 8.37.0
2025-09-23 12:09:31,477:INFO:          ipywidgets: 8.1.7
2025-09-23 12:09:31,477:INFO:                tqdm: 4.67.1
2025-09-23 12:09:31,477:INFO:               numpy: 1.26.4
2025-09-23 12:09:31,477:INFO:              pandas: 2.1.4
2025-09-23 12:09:31,477:INFO:              jinja2: 3.1.6
2025-09-23 12:09:31,478:INFO:               scipy: 1.11.4
2025-09-23 12:09:31,478:INFO:              joblib: 1.3.2
2025-09-23 12:09:31,478:INFO:             sklearn: 1.4.2
2025-09-23 12:09:31,478:INFO:                pyod: 2.0.5
2025-09-23 12:09:31,478:INFO:            imblearn: 0.14.0
2025-09-23 12:09:31,478:INFO:   category_encoders: 2.7.0
2025-09-23 12:09:31,478:INFO:            lightgbm: 4.6.0
2025-09-23 12:09:31,478:INFO:               numba: 0.61.0
2025-09-23 12:09:31,478:INFO:            requests: 2.32.5
2025-09-23 12:09:31,478:INFO:          matplotlib: 3.7.5
2025-09-23 12:09:31,478:INFO:          scikitplot: 0.3.7
2025-09-23 12:09:31,478:INFO:         yellowbrick: 1.5
2025-09-23 12:09:31,478:INFO:              plotly: 5.24.1
2025-09-23 12:09:31,479:INFO:    plotly-resampler: Not installed
2025-09-23 12:09:31,479:INFO:             kaleido: 1.1.0
2025-09-23 12:09:31,479:INFO:           schemdraw: 0.15
2025-09-23 12:09:31,479:INFO:         statsmodels: 0.14.5
2025-09-23 12:09:31,479:INFO:              sktime: 0.26.0
2025-09-23 12:09:31,479:INFO:               tbats: 1.1.3
2025-09-23 12:09:31,479:INFO:            pmdarima: 2.0.4
2025-09-23 12:09:31,479:INFO:              psutil: 7.1.0
2025-09-23 12:09:31,480:INFO:          markupsafe: 3.0.2
2025-09-23 12:09:31,480:INFO:             pickle5: Not installed
2025-09-23 12:09:31,480:INFO:         cloudpickle: 3.1.1
2025-09-23 12:09:31,480:INFO:         deprecation: 2.1.0
2025-09-23 12:09:31,480:INFO:              xxhash: 3.5.0
2025-09-23 12:09:31,480:INFO:           wurlitzer: Not installed
2025-09-23 12:09:31,480:INFO:PyCaret optional dependencies:
2025-09-23 12:09:31,480:INFO:                shap: 0.44.1
2025-09-23 12:09:31,480:INFO:           interpret: 0.7.2
2025-09-23 12:09:31,480:INFO:                umap: 0.5.7
2025-09-23 12:09:31,481:INFO:     ydata_profiling: 4.16.1
2025-09-23 12:09:31,481:INFO:  explainerdashboard: 0.5.1
2025-09-23 12:09:31,481:INFO:             autoviz: Not installed
2025-09-23 12:09:31,481:INFO:           fairlearn: 0.7.0
2025-09-23 12:09:31,481:INFO:          deepchecks: Not installed
2025-09-23 12:09:31,481:INFO:             xgboost: 3.0.5
2025-09-23 12:09:31,481:INFO:            catboost: 1.2.8
2025-09-23 12:09:31,481:INFO:              kmodes: 0.12.2
2025-09-23 12:09:31,481:INFO:             mlxtend: 0.23.4
2025-09-23 12:09:31,481:INFO:       statsforecast: 1.5.0
2025-09-23 12:09:31,481:INFO:        tune_sklearn: Not installed
2025-09-23 12:09:31,481:INFO:                 ray: Not installed
2025-09-23 12:09:31,481:INFO:            hyperopt: 0.2.7
2025-09-23 12:09:31,481:INFO:              optuna: 4.5.0
2025-09-23 12:09:31,481:INFO:               skopt: 0.10.2
2025-09-23 12:09:31,481:INFO:              mlflow: 3.4.0
2025-09-23 12:09:31,481:INFO:              gradio: 5.46.1
2025-09-23 12:09:31,481:INFO:             fastapi: 0.117.1
2025-09-23 12:09:31,483:INFO:             uvicorn: 0.36.0
2025-09-23 12:09:31,483:INFO:              m2cgen: 0.10.0
2025-09-23 12:09:31,483:INFO:           evidently: 0.4.40
2025-09-23 12:09:31,483:INFO:               fugue: 0.8.7
2025-09-23 12:09:31,483:INFO:           streamlit: Not installed
2025-09-23 12:09:31,483:INFO:             prophet: Not installed
2025-09-23 12:09:31,483:INFO:None
2025-09-23 12:09:31,483:INFO:Set up data.
2025-09-23 12:09:31,501:INFO:Set up index.
2025-09-23 12:09:31,501:INFO:Assigning column types.
2025-09-23 12:09:31,509:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 12:09:31,509:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:09:31,510:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:09:31,510:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:09:31,510:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:09:31,510:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 12:09:31,511:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:09:31,511:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:09:31,514:INFO:Preparing preprocessing pipeline...
2025-09-23 12:09:31,514:INFO:Set up simple imputation.
2025-09-23 12:09:31,521:INFO:Set up encoding of ordinal features.
2025-09-23 12:09:31,522:INFO:Set up encoding of categorical features.
2025-09-23 12:09:31,522:INFO:Set up feature normalization.
2025-09-23 12:09:31,807:INFO:Finished creating preprocessing pipeline.
2025-09-23 12:09:31,837:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 12:09:31,837:INFO:Creating final display dataframe.
2025-09-23 12:09:32,093:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 49)
3           Numeric features                     4
4       Categorical features                    10
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                 Normalize                  True
12          Normalize method                zscore
13                  CPU Jobs                    -1
14                   Use GPU                 False
15            Log Experiment                 False
16           Experiment Name  cluster-default-name
17                       USI                  6d9b
2025-09-23 12:09:32,103:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:09:32,103:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:09:32,103:INFO:setup() successfully completed in 0.64s...............
2025-09-23 12:09:32,104:INFO:Initializing create_model()
2025-09-23 12:09:32,104:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235A5F6E770>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 12:09:32,104:INFO:Checking exceptions
2025-09-23 12:09:32,223:INFO:Importing untrained model
2025-09-23 12:09:32,227:INFO:K-Means Clustering Imported successfully
2025-09-23 12:09:32,242:INFO:Fitting Model
2025-09-23 12:09:32,454:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:09:32,454:INFO:create_models() successfully completed......................................
2025-09-23 12:09:32,460:INFO:Uploading results into container
2025-09-23 12:09:32,462:INFO:Uploading model into container now
2025-09-23 12:09:32,472:INFO:_master_model_container: 1
2025-09-23 12:09:32,472:INFO:_display_container: 2
2025-09-23 12:09:32,472:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:09:32,472:INFO:create_model() successfully completed......................................
2025-09-23 12:09:32,697:INFO:Initializing assign_model()
2025-09-23 12:09:32,697:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235A5F6E770>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 12:09:32,697:INFO:Checking exceptions
2025-09-23 12:09:32,697:INFO:Determining Trained Model
2025-09-23 12:09:32,697:INFO:Trained Model : K-Means Clustering
2025-09-23 12:09:32,697:INFO:Copying data
2025-09-23 12:09:32,697:INFO:(1000, 25)
2025-09-23 12:09:32,697:INFO:assign_model() successfully completed......................................
2025-09-23 12:15:04,566:INFO:PyCaret ClusteringExperiment
2025-09-23 12:15:04,566:INFO:Logging name: cluster-default-name
2025-09-23 12:15:04,566:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 12:15:04,566:INFO:version 3.3.2
2025-09-23 12:15:04,566:INFO:Initializing setup()
2025-09-23 12:15:04,566:INFO:self.USI: 3093
2025-09-23 12:15:04,566:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'data', 'X', 'logging_param', 'exp_name_log', 'seed', 'gpu_param', 'html_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'memory'}
2025-09-23 12:15:04,566:INFO:Checking environment
2025-09-23 12:15:04,566:INFO:python_version: 3.10.18
2025-09-23 12:15:04,566:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 12:15:04,566:INFO:machine: AMD64
2025-09-23 12:15:04,566:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 12:15:04,566:INFO:Memory: svmem(total=16486035456, available=6630580224, percent=59.8, used=9855455232, free=6630580224)
2025-09-23 12:15:04,566:INFO:Physical Core: 8
2025-09-23 12:15:04,566:INFO:Logical Core: 16
2025-09-23 12:15:04,566:INFO:Checking libraries
2025-09-23 12:15:04,566:INFO:System:
2025-09-23 12:15:04,566:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 12:15:04,566:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 12:15:04,566:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 12:15:04,566:INFO:PyCaret required dependencies:
2025-09-23 12:15:04,566:INFO:                 pip: 25.2
2025-09-23 12:15:04,566:INFO:          setuptools: 78.1.1
2025-09-23 12:15:04,566:INFO:             pycaret: 3.3.2
2025-09-23 12:15:04,566:INFO:             IPython: 8.37.0
2025-09-23 12:15:04,568:INFO:          ipywidgets: 8.1.7
2025-09-23 12:15:04,568:INFO:                tqdm: 4.67.1
2025-09-23 12:15:04,568:INFO:               numpy: 1.26.4
2025-09-23 12:15:04,568:INFO:              pandas: 2.1.4
2025-09-23 12:15:04,568:INFO:              jinja2: 3.1.6
2025-09-23 12:15:04,568:INFO:               scipy: 1.11.4
2025-09-23 12:15:04,568:INFO:              joblib: 1.3.2
2025-09-23 12:15:04,568:INFO:             sklearn: 1.4.2
2025-09-23 12:15:04,568:INFO:                pyod: 2.0.5
2025-09-23 12:15:04,568:INFO:            imblearn: 0.14.0
2025-09-23 12:15:04,568:INFO:   category_encoders: 2.7.0
2025-09-23 12:15:04,568:INFO:            lightgbm: 4.6.0
2025-09-23 12:15:04,568:INFO:               numba: 0.61.0
2025-09-23 12:15:04,568:INFO:            requests: 2.32.5
2025-09-23 12:15:04,568:INFO:          matplotlib: 3.7.5
2025-09-23 12:15:04,568:INFO:          scikitplot: 0.3.7
2025-09-23 12:15:04,569:INFO:         yellowbrick: 1.5
2025-09-23 12:15:04,569:INFO:              plotly: 5.24.1
2025-09-23 12:15:04,569:INFO:    plotly-resampler: Not installed
2025-09-23 12:15:04,569:INFO:             kaleido: 1.1.0
2025-09-23 12:15:04,569:INFO:           schemdraw: 0.15
2025-09-23 12:15:04,569:INFO:         statsmodels: 0.14.5
2025-09-23 12:15:04,569:INFO:              sktime: 0.26.0
2025-09-23 12:15:04,569:INFO:               tbats: 1.1.3
2025-09-23 12:15:04,569:INFO:            pmdarima: 2.0.4
2025-09-23 12:15:04,569:INFO:              psutil: 7.1.0
2025-09-23 12:15:04,569:INFO:          markupsafe: 3.0.2
2025-09-23 12:15:04,570:INFO:             pickle5: Not installed
2025-09-23 12:15:04,570:INFO:         cloudpickle: 3.1.1
2025-09-23 12:15:04,570:INFO:         deprecation: 2.1.0
2025-09-23 12:15:04,570:INFO:              xxhash: 3.5.0
2025-09-23 12:15:04,570:INFO:           wurlitzer: Not installed
2025-09-23 12:15:04,570:INFO:PyCaret optional dependencies:
2025-09-23 12:15:04,570:INFO:                shap: 0.44.1
2025-09-23 12:15:04,570:INFO:           interpret: 0.7.2
2025-09-23 12:15:04,570:INFO:                umap: 0.5.7
2025-09-23 12:15:04,570:INFO:     ydata_profiling: 4.16.1
2025-09-23 12:15:04,570:INFO:  explainerdashboard: 0.5.1
2025-09-23 12:15:04,570:INFO:             autoviz: Not installed
2025-09-23 12:15:04,570:INFO:           fairlearn: 0.7.0
2025-09-23 12:15:04,570:INFO:          deepchecks: Not installed
2025-09-23 12:15:04,570:INFO:             xgboost: 3.0.5
2025-09-23 12:15:04,570:INFO:            catboost: 1.2.8
2025-09-23 12:15:04,570:INFO:              kmodes: 0.12.2
2025-09-23 12:15:04,570:INFO:             mlxtend: 0.23.4
2025-09-23 12:15:04,570:INFO:       statsforecast: 1.5.0
2025-09-23 12:15:04,570:INFO:        tune_sklearn: Not installed
2025-09-23 12:15:04,570:INFO:                 ray: Not installed
2025-09-23 12:15:04,572:INFO:            hyperopt: 0.2.7
2025-09-23 12:15:04,572:INFO:              optuna: 4.5.0
2025-09-23 12:15:04,572:INFO:               skopt: 0.10.2
2025-09-23 12:15:04,572:INFO:              mlflow: 3.4.0
2025-09-23 12:15:04,572:INFO:              gradio: 5.46.1
2025-09-23 12:15:04,572:INFO:             fastapi: 0.117.1
2025-09-23 12:15:04,572:INFO:             uvicorn: 0.36.0
2025-09-23 12:15:04,572:INFO:              m2cgen: 0.10.0
2025-09-23 12:15:04,572:INFO:           evidently: 0.4.40
2025-09-23 12:15:04,572:INFO:               fugue: 0.8.7
2025-09-23 12:15:04,572:INFO:           streamlit: Not installed
2025-09-23 12:15:04,572:INFO:             prophet: Not installed
2025-09-23 12:15:04,572:INFO:None
2025-09-23 12:15:04,572:INFO:Set up data.
2025-09-23 12:15:04,580:INFO:Set up index.
2025-09-23 12:15:04,580:INFO:Assigning column types.
2025-09-23 12:15:04,583:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 12:15:04,583:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:15:04,585:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:15:04,586:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:15:04,587:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:15:04,587:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 12:15:04,587:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:15:04,587:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:15:04,587:INFO:Preparing preprocessing pipeline...
2025-09-23 12:15:04,587:INFO:Set up simple imputation.
2025-09-23 12:15:04,587:INFO:Set up encoding of ordinal features.
2025-09-23 12:15:04,592:INFO:Set up encoding of categorical features.
2025-09-23 12:15:04,592:INFO:Set up feature normalization.
2025-09-23 12:15:04,780:INFO:Finished creating preprocessing pipeline.
2025-09-23 12:15:04,814:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 12:15:04,814:INFO:Creating final display dataframe.
2025-09-23 12:15:04,855:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 49)
3           Numeric features                     4
4       Categorical features                    10
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                 Normalize                  True
12          Normalize method                zscore
13                  CPU Jobs                    -1
14                   Use GPU                 False
15            Log Experiment                 False
16           Experiment Name  cluster-default-name
17                       USI                  3093
2025-09-23 12:15:04,873:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:15:04,873:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:15:04,874:INFO:setup() successfully completed in 0.31s...............
2025-09-23 12:16:27,483:INFO:PyCaret ClusteringExperiment
2025-09-23 12:16:27,483:INFO:Logging name: cluster-default-name
2025-09-23 12:16:27,483:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 12:16:27,483:INFO:version 3.3.2
2025-09-23 12:16:27,484:INFO:Initializing setup()
2025-09-23 12:16:27,484:INFO:self.USI: 8700
2025-09-23 12:16:27,484:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'data', 'X', 'logging_param', 'exp_name_log', 'seed', 'gpu_param', 'html_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'memory'}
2025-09-23 12:16:27,484:INFO:Checking environment
2025-09-23 12:16:27,484:INFO:python_version: 3.10.18
2025-09-23 12:16:27,484:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 12:16:27,484:INFO:machine: AMD64
2025-09-23 12:16:27,484:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 12:16:27,484:INFO:Memory: svmem(total=16486035456, available=6722584576, percent=59.2, used=9763450880, free=6722584576)
2025-09-23 12:16:27,485:INFO:Physical Core: 8
2025-09-23 12:16:27,485:INFO:Logical Core: 16
2025-09-23 12:16:27,485:INFO:Checking libraries
2025-09-23 12:16:27,485:INFO:System:
2025-09-23 12:16:27,485:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 12:16:27,485:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 12:16:27,485:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 12:16:27,485:INFO:PyCaret required dependencies:
2025-09-23 12:16:27,485:INFO:                 pip: 25.2
2025-09-23 12:16:27,486:INFO:          setuptools: 78.1.1
2025-09-23 12:16:27,486:INFO:             pycaret: 3.3.2
2025-09-23 12:16:27,486:INFO:             IPython: 8.37.0
2025-09-23 12:16:27,486:INFO:          ipywidgets: 8.1.7
2025-09-23 12:16:27,486:INFO:                tqdm: 4.67.1
2025-09-23 12:16:27,486:INFO:               numpy: 1.26.4
2025-09-23 12:16:27,487:INFO:              pandas: 2.1.4
2025-09-23 12:16:27,487:INFO:              jinja2: 3.1.6
2025-09-23 12:16:27,487:INFO:               scipy: 1.11.4
2025-09-23 12:16:27,494:INFO:              joblib: 1.3.2
2025-09-23 12:16:27,494:INFO:             sklearn: 1.4.2
2025-09-23 12:16:27,494:INFO:                pyod: 2.0.5
2025-09-23 12:16:27,494:INFO:            imblearn: 0.14.0
2025-09-23 12:16:27,494:INFO:   category_encoders: 2.7.0
2025-09-23 12:16:27,495:INFO:            lightgbm: 4.6.0
2025-09-23 12:16:27,495:INFO:               numba: 0.61.0
2025-09-23 12:16:27,495:INFO:            requests: 2.32.5
2025-09-23 12:16:27,495:INFO:          matplotlib: 3.7.5
2025-09-23 12:16:27,495:INFO:          scikitplot: 0.3.7
2025-09-23 12:16:27,495:INFO:         yellowbrick: 1.5
2025-09-23 12:16:27,495:INFO:              plotly: 5.24.1
2025-09-23 12:16:27,495:INFO:    plotly-resampler: Not installed
2025-09-23 12:16:27,495:INFO:             kaleido: 1.1.0
2025-09-23 12:16:27,495:INFO:           schemdraw: 0.15
2025-09-23 12:16:27,495:INFO:         statsmodels: 0.14.5
2025-09-23 12:16:27,496:INFO:              sktime: 0.26.0
2025-09-23 12:16:27,496:INFO:               tbats: 1.1.3
2025-09-23 12:16:27,496:INFO:            pmdarima: 2.0.4
2025-09-23 12:16:27,496:INFO:              psutil: 7.1.0
2025-09-23 12:16:27,496:INFO:          markupsafe: 3.0.2
2025-09-23 12:16:27,496:INFO:             pickle5: Not installed
2025-09-23 12:16:27,496:INFO:         cloudpickle: 3.1.1
2025-09-23 12:16:27,496:INFO:         deprecation: 2.1.0
2025-09-23 12:16:27,496:INFO:              xxhash: 3.5.0
2025-09-23 12:16:27,496:INFO:           wurlitzer: Not installed
2025-09-23 12:16:27,496:INFO:PyCaret optional dependencies:
2025-09-23 12:16:27,496:INFO:                shap: 0.44.1
2025-09-23 12:16:27,497:INFO:           interpret: 0.7.2
2025-09-23 12:16:27,497:INFO:                umap: 0.5.7
2025-09-23 12:16:27,497:INFO:     ydata_profiling: 4.16.1
2025-09-23 12:16:27,497:INFO:  explainerdashboard: 0.5.1
2025-09-23 12:16:27,497:INFO:             autoviz: Not installed
2025-09-23 12:16:27,497:INFO:           fairlearn: 0.7.0
2025-09-23 12:16:27,497:INFO:          deepchecks: Not installed
2025-09-23 12:16:27,497:INFO:             xgboost: 3.0.5
2025-09-23 12:16:27,497:INFO:            catboost: 1.2.8
2025-09-23 12:16:27,497:INFO:              kmodes: 0.12.2
2025-09-23 12:16:27,497:INFO:             mlxtend: 0.23.4
2025-09-23 12:16:27,497:INFO:       statsforecast: 1.5.0
2025-09-23 12:16:27,497:INFO:        tune_sklearn: Not installed
2025-09-23 12:16:27,497:INFO:                 ray: Not installed
2025-09-23 12:16:27,498:INFO:            hyperopt: 0.2.7
2025-09-23 12:16:27,498:INFO:              optuna: 4.5.0
2025-09-23 12:16:27,498:INFO:               skopt: 0.10.2
2025-09-23 12:16:27,498:INFO:              mlflow: 3.4.0
2025-09-23 12:16:27,498:INFO:              gradio: 5.46.1
2025-09-23 12:16:27,498:INFO:             fastapi: 0.117.1
2025-09-23 12:16:27,498:INFO:             uvicorn: 0.36.0
2025-09-23 12:16:27,498:INFO:              m2cgen: 0.10.0
2025-09-23 12:16:27,498:INFO:           evidently: 0.4.40
2025-09-23 12:16:27,498:INFO:               fugue: 0.8.7
2025-09-23 12:16:27,498:INFO:           streamlit: Not installed
2025-09-23 12:16:27,498:INFO:             prophet: Not installed
2025-09-23 12:16:27,498:INFO:None
2025-09-23 12:16:27,498:INFO:Set up data.
2025-09-23 12:16:27,518:INFO:Set up index.
2025-09-23 12:16:27,518:INFO:Assigning column types.
2025-09-23 12:16:27,526:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 12:16:27,527:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:16:27,527:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:16:27,527:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:16:27,527:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:16:27,527:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 12:16:27,528:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:16:27,528:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:16:27,531:INFO:Preparing preprocessing pipeline...
2025-09-23 12:16:27,531:INFO:Set up simple imputation.
2025-09-23 12:16:27,535:INFO:Set up encoding of ordinal features.
2025-09-23 12:16:27,536:INFO:Set up encoding of categorical features.
2025-09-23 12:16:27,536:INFO:Set up feature normalization.
2025-09-23 12:16:27,729:INFO:Finished creating preprocessing pipeline.
2025-09-23 12:16:27,758:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 12:16:27,758:INFO:Creating final display dataframe.
2025-09-23 12:16:27,802:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 49)
3           Numeric features                     4
4       Categorical features                    10
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                 Normalize                  True
12          Normalize method                zscore
13                  CPU Jobs                    -1
14                   Use GPU                 False
15            Log Experiment                 False
16           Experiment Name  cluster-default-name
17                       USI                  8700
2025-09-23 12:16:27,813:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:16:27,814:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:16:27,814:INFO:setup() successfully completed in 0.34s...............
2025-09-23 12:16:27,821:INFO:Initializing create_model()
2025-09-23 12:16:27,821:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235A5F6CF70>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 12:16:27,821:INFO:Checking exceptions
2025-09-23 12:16:27,903:INFO:Importing untrained model
2025-09-23 12:16:27,909:INFO:K-Means Clustering Imported successfully
2025-09-23 12:16:27,920:INFO:Fitting Model
2025-09-23 12:16:28,122:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:16:28,124:INFO:create_models() successfully completed......................................
2025-09-23 12:16:28,129:INFO:Uploading results into container
2025-09-23 12:16:28,129:INFO:Uploading model into container now
2025-09-23 12:16:28,142:INFO:_master_model_container: 1
2025-09-23 12:16:28,142:INFO:_display_container: 2
2025-09-23 12:16:28,142:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:16:28,142:INFO:create_model() successfully completed......................................
2025-09-23 12:16:28,354:INFO:Initializing assign_model()
2025-09-23 12:16:28,354:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235A5F6CF70>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 12:16:28,354:INFO:Checking exceptions
2025-09-23 12:16:28,354:INFO:Determining Trained Model
2025-09-23 12:16:28,354:INFO:Trained Model : K-Means Clustering
2025-09-23 12:16:28,354:INFO:Copying data
2025-09-23 12:16:28,354:INFO:(1000, 25)
2025-09-23 12:16:28,354:INFO:assign_model() successfully completed......................................
2025-09-23 12:18:00,178:INFO:PyCaret ClusteringExperiment
2025-09-23 12:18:00,179:INFO:Logging name: cluster-default-name
2025-09-23 12:18:00,179:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 12:18:00,179:INFO:version 3.3.2
2025-09-23 12:18:00,179:INFO:Initializing setup()
2025-09-23 12:18:00,179:INFO:self.USI: a193
2025-09-23 12:18:00,179:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'data', 'X', 'logging_param', 'exp_name_log', 'seed', 'gpu_param', 'html_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'memory'}
2025-09-23 12:18:00,179:INFO:Checking environment
2025-09-23 12:18:00,179:INFO:python_version: 3.10.18
2025-09-23 12:18:00,180:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 12:18:00,180:INFO:machine: AMD64
2025-09-23 12:18:00,180:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 12:18:00,180:INFO:Memory: svmem(total=16486035456, available=6462881792, percent=60.8, used=10023153664, free=6462881792)
2025-09-23 12:18:00,180:INFO:Physical Core: 8
2025-09-23 12:18:00,180:INFO:Logical Core: 16
2025-09-23 12:18:00,180:INFO:Checking libraries
2025-09-23 12:18:00,180:INFO:System:
2025-09-23 12:18:00,180:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 12:18:00,180:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 12:18:00,180:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 12:18:00,180:INFO:PyCaret required dependencies:
2025-09-23 12:18:00,180:INFO:                 pip: 25.2
2025-09-23 12:18:00,180:INFO:          setuptools: 78.1.1
2025-09-23 12:18:00,181:INFO:             pycaret: 3.3.2
2025-09-23 12:18:00,181:INFO:             IPython: 8.37.0
2025-09-23 12:18:00,181:INFO:          ipywidgets: 8.1.7
2025-09-23 12:18:00,181:INFO:                tqdm: 4.67.1
2025-09-23 12:18:00,181:INFO:               numpy: 1.26.4
2025-09-23 12:18:00,181:INFO:              pandas: 2.1.4
2025-09-23 12:18:00,181:INFO:              jinja2: 3.1.6
2025-09-23 12:18:00,181:INFO:               scipy: 1.11.4
2025-09-23 12:18:00,181:INFO:              joblib: 1.3.2
2025-09-23 12:18:00,181:INFO:             sklearn: 1.4.2
2025-09-23 12:18:00,181:INFO:                pyod: 2.0.5
2025-09-23 12:18:00,181:INFO:            imblearn: 0.14.0
2025-09-23 12:18:00,181:INFO:   category_encoders: 2.7.0
2025-09-23 12:18:00,181:INFO:            lightgbm: 4.6.0
2025-09-23 12:18:00,181:INFO:               numba: 0.61.0
2025-09-23 12:18:00,181:INFO:            requests: 2.32.5
2025-09-23 12:18:00,181:INFO:          matplotlib: 3.7.5
2025-09-23 12:18:00,181:INFO:          scikitplot: 0.3.7
2025-09-23 12:18:00,181:INFO:         yellowbrick: 1.5
2025-09-23 12:18:00,181:INFO:              plotly: 5.24.1
2025-09-23 12:18:00,182:INFO:    plotly-resampler: Not installed
2025-09-23 12:18:00,182:INFO:             kaleido: 1.1.0
2025-09-23 12:18:00,182:INFO:           schemdraw: 0.15
2025-09-23 12:18:00,182:INFO:         statsmodels: 0.14.5
2025-09-23 12:18:00,182:INFO:              sktime: 0.26.0
2025-09-23 12:18:00,182:INFO:               tbats: 1.1.3
2025-09-23 12:18:00,182:INFO:            pmdarima: 2.0.4
2025-09-23 12:18:00,182:INFO:              psutil: 7.1.0
2025-09-23 12:18:00,182:INFO:          markupsafe: 3.0.2
2025-09-23 12:18:00,182:INFO:             pickle5: Not installed
2025-09-23 12:18:00,182:INFO:         cloudpickle: 3.1.1
2025-09-23 12:18:00,182:INFO:         deprecation: 2.1.0
2025-09-23 12:18:00,182:INFO:              xxhash: 3.5.0
2025-09-23 12:18:00,182:INFO:           wurlitzer: Not installed
2025-09-23 12:18:00,182:INFO:PyCaret optional dependencies:
2025-09-23 12:18:00,182:INFO:                shap: 0.44.1
2025-09-23 12:18:00,182:INFO:           interpret: 0.7.2
2025-09-23 12:18:00,182:INFO:                umap: 0.5.7
2025-09-23 12:18:00,182:INFO:     ydata_profiling: 4.16.1
2025-09-23 12:18:00,182:INFO:  explainerdashboard: 0.5.1
2025-09-23 12:18:00,183:INFO:             autoviz: Not installed
2025-09-23 12:18:00,183:INFO:           fairlearn: 0.7.0
2025-09-23 12:18:00,183:INFO:          deepchecks: Not installed
2025-09-23 12:18:00,183:INFO:             xgboost: 3.0.5
2025-09-23 12:18:00,183:INFO:            catboost: 1.2.8
2025-09-23 12:18:00,183:INFO:              kmodes: 0.12.2
2025-09-23 12:18:00,183:INFO:             mlxtend: 0.23.4
2025-09-23 12:18:00,183:INFO:       statsforecast: 1.5.0
2025-09-23 12:18:00,183:INFO:        tune_sklearn: Not installed
2025-09-23 12:18:00,183:INFO:                 ray: Not installed
2025-09-23 12:18:00,183:INFO:            hyperopt: 0.2.7
2025-09-23 12:18:00,183:INFO:              optuna: 4.5.0
2025-09-23 12:18:00,183:INFO:               skopt: 0.10.2
2025-09-23 12:18:00,183:INFO:              mlflow: 3.4.0
2025-09-23 12:18:00,183:INFO:              gradio: 5.46.1
2025-09-23 12:18:00,183:INFO:             fastapi: 0.117.1
2025-09-23 12:18:00,183:INFO:             uvicorn: 0.36.0
2025-09-23 12:18:00,183:INFO:              m2cgen: 0.10.0
2025-09-23 12:18:00,183:INFO:           evidently: 0.4.40
2025-09-23 12:18:00,184:INFO:               fugue: 0.8.7
2025-09-23 12:18:00,184:INFO:           streamlit: Not installed
2025-09-23 12:18:00,184:INFO:             prophet: Not installed
2025-09-23 12:18:00,184:INFO:None
2025-09-23 12:18:00,184:INFO:Set up data.
2025-09-23 12:18:00,194:INFO:Set up index.
2025-09-23 12:18:00,194:INFO:Assigning column types.
2025-09-23 12:18:00,197:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 12:18:00,198:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:18:00,198:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:18:00,198:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:18:00,198:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:18:00,198:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 12:18:00,199:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:18:00,199:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:18:00,200:INFO:Preparing preprocessing pipeline...
2025-09-23 12:18:00,200:INFO:Set up simple imputation.
2025-09-23 12:18:00,203:INFO:Set up encoding of ordinal features.
2025-09-23 12:18:00,204:INFO:Set up encoding of categorical features.
2025-09-23 12:18:00,205:INFO:Set up feature normalization.
2025-09-23 12:18:00,404:INFO:Finished creating preprocessing pipeline.
2025-09-23 12:18:00,435:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 12:18:00,435:INFO:Creating final display dataframe.
2025-09-23 12:18:00,490:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 49)
3           Numeric features                     4
4       Categorical features                    10
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                 Normalize                  True
12          Normalize method                zscore
13                  CPU Jobs                    -1
14                   Use GPU                 False
15            Log Experiment                 False
16           Experiment Name  cluster-default-name
17                       USI                  a193
2025-09-23 12:18:00,499:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:18:00,499:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:18:00,500:INFO:setup() successfully completed in 0.33s...............
2025-09-23 12:18:00,509:INFO:Initializing create_model()
2025-09-23 12:18:00,509:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002359FDCD030>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 12:18:00,509:INFO:Checking exceptions
2025-09-23 12:18:00,660:INFO:Importing untrained model
2025-09-23 12:18:00,668:INFO:K-Means Clustering Imported successfully
2025-09-23 12:18:00,681:INFO:Fitting Model
2025-09-23 12:18:00,879:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:18:00,879:INFO:create_models() successfully completed......................................
2025-09-23 12:18:00,885:INFO:Uploading results into container
2025-09-23 12:18:00,886:INFO:Uploading model into container now
2025-09-23 12:18:00,896:INFO:_master_model_container: 1
2025-09-23 12:18:00,896:INFO:_display_container: 2
2025-09-23 12:18:00,897:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:18:00,897:INFO:create_model() successfully completed......................................
2025-09-23 12:18:01,111:INFO:Initializing assign_model()
2025-09-23 12:18:01,111:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002359FDCD030>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 12:18:01,112:INFO:Checking exceptions
2025-09-23 12:18:01,112:INFO:Determining Trained Model
2025-09-23 12:18:01,112:INFO:Trained Model : K-Means Clustering
2025-09-23 12:18:01,112:INFO:Copying data
2025-09-23 12:18:01,114:INFO:(1000, 25)
2025-09-23 12:18:01,114:INFO:assign_model() successfully completed......................................
2025-09-23 12:18:01,514:INFO:Initializing save_model()
2025-09-23 12:18:01,515:INFO:save_model(model=KMeans(n_clusters=4, random_state=123), model_name=modelo_hoteles_kmeans, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-09-23 12:18:01,515:INFO:Adding model into prep_pipe
2025-09-23 12:18:01,537:INFO:modelo_hoteles_kmeans.pkl saved in current working directory
2025-09-23 12:18:01,566:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada', 'Canal_reserva',
                                             'OcupaciÃ³n', 'ReseÃ±a',
                                             'Re...
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=123))])
2025-09-23 12:18:01,567:INFO:save_model() successfully completed......................................
2025-09-23 12:27:34,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 12:27:34,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 12:27:34,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 12:27:34,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 12:27:37,024:INFO:PyCaret ClusteringExperiment
2025-09-23 12:27:37,024:INFO:Logging name: cluster-default-name
2025-09-23 12:27:37,024:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 12:27:37,024:INFO:version 3.3.2
2025-09-23 12:27:37,024:INFO:Initializing setup()
2025-09-23 12:27:37,024:INFO:self.USI: dd53
2025-09-23 12:27:37,024:INFO:self._variable_keys: {'gpu_param', 'data', 'html_param', 'USI', '_ml_usecase', 'n_jobs_param', 'exp_id', 'X', 'memory', 'logging_param', 'seed', 'log_plots_param', 'pipeline', '_available_plots', 'idx', 'gpu_n_jobs_param', 'exp_name_log'}
2025-09-23 12:27:37,024:INFO:Checking environment
2025-09-23 12:27:37,024:INFO:python_version: 3.10.18
2025-09-23 12:27:37,024:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 12:27:37,024:INFO:machine: AMD64
2025-09-23 12:27:37,024:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 12:27:37,024:INFO:Memory: svmem(total=16486035456, available=5620510720, percent=65.9, used=10865524736, free=5620510720)
2025-09-23 12:27:37,024:INFO:Physical Core: 8
2025-09-23 12:27:37,024:INFO:Logical Core: 16
2025-09-23 12:27:37,024:INFO:Checking libraries
2025-09-23 12:27:37,024:INFO:System:
2025-09-23 12:27:37,024:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 12:27:37,024:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 12:27:37,024:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 12:27:37,024:INFO:PyCaret required dependencies:
2025-09-23 12:27:38,533:INFO:                 pip: 25.2
2025-09-23 12:27:38,533:INFO:          setuptools: 78.1.1
2025-09-23 12:27:38,533:INFO:             pycaret: 3.3.2
2025-09-23 12:27:38,534:INFO:             IPython: 8.37.0
2025-09-23 12:27:38,534:INFO:          ipywidgets: 8.1.7
2025-09-23 12:27:38,534:INFO:                tqdm: 4.67.1
2025-09-23 12:27:38,534:INFO:               numpy: 1.26.4
2025-09-23 12:27:38,534:INFO:              pandas: 2.1.4
2025-09-23 12:27:38,534:INFO:              jinja2: 3.1.6
2025-09-23 12:27:38,534:INFO:               scipy: 1.11.4
2025-09-23 12:27:38,534:INFO:              joblib: 1.3.2
2025-09-23 12:27:38,534:INFO:             sklearn: 1.4.2
2025-09-23 12:27:38,534:INFO:                pyod: 2.0.5
2025-09-23 12:27:38,534:INFO:            imblearn: 0.14.0
2025-09-23 12:27:38,534:INFO:   category_encoders: 2.7.0
2025-09-23 12:27:38,534:INFO:            lightgbm: 4.6.0
2025-09-23 12:27:38,534:INFO:               numba: 0.61.0
2025-09-23 12:27:38,534:INFO:            requests: 2.32.5
2025-09-23 12:27:38,534:INFO:          matplotlib: 3.7.5
2025-09-23 12:27:38,534:INFO:          scikitplot: 0.3.7
2025-09-23 12:27:38,534:INFO:         yellowbrick: 1.5
2025-09-23 12:27:38,534:INFO:              plotly: 5.24.1
2025-09-23 12:27:38,534:INFO:    plotly-resampler: Not installed
2025-09-23 12:27:38,535:INFO:             kaleido: 1.1.0
2025-09-23 12:27:38,535:INFO:           schemdraw: 0.15
2025-09-23 12:27:38,535:INFO:         statsmodels: 0.14.5
2025-09-23 12:27:38,535:INFO:              sktime: 0.26.0
2025-09-23 12:27:38,535:INFO:               tbats: 1.1.3
2025-09-23 12:27:38,535:INFO:            pmdarima: 2.0.4
2025-09-23 12:27:38,535:INFO:              psutil: 7.1.0
2025-09-23 12:27:38,535:INFO:          markupsafe: 3.0.2
2025-09-23 12:27:38,535:INFO:             pickle5: Not installed
2025-09-23 12:27:38,535:INFO:         cloudpickle: 3.1.1
2025-09-23 12:27:38,535:INFO:         deprecation: 2.1.0
2025-09-23 12:27:38,535:INFO:              xxhash: 3.5.0
2025-09-23 12:27:38,535:INFO:           wurlitzer: Not installed
2025-09-23 12:27:38,535:INFO:PyCaret optional dependencies:
2025-09-23 12:27:46,421:INFO:                shap: 0.44.1
2025-09-23 12:27:46,421:INFO:           interpret: 0.7.2
2025-09-23 12:27:46,421:INFO:                umap: 0.5.7
2025-09-23 12:27:46,421:INFO:     ydata_profiling: 4.16.1
2025-09-23 12:27:46,421:INFO:  explainerdashboard: 0.5.1
2025-09-23 12:27:46,421:INFO:             autoviz: Not installed
2025-09-23 12:27:46,421:INFO:           fairlearn: 0.7.0
2025-09-23 12:27:46,421:INFO:          deepchecks: Not installed
2025-09-23 12:27:46,421:INFO:             xgboost: 3.0.5
2025-09-23 12:27:46,421:INFO:            catboost: 1.2.8
2025-09-23 12:27:46,421:INFO:              kmodes: 0.12.2
2025-09-23 12:27:46,421:INFO:             mlxtend: 0.23.4
2025-09-23 12:27:46,421:INFO:       statsforecast: 1.5.0
2025-09-23 12:27:46,421:INFO:        tune_sklearn: Not installed
2025-09-23 12:27:46,421:INFO:                 ray: Not installed
2025-09-23 12:27:46,421:INFO:            hyperopt: 0.2.7
2025-09-23 12:27:46,421:INFO:              optuna: 4.5.0
2025-09-23 12:27:46,421:INFO:               skopt: 0.10.2
2025-09-23 12:27:46,421:INFO:              mlflow: 3.4.0
2025-09-23 12:27:46,421:INFO:              gradio: 5.46.1
2025-09-23 12:27:46,421:INFO:             fastapi: 0.117.1
2025-09-23 12:27:46,421:INFO:             uvicorn: 0.36.0
2025-09-23 12:27:46,421:INFO:              m2cgen: 0.10.0
2025-09-23 12:27:46,421:INFO:           evidently: 0.4.40
2025-09-23 12:27:46,421:INFO:               fugue: 0.8.7
2025-09-23 12:27:46,421:INFO:           streamlit: Not installed
2025-09-23 12:27:46,421:INFO:             prophet: Not installed
2025-09-23 12:27:46,421:INFO:None
2025-09-23 12:27:46,421:INFO:Set up data.
2025-09-23 12:27:46,421:INFO:Set up index.
2025-09-23 12:27:46,421:INFO:Assigning column types.
2025-09-23 12:27:46,428:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 12:27:46,428:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:27:46,428:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:27:46,437:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 12:27:46,437:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:27:46,437:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 12:27:46,437:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:27:46,437:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:27:46,437:INFO:Preparing preprocessing pipeline...
2025-09-23 12:27:46,437:INFO:Set up simple imputation.
2025-09-23 12:27:46,437:INFO:Set up feature normalization.
2025-09-23 12:27:46,468:INFO:Finished creating preprocessing pipeline.
2025-09-23 12:27:46,471:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'Duración_estadía',
                                             'Anticipación_reserva_días',
                                             'Calificación'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 12:27:46,471:INFO:Creating final display dataframe.
2025-09-23 12:27:46,498:INFO:Setup _display_container:                Description                 Value
0               Session id                   123
1      Original data shape             (1000, 4)
2   Transformed data shape             (1000, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  dd53
2025-09-23 12:27:46,515:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:27:46,515:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 12:27:46,515:INFO:setup() successfully completed in 9.5s...............
2025-09-23 12:27:46,515:INFO:Initializing create_model()
2025-09-23 12:27:46,515:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001D6DEFC5330>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 12:27:46,515:INFO:Checking exceptions
2025-09-23 12:27:46,600:INFO:Importing untrained model
2025-09-23 12:27:46,608:INFO:K-Means Clustering Imported successfully
2025-09-23 12:27:46,617:INFO:Fitting Model
2025-09-23 12:27:46,777:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:27:46,777:INFO:create_models() successfully completed......................................
2025-09-23 12:27:46,787:INFO:Uploading results into container
2025-09-23 12:27:46,787:INFO:Uploading model into container now
2025-09-23 12:27:46,801:INFO:_master_model_container: 1
2025-09-23 12:27:46,801:INFO:_display_container: 2
2025-09-23 12:27:46,801:INFO:KMeans(n_clusters=4, random_state=123)
2025-09-23 12:27:46,801:INFO:create_model() successfully completed......................................
2025-09-23 12:27:46,966:INFO:Initializing assign_model()
2025-09-23 12:27:46,966:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001D6DEFC5330>, model=KMeans(n_clusters=4, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 12:27:46,966:INFO:Checking exceptions
2025-09-23 12:27:46,966:INFO:Determining Trained Model
2025-09-23 12:27:46,966:INFO:Trained Model : K-Means Clustering
2025-09-23 12:27:46,966:INFO:Copying data
2025-09-23 12:27:46,980:INFO:(1000, 5)
2025-09-23 12:27:46,980:INFO:assign_model() successfully completed......................................
2025-09-23 13:00:31,984:INFO:PyCaret ClusteringExperiment
2025-09-23 13:00:31,985:INFO:Logging name: cluster-default-name
2025-09-23 13:00:31,986:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-09-23 13:00:31,988:INFO:version 3.3.2
2025-09-23 13:00:31,989:INFO:Initializing setup()
2025-09-23 13:00:31,989:INFO:self.USI: bae9
2025-09-23 13:00:31,989:INFO:self._variable_keys: {'_available_plots', 'gpu_n_jobs_param', 'data', 'X', 'logging_param', 'exp_name_log', 'seed', 'gpu_param', 'html_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'idx', 'memory'}
2025-09-23 13:00:31,989:INFO:Checking environment
2025-09-23 13:00:31,991:INFO:python_version: 3.10.18
2025-09-23 13:00:31,991:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 13:00:31,991:INFO:machine: AMD64
2025-09-23 13:00:31,991:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 13:00:31,992:INFO:Memory: svmem(total=16486035456, available=7035346944, percent=57.3, used=9450688512, free=7035346944)
2025-09-23 13:00:31,993:INFO:Physical Core: 8
2025-09-23 13:00:31,993:INFO:Logical Core: 16
2025-09-23 13:00:31,993:INFO:Checking libraries
2025-09-23 13:00:31,993:INFO:System:
2025-09-23 13:00:31,993:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 13:00:31,993:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 13:00:31,993:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 13:00:31,993:INFO:PyCaret required dependencies:
2025-09-23 13:00:31,994:INFO:                 pip: 25.2
2025-09-23 13:00:31,995:INFO:          setuptools: 78.1.1
2025-09-23 13:00:31,995:INFO:             pycaret: 3.3.2
2025-09-23 13:00:31,995:INFO:             IPython: 8.37.0
2025-09-23 13:00:31,995:INFO:          ipywidgets: 8.1.7
2025-09-23 13:00:31,995:INFO:                tqdm: 4.67.1
2025-09-23 13:00:31,995:INFO:               numpy: 1.26.4
2025-09-23 13:00:31,995:INFO:              pandas: 2.1.4
2025-09-23 13:00:31,995:INFO:              jinja2: 3.1.6
2025-09-23 13:00:31,995:INFO:               scipy: 1.11.4
2025-09-23 13:00:31,995:INFO:              joblib: 1.3.2
2025-09-23 13:00:31,995:INFO:             sklearn: 1.4.2
2025-09-23 13:00:31,995:INFO:                pyod: 2.0.5
2025-09-23 13:00:31,995:INFO:            imblearn: 0.14.0
2025-09-23 13:00:31,995:INFO:   category_encoders: 2.7.0
2025-09-23 13:00:31,995:INFO:            lightgbm: 4.6.0
2025-09-23 13:00:31,995:INFO:               numba: 0.61.0
2025-09-23 13:00:31,995:INFO:            requests: 2.32.5
2025-09-23 13:00:31,995:INFO:          matplotlib: 3.7.5
2025-09-23 13:00:31,995:INFO:          scikitplot: 0.3.7
2025-09-23 13:00:31,995:INFO:         yellowbrick: 1.5
2025-09-23 13:00:31,996:INFO:              plotly: 5.24.1
2025-09-23 13:00:31,996:INFO:    plotly-resampler: Not installed
2025-09-23 13:00:31,996:INFO:             kaleido: 1.1.0
2025-09-23 13:00:31,996:INFO:           schemdraw: 0.15
2025-09-23 13:00:31,996:INFO:         statsmodels: 0.14.5
2025-09-23 13:00:31,996:INFO:              sktime: 0.26.0
2025-09-23 13:00:31,996:INFO:               tbats: 1.1.3
2025-09-23 13:00:31,996:INFO:            pmdarima: 2.0.4
2025-09-23 13:00:31,996:INFO:              psutil: 7.1.0
2025-09-23 13:00:31,996:INFO:          markupsafe: 3.0.2
2025-09-23 13:00:31,996:INFO:             pickle5: Not installed
2025-09-23 13:00:31,996:INFO:         cloudpickle: 3.1.1
2025-09-23 13:00:31,996:INFO:         deprecation: 2.1.0
2025-09-23 13:00:31,996:INFO:              xxhash: 3.5.0
2025-09-23 13:00:31,996:INFO:           wurlitzer: Not installed
2025-09-23 13:00:31,996:INFO:PyCaret optional dependencies:
2025-09-23 13:00:31,996:INFO:                shap: 0.44.1
2025-09-23 13:00:31,997:INFO:           interpret: 0.7.2
2025-09-23 13:00:31,997:INFO:                umap: 0.5.7
2025-09-23 13:00:31,997:INFO:     ydata_profiling: 4.16.1
2025-09-23 13:00:31,997:INFO:  explainerdashboard: 0.5.1
2025-09-23 13:00:31,997:INFO:             autoviz: Not installed
2025-09-23 13:00:31,997:INFO:           fairlearn: 0.7.0
2025-09-23 13:00:31,997:INFO:          deepchecks: Not installed
2025-09-23 13:00:31,997:INFO:             xgboost: 3.0.5
2025-09-23 13:00:31,997:INFO:            catboost: 1.2.8
2025-09-23 13:00:31,997:INFO:              kmodes: 0.12.2
2025-09-23 13:00:31,997:INFO:             mlxtend: 0.23.4
2025-09-23 13:00:31,997:INFO:       statsforecast: 1.5.0
2025-09-23 13:00:31,997:INFO:        tune_sklearn: Not installed
2025-09-23 13:00:31,997:INFO:                 ray: Not installed
2025-09-23 13:00:31,997:INFO:            hyperopt: 0.2.7
2025-09-23 13:00:31,997:INFO:              optuna: 4.5.0
2025-09-23 13:00:31,997:INFO:               skopt: 0.10.2
2025-09-23 13:00:31,997:INFO:              mlflow: 3.4.0
2025-09-23 13:00:31,997:INFO:              gradio: 5.46.1
2025-09-23 13:00:31,997:INFO:             fastapi: 0.117.1
2025-09-23 13:00:31,998:INFO:             uvicorn: 0.36.0
2025-09-23 13:00:31,998:INFO:              m2cgen: 0.10.0
2025-09-23 13:00:31,998:INFO:           evidently: 0.4.40
2025-09-23 13:00:31,998:INFO:               fugue: 0.8.7
2025-09-23 13:00:31,998:INFO:           streamlit: Not installed
2025-09-23 13:00:31,998:INFO:             prophet: Not installed
2025-09-23 13:00:31,998:INFO:None
2025-09-23 13:00:31,998:INFO:Set up data.
2025-09-23 13:00:32,013:INFO:Set up index.
2025-09-23 13:00:32,014:INFO:Assigning column types.
2025-09-23 13:00:32,019:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-09-23 13:00:32,020:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 13:00:32,020:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 13:00:32,022:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-09-23 13:00:32,022:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 13:00:32,022:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-09-23 13:00:32,022:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 13:00:32,022:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 13:00:32,024:INFO:Preparing preprocessing pipeline...
2025-09-23 13:00:32,025:INFO:Set up simple imputation.
2025-09-23 13:00:32,028:INFO:Set up encoding of ordinal features.
2025-09-23 13:00:32,031:INFO:Set up encoding of categorical features.
2025-09-23 13:00:32,031:INFO:Set up feature normalization.
2025-09-23 13:00:32,222:INFO:Finished creating preprocessing pipeline.
2025-09-23 13:00:32,251:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-23 13:00:32,251:INFO:Creating final display dataframe.
2025-09-23 13:00:32,301:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape            (1000, 24)
2     Transformed data shape            (1000, 49)
3           Numeric features                     4
4       Categorical features                    10
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                 Normalize                  True
12          Normalize method                zscore
13                  CPU Jobs                    -1
14                   Use GPU                 False
15            Log Experiment                 False
16           Experiment Name  cluster-default-name
17                       USI                  bae9
2025-09-23 13:00:32,327:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 13:00:32,328:INFO:Soft dependency imported: kmodes: 0.12.2
2025-09-23 13:00:32,330:INFO:setup() successfully completed in 0.37s...............
2025-09-23 13:00:32,348:INFO:Initializing create_model()
2025-09-23 13:00:32,348:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235A5F6DD50>, estimator=kmeans, num_clusters=2, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-09-23 13:00:32,349:INFO:Checking exceptions
2025-09-23 13:00:32,464:INFO:Importing untrained model
2025-09-23 13:00:32,472:INFO:K-Means Clustering Imported successfully
2025-09-23 13:00:32,486:INFO:Fitting Model
2025-09-23 13:00:32,742:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-23 13:00:32,742:INFO:create_models() successfully completed......................................
2025-09-23 13:00:32,749:INFO:Uploading results into container
2025-09-23 13:00:32,750:INFO:Uploading model into container now
2025-09-23 13:00:32,761:INFO:_master_model_container: 1
2025-09-23 13:00:32,761:INFO:_display_container: 2
2025-09-23 13:00:32,762:INFO:KMeans(n_clusters=2, random_state=123)
2025-09-23 13:00:32,762:INFO:create_model() successfully completed......................................
2025-09-23 13:00:33,183:INFO:Initializing assign_model()
2025-09-23 13:00:33,183:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000235A5F6DD50>, model=KMeans(n_clusters=2, random_state=123), transformation=False, score=True, verbose=True)
2025-09-23 13:00:33,183:INFO:Checking exceptions
2025-09-23 13:00:33,183:INFO:Determining Trained Model
2025-09-23 13:00:33,183:INFO:Trained Model : K-Means Clustering
2025-09-23 13:00:33,183:INFO:Copying data
2025-09-23 13:00:33,186:INFO:(1000, 25)
2025-09-23 13:00:33,186:INFO:assign_model() successfully completed......................................
2025-09-23 13:00:33,620:INFO:Initializing save_model()
2025-09-23 13:00:33,620:INFO:save_model(model=KMeans(n_clusters=2, random_state=123), model_name=modelo_hoteles_kmeans, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada',...
                                             'Motivo_viaje', 'Temporada',
                                             'Canal_reserva', 'OcupaciÃ³n',
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-09-23 13:00:33,620:INFO:Adding model into prep_pipe
2025-09-23 13:00:33,643:INFO:modelo_hoteles_kmeans.pkl saved in current working directory
2025-09-23 13:00:33,673:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['GÃ©nero', 'Procedencia',
                                             'Tipo_viajero', 'Motivo_viaje',
                                             'Temporada', 'Canal_reserva',
                                             'OcupaciÃ³n', 'ReseÃ±a',
                                             'Re...
                                             'ReseÃ±a', 'ReputaciÃ³n_online',
                                             'Limpieza'],
                                    transformer=OneHotEncoder(cols=['Procedencia',
                                                                    'Tipo_viajero',
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=2, random_state=123))])
2025-09-23 13:00:33,673:INFO:save_model() successfully completed......................................
2025-09-23 13:05:21,650:INFO:PyCaret ClassificationExperiment
2025-09-23 13:05:21,650:INFO:Logging name: clf-default-name
2025-09-23 13:05:21,650:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 13:05:21,650:INFO:version 3.3.2
2025-09-23 13:05:21,650:INFO:Initializing setup()
2025-09-23 13:05:21,650:INFO:self.USI: b5e3
2025-09-23 13:05:21,650:INFO:self._variable_keys: {'fold_shuffle_param', '_available_plots', 'X_train', 'gpu_n_jobs_param', 'data', 'X', 'is_multiclass', 'logging_param', 'exp_name_log', 'seed', 'X_test', 'gpu_param', 'fold_groups_param', 'y_test', 'html_param', 'fold_generator', 'y', 'fix_imbalance', 'exp_id', '_ml_usecase', 'log_plots_param', 'USI', 'n_jobs_param', 'target_param', 'pipeline', 'idx', 'memory', 'y_train'}
2025-09-23 13:05:21,650:INFO:Checking environment
2025-09-23 13:05:21,650:INFO:python_version: 3.10.18
2025-09-23 13:05:21,650:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 13:05:21,650:INFO:machine: AMD64
2025-09-23 13:05:21,652:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 13:05:21,652:INFO:Memory: svmem(total=16486035456, available=5757440000, percent=65.1, used=10728595456, free=5757440000)
2025-09-23 13:05:21,652:INFO:Physical Core: 8
2025-09-23 13:05:21,652:INFO:Logical Core: 16
2025-09-23 13:05:21,652:INFO:Checking libraries
2025-09-23 13:05:21,653:INFO:System:
2025-09-23 13:05:21,653:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 13:05:21,653:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 13:05:21,653:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 13:05:21,653:INFO:PyCaret required dependencies:
2025-09-23 13:05:21,653:INFO:                 pip: 25.2
2025-09-23 13:05:21,653:INFO:          setuptools: 78.1.1
2025-09-23 13:05:21,653:INFO:             pycaret: 3.3.2
2025-09-23 13:05:21,653:INFO:             IPython: 8.37.0
2025-09-23 13:05:21,653:INFO:          ipywidgets: 8.1.7
2025-09-23 13:05:21,653:INFO:                tqdm: 4.67.1
2025-09-23 13:05:21,653:INFO:               numpy: 1.26.4
2025-09-23 13:05:21,653:INFO:              pandas: 2.1.4
2025-09-23 13:05:21,653:INFO:              jinja2: 3.1.6
2025-09-23 13:05:21,655:INFO:               scipy: 1.11.4
2025-09-23 13:05:21,655:INFO:              joblib: 1.3.2
2025-09-23 13:05:21,655:INFO:             sklearn: 1.4.2
2025-09-23 13:05:21,655:INFO:                pyod: 2.0.5
2025-09-23 13:05:21,655:INFO:            imblearn: 0.14.0
2025-09-23 13:05:21,655:INFO:   category_encoders: 2.7.0
2025-09-23 13:05:21,655:INFO:            lightgbm: 4.6.0
2025-09-23 13:05:21,655:INFO:               numba: 0.61.0
2025-09-23 13:05:21,655:INFO:            requests: 2.32.5
2025-09-23 13:05:21,655:INFO:          matplotlib: 3.7.5
2025-09-23 13:05:21,655:INFO:          scikitplot: 0.3.7
2025-09-23 13:05:21,655:INFO:         yellowbrick: 1.5
2025-09-23 13:05:21,655:INFO:              plotly: 5.24.1
2025-09-23 13:05:21,655:INFO:    plotly-resampler: Not installed
2025-09-23 13:05:21,655:INFO:             kaleido: 1.1.0
2025-09-23 13:05:21,655:INFO:           schemdraw: 0.15
2025-09-23 13:05:21,655:INFO:         statsmodels: 0.14.5
2025-09-23 13:05:21,655:INFO:              sktime: 0.26.0
2025-09-23 13:05:21,657:INFO:               tbats: 1.1.3
2025-09-23 13:05:21,657:INFO:            pmdarima: 2.0.4
2025-09-23 13:05:21,657:INFO:              psutil: 7.1.0
2025-09-23 13:05:21,657:INFO:          markupsafe: 3.0.2
2025-09-23 13:05:21,657:INFO:             pickle5: Not installed
2025-09-23 13:05:21,657:INFO:         cloudpickle: 3.1.1
2025-09-23 13:05:21,657:INFO:         deprecation: 2.1.0
2025-09-23 13:05:21,657:INFO:              xxhash: 3.5.0
2025-09-23 13:05:21,657:INFO:           wurlitzer: Not installed
2025-09-23 13:05:21,657:INFO:PyCaret optional dependencies:
2025-09-23 13:05:21,657:INFO:                shap: 0.44.1
2025-09-23 13:05:21,657:INFO:           interpret: 0.7.2
2025-09-23 13:05:21,657:INFO:                umap: 0.5.7
2025-09-23 13:05:21,657:INFO:     ydata_profiling: 4.16.1
2025-09-23 13:05:21,657:INFO:  explainerdashboard: 0.5.1
2025-09-23 13:05:21,657:INFO:             autoviz: Not installed
2025-09-23 13:05:21,657:INFO:           fairlearn: 0.7.0
2025-09-23 13:05:21,657:INFO:          deepchecks: Not installed
2025-09-23 13:05:21,657:INFO:             xgboost: 3.0.5
2025-09-23 13:05:21,657:INFO:            catboost: 1.2.8
2025-09-23 13:05:21,657:INFO:              kmodes: 0.12.2
2025-09-23 13:05:21,657:INFO:             mlxtend: 0.23.4
2025-09-23 13:05:21,657:INFO:       statsforecast: 1.5.0
2025-09-23 13:05:21,657:INFO:        tune_sklearn: Not installed
2025-09-23 13:05:21,659:INFO:                 ray: Not installed
2025-09-23 13:05:21,659:INFO:            hyperopt: 0.2.7
2025-09-23 13:05:21,659:INFO:              optuna: 4.5.0
2025-09-23 13:05:21,659:INFO:               skopt: 0.10.2
2025-09-23 13:05:21,659:INFO:              mlflow: 3.4.0
2025-09-23 13:05:21,659:INFO:              gradio: 5.46.1
2025-09-23 13:05:21,659:INFO:             fastapi: 0.117.1
2025-09-23 13:05:21,659:INFO:             uvicorn: 0.36.0
2025-09-23 13:05:21,659:INFO:              m2cgen: 0.10.0
2025-09-23 13:05:21,659:INFO:           evidently: 0.4.40
2025-09-23 13:05:21,659:INFO:               fugue: 0.8.7
2025-09-23 13:05:21,659:INFO:           streamlit: Not installed
2025-09-23 13:05:21,659:INFO:             prophet: Not installed
2025-09-23 13:05:21,659:INFO:None
2025-09-23 13:05:21,659:INFO:Set up data.
2025-09-23 15:11:04,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:11:04,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:11:04,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:11:04,775:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:11:08,875:INFO:PyCaret ClassificationExperiment
2025-09-23 15:11:08,875:INFO:Logging name: clf-default-name
2025-09-23 15:11:08,875:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:11:08,875:INFO:version 3.3.2
2025-09-23 15:11:08,875:INFO:Initializing setup()
2025-09-23 15:11:08,875:INFO:self.USI: 95d3
2025-09-23 15:11:08,876:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'X_train', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_id', 'fix_imbalance', 'pipeline', 'memory', 'X', 'USI', 'idx', 'logging_param', 'y', 'html_param', 'fold_shuffle_param', 'data', '_ml_usecase', 'seed', 'fold_generator', 'gpu_param', 'y_test', 'X_test', 'target_param', '_available_plots', 'is_multiclass'}
2025-09-23 15:11:08,876:INFO:Checking environment
2025-09-23 15:11:08,876:INFO:python_version: 3.10.18
2025-09-23 15:11:08,876:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:11:08,876:INFO:machine: AMD64
2025-09-23 15:11:08,876:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:11:08,876:INFO:Memory: svmem(total=16486035456, available=7479267328, percent=54.6, used=9006768128, free=7479267328)
2025-09-23 15:11:08,876:INFO:Physical Core: 8
2025-09-23 15:11:08,876:INFO:Logical Core: 16
2025-09-23 15:11:08,876:INFO:Checking libraries
2025-09-23 15:11:08,876:INFO:System:
2025-09-23 15:11:08,876:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:11:08,876:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:11:08,876:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:11:08,876:INFO:PyCaret required dependencies:
2025-09-23 15:11:10,951:INFO:                 pip: 25.2
2025-09-23 15:11:10,951:INFO:          setuptools: 78.1.1
2025-09-23 15:11:10,951:INFO:             pycaret: 3.3.2
2025-09-23 15:11:10,951:INFO:             IPython: 8.37.0
2025-09-23 15:11:10,951:INFO:          ipywidgets: 8.1.7
2025-09-23 15:11:10,951:INFO:                tqdm: 4.67.1
2025-09-23 15:11:10,951:INFO:               numpy: 1.26.4
2025-09-23 15:11:10,951:INFO:              pandas: 2.1.4
2025-09-23 15:11:10,951:INFO:              jinja2: 3.1.6
2025-09-23 15:11:10,951:INFO:               scipy: 1.11.4
2025-09-23 15:11:10,951:INFO:              joblib: 1.3.2
2025-09-23 15:11:10,951:INFO:             sklearn: 1.4.2
2025-09-23 15:11:10,952:INFO:                pyod: 2.0.5
2025-09-23 15:11:10,952:INFO:            imblearn: 0.14.0
2025-09-23 15:11:10,952:INFO:   category_encoders: 2.7.0
2025-09-23 15:11:10,952:INFO:            lightgbm: 4.6.0
2025-09-23 15:11:10,952:INFO:               numba: 0.61.0
2025-09-23 15:11:10,952:INFO:            requests: 2.32.5
2025-09-23 15:11:10,952:INFO:          matplotlib: 3.7.5
2025-09-23 15:11:10,952:INFO:          scikitplot: 0.3.7
2025-09-23 15:11:10,952:INFO:         yellowbrick: 1.5
2025-09-23 15:11:10,952:INFO:              plotly: 5.24.1
2025-09-23 15:11:10,952:INFO:    plotly-resampler: Not installed
2025-09-23 15:11:10,952:INFO:             kaleido: 1.1.0
2025-09-23 15:11:10,952:INFO:           schemdraw: 0.15
2025-09-23 15:11:10,952:INFO:         statsmodels: 0.14.5
2025-09-23 15:11:10,952:INFO:              sktime: 0.26.0
2025-09-23 15:11:10,952:INFO:               tbats: 1.1.3
2025-09-23 15:11:10,952:INFO:            pmdarima: 2.0.4
2025-09-23 15:11:10,952:INFO:              psutil: 7.1.0
2025-09-23 15:11:10,952:INFO:          markupsafe: 3.0.2
2025-09-23 15:11:10,953:INFO:             pickle5: Not installed
2025-09-23 15:11:10,953:INFO:         cloudpickle: 3.1.1
2025-09-23 15:11:10,953:INFO:         deprecation: 2.1.0
2025-09-23 15:11:10,953:INFO:              xxhash: 3.5.0
2025-09-23 15:11:10,953:INFO:           wurlitzer: Not installed
2025-09-23 15:11:10,953:INFO:PyCaret optional dependencies:
2025-09-23 15:11:19,910:INFO:                shap: 0.44.1
2025-09-23 15:11:19,910:INFO:           interpret: 0.7.2
2025-09-23 15:11:19,910:INFO:                umap: 0.5.7
2025-09-23 15:11:19,910:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:11:19,910:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:11:19,910:INFO:             autoviz: Not installed
2025-09-23 15:11:19,910:INFO:           fairlearn: 0.7.0
2025-09-23 15:11:19,910:INFO:          deepchecks: Not installed
2025-09-23 15:11:19,910:INFO:             xgboost: 3.0.5
2025-09-23 15:11:19,910:INFO:            catboost: 1.2.8
2025-09-23 15:11:19,910:INFO:              kmodes: 0.12.2
2025-09-23 15:11:19,910:INFO:             mlxtend: 0.23.4
2025-09-23 15:11:19,910:INFO:       statsforecast: 1.5.0
2025-09-23 15:11:19,910:INFO:        tune_sklearn: Not installed
2025-09-23 15:11:19,912:INFO:                 ray: Not installed
2025-09-23 15:11:19,912:INFO:            hyperopt: 0.2.7
2025-09-23 15:11:19,912:INFO:              optuna: 4.5.0
2025-09-23 15:11:19,912:INFO:               skopt: 0.10.2
2025-09-23 15:11:19,912:INFO:              mlflow: 3.4.0
2025-09-23 15:11:19,912:INFO:              gradio: 5.46.1
2025-09-23 15:11:19,912:INFO:             fastapi: 0.117.1
2025-09-23 15:11:19,912:INFO:             uvicorn: 0.36.0
2025-09-23 15:11:19,912:INFO:              m2cgen: 0.10.0
2025-09-23 15:11:19,912:INFO:           evidently: 0.4.40
2025-09-23 15:11:19,912:INFO:               fugue: 0.8.7
2025-09-23 15:11:19,912:INFO:           streamlit: Not installed
2025-09-23 15:11:19,912:INFO:             prophet: Not installed
2025-09-23 15:11:19,912:INFO:None
2025-09-23 15:11:19,912:INFO:Set up data.
2025-09-23 15:11:19,940:INFO:Set up folding strategy.
2025-09-23 15:11:19,940:INFO:Set up train/test split.
2025-09-23 15:11:19,957:INFO:Set up index.
2025-09-23 15:11:19,961:INFO:Assigning column types.
2025-09-23 15:11:19,965:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:11:20,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:11:20,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:11:20,093:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:20,099:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:20,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:11:20,314:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:11:20,354:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:20,359:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:20,360:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:11:20,423:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:11:20,467:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:20,474:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:20,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:11:20,569:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:20,581:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:20,581:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:11:20,684:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:20,684:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:20,799:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:20,799:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:20,799:INFO:Preparing preprocessing pipeline...
2025-09-23 15:11:20,816:INFO:Set up label encoding.
2025-09-23 15:11:20,816:INFO:Set up simple imputation.
2025-09-23 15:11:20,818:INFO:Set up encoding of ordinal features.
2025-09-23 15:11:20,818:INFO:Set up encoding of categorical features.
2025-09-23 15:11:20,818:INFO:Set up column name cleaning.
2025-09-23 15:11:21,257:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:11:21,289:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:11:21,289:INFO:Creating final display dataframe.
2025-09-23 15:11:22,055:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                   (1000, 35)
5        Transformed data shape                                   (1000, 62)
6   Transformed train set shape                                    (700, 62)
7    Transformed test set shape                                    (300, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         95d3
2025-09-23 15:11:22,151:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:22,151:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:22,250:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:11:22,250:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:11:22,250:INFO:setup() successfully completed in 13.4s...............
2025-09-23 15:11:22,250:INFO:Initializing compare_models()
2025-09-23 15:11:22,250:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:11:22,250:INFO:Checking exceptions
2025-09-23 15:11:22,267:INFO:Preparing display monitor
2025-09-23 15:11:22,329:INFO:Initializing Logistic Regression
2025-09-23 15:11:22,330:INFO:Total runtime is 2.0658969879150392e-05 minutes
2025-09-23 15:11:22,340:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:22,340:INFO:Initializing create_model()
2025-09-23 15:11:22,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:22,342:INFO:Checking exceptions
2025-09-23 15:11:22,342:INFO:Importing libraries
2025-09-23 15:11:22,342:INFO:Copying training dataset
2025-09-23 15:11:22,363:INFO:Defining folds
2025-09-23 15:11:22,364:INFO:Declaring metric variables
2025-09-23 15:11:22,373:INFO:Importing untrained model
2025-09-23 15:11:22,380:INFO:Logistic Regression Imported successfully
2025-09-23 15:11:22,397:INFO:Starting cross validation
2025-09-23 15:11:22,442:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:31,659:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:11:31,669:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:11:31,681:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:11:31,683:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:11:31,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:31,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:31,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:11:31,798:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,798:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,802:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,807:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,807:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:31,813:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,819:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,820:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:31,824:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,826:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,834:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,838:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,932:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:31,937:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,942:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,946:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:31,966:INFO:Calculating mean and std
2025-09-23 15:11:31,968:INFO:Creating metrics dataframe
2025-09-23 15:11:31,971:INFO:Uploading results into container
2025-09-23 15:11:31,972:INFO:Uploading model into container now
2025-09-23 15:11:31,973:INFO:_master_model_container: 1
2025-09-23 15:11:31,973:INFO:_display_container: 2
2025-09-23 15:11:31,974:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:11:31,974:INFO:create_model() successfully completed......................................
2025-09-23 15:11:32,151:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:32,151:INFO:Creating metrics dataframe
2025-09-23 15:11:32,160:INFO:Initializing K Neighbors Classifier
2025-09-23 15:11:32,160:INFO:Total runtime is 0.16385438442230224 minutes
2025-09-23 15:11:32,166:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:32,167:INFO:Initializing create_model()
2025-09-23 15:11:32,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:32,167:INFO:Checking exceptions
2025-09-23 15:11:32,167:INFO:Importing libraries
2025-09-23 15:11:32,167:INFO:Copying training dataset
2025-09-23 15:11:32,177:INFO:Defining folds
2025-09-23 15:11:32,177:INFO:Declaring metric variables
2025-09-23 15:11:32,185:INFO:Importing untrained model
2025-09-23 15:11:32,193:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:11:32,226:INFO:Starting cross validation
2025-09-23 15:11:32,233:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:40,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,048:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,049:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,053:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,056:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,057:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,072:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,079:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,087:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,109:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,120:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,122:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,126:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:40,142:INFO:Calculating mean and std
2025-09-23 15:11:40,145:INFO:Creating metrics dataframe
2025-09-23 15:11:40,150:INFO:Uploading results into container
2025-09-23 15:11:40,151:INFO:Uploading model into container now
2025-09-23 15:11:40,152:INFO:_master_model_container: 2
2025-09-23 15:11:40,152:INFO:_display_container: 2
2025-09-23 15:11:40,153:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 15:11:40,153:INFO:create_model() successfully completed......................................
2025-09-23 15:11:40,361:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:40,361:INFO:Creating metrics dataframe
2025-09-23 15:11:40,371:INFO:Initializing Naive Bayes
2025-09-23 15:11:40,371:INFO:Total runtime is 0.3007146040598552 minutes
2025-09-23 15:11:40,377:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:40,378:INFO:Initializing create_model()
2025-09-23 15:11:40,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:40,378:INFO:Checking exceptions
2025-09-23 15:11:40,378:INFO:Importing libraries
2025-09-23 15:11:40,378:INFO:Copying training dataset
2025-09-23 15:11:40,388:INFO:Defining folds
2025-09-23 15:11:40,388:INFO:Declaring metric variables
2025-09-23 15:11:40,395:INFO:Importing untrained model
2025-09-23 15:11:40,402:INFO:Naive Bayes Imported successfully
2025-09-23 15:11:40,413:INFO:Starting cross validation
2025-09-23 15:11:40,420:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:48,136:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,141:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,148:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,201:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,207:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,212:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,247:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,253:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,258:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,270:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,275:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,279:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,343:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,349:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,353:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:48,378:INFO:Calculating mean and std
2025-09-23 15:11:48,380:INFO:Creating metrics dataframe
2025-09-23 15:11:48,384:INFO:Uploading results into container
2025-09-23 15:11:48,384:INFO:Uploading model into container now
2025-09-23 15:11:48,385:INFO:_master_model_container: 3
2025-09-23 15:11:48,385:INFO:_display_container: 2
2025-09-23 15:11:48,386:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 15:11:48,386:INFO:create_model() successfully completed......................................
2025-09-23 15:11:48,586:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:48,587:INFO:Creating metrics dataframe
2025-09-23 15:11:48,600:INFO:Initializing Decision Tree Classifier
2025-09-23 15:11:48,601:INFO:Total runtime is 0.43787803649902346 minutes
2025-09-23 15:11:48,607:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:48,607:INFO:Initializing create_model()
2025-09-23 15:11:48,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:48,608:INFO:Checking exceptions
2025-09-23 15:11:48,608:INFO:Importing libraries
2025-09-23 15:11:48,608:INFO:Copying training dataset
2025-09-23 15:11:48,621:INFO:Defining folds
2025-09-23 15:11:48,621:INFO:Declaring metric variables
2025-09-23 15:11:48,629:INFO:Importing untrained model
2025-09-23 15:11:48,636:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:11:48,650:INFO:Starting cross validation
2025-09-23 15:11:48,657:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:49,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,139:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,144:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,149:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,149:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,164:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,170:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,174:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,175:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,179:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:49,184:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:55,736:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:55,741:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:55,746:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:55,759:INFO:Calculating mean and std
2025-09-23 15:11:55,761:INFO:Creating metrics dataframe
2025-09-23 15:11:55,765:INFO:Uploading results into container
2025-09-23 15:11:55,767:INFO:Uploading model into container now
2025-09-23 15:11:55,768:INFO:_master_model_container: 4
2025-09-23 15:11:55,768:INFO:_display_container: 2
2025-09-23 15:11:55,769:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:11:55,770:INFO:create_model() successfully completed......................................
2025-09-23 15:11:55,978:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:55,979:INFO:Creating metrics dataframe
2025-09-23 15:11:55,993:INFO:Initializing SVM - Linear Kernel
2025-09-23 15:11:55,993:INFO:Total runtime is 0.5610671758651734 minutes
2025-09-23 15:11:56,001:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:56,001:INFO:Initializing create_model()
2025-09-23 15:11:56,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:56,002:INFO:Checking exceptions
2025-09-23 15:11:56,002:INFO:Importing libraries
2025-09-23 15:11:56,002:INFO:Copying training dataset
2025-09-23 15:11:56,018:INFO:Defining folds
2025-09-23 15:11:56,018:INFO:Declaring metric variables
2025-09-23 15:11:56,028:INFO:Importing untrained model
2025-09-23 15:11:56,037:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 15:11:56,054:INFO:Starting cross validation
2025-09-23 15:11:56,059:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:56,497:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:56,500:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,503:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:56,505:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,507:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,510:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,513:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,519:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:56,520:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,521:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,526:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,529:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:56,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,531:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,534:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:56,537:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,538:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,541:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,545:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:56,567:INFO:Calculating mean and std
2025-09-23 15:11:56,569:INFO:Creating metrics dataframe
2025-09-23 15:11:56,572:INFO:Uploading results into container
2025-09-23 15:11:56,573:INFO:Uploading model into container now
2025-09-23 15:11:56,574:INFO:_master_model_container: 5
2025-09-23 15:11:56,574:INFO:_display_container: 2
2025-09-23 15:11:56,575:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 15:11:56,575:INFO:create_model() successfully completed......................................
2025-09-23 15:11:56,757:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:56,758:INFO:Creating metrics dataframe
2025-09-23 15:11:56,768:INFO:Initializing Ridge Classifier
2025-09-23 15:11:56,768:INFO:Total runtime is 0.5739933570226035 minutes
2025-09-23 15:11:56,774:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:56,774:INFO:Initializing create_model()
2025-09-23 15:11:56,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:56,775:INFO:Checking exceptions
2025-09-23 15:11:56,775:INFO:Importing libraries
2025-09-23 15:11:56,775:INFO:Copying training dataset
2025-09-23 15:11:56,789:INFO:Defining folds
2025-09-23 15:11:56,790:INFO:Declaring metric variables
2025-09-23 15:11:56,795:INFO:Importing untrained model
2025-09-23 15:11:56,804:INFO:Ridge Classifier Imported successfully
2025-09-23 15:11:56,818:INFO:Starting cross validation
2025-09-23 15:11:56,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:57,271:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:57,274:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,282:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,288:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:57,289:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,291:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,297:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,299:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:57,300:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:57,303:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,303:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,304:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,308:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,308:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,311:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,312:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,315:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:57,318:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,323:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,326:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:57,345:INFO:Calculating mean and std
2025-09-23 15:11:57,348:INFO:Creating metrics dataframe
2025-09-23 15:11:57,352:INFO:Uploading results into container
2025-09-23 15:11:57,353:INFO:Uploading model into container now
2025-09-23 15:11:57,354:INFO:_master_model_container: 6
2025-09-23 15:11:57,354:INFO:_display_container: 2
2025-09-23 15:11:57,355:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 15:11:57,355:INFO:create_model() successfully completed......................................
2025-09-23 15:11:57,546:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:57,546:INFO:Creating metrics dataframe
2025-09-23 15:11:57,558:INFO:Initializing Random Forest Classifier
2025-09-23 15:11:57,558:INFO:Total runtime is 0.5871504942576091 minutes
2025-09-23 15:11:57,566:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:57,566:INFO:Initializing create_model()
2025-09-23 15:11:57,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:57,566:INFO:Checking exceptions
2025-09-23 15:11:57,566:INFO:Importing libraries
2025-09-23 15:11:57,566:INFO:Copying training dataset
2025-09-23 15:11:57,578:INFO:Defining folds
2025-09-23 15:11:57,578:INFO:Declaring metric variables
2025-09-23 15:11:57,585:INFO:Importing untrained model
2025-09-23 15:11:57,597:INFO:Random Forest Classifier Imported successfully
2025-09-23 15:11:57,617:INFO:Starting cross validation
2025-09-23 15:11:57,622:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:58,440:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,442:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,447:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,448:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,453:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,453:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,468:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,473:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,482:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,487:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,491:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,497:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,502:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,506:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:58,517:INFO:Calculating mean and std
2025-09-23 15:11:58,519:INFO:Creating metrics dataframe
2025-09-23 15:11:58,522:INFO:Uploading results into container
2025-09-23 15:11:58,523:INFO:Uploading model into container now
2025-09-23 15:11:58,524:INFO:_master_model_container: 7
2025-09-23 15:11:58,524:INFO:_display_container: 2
2025-09-23 15:11:58,525:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 15:11:58,525:INFO:create_model() successfully completed......................................
2025-09-23 15:11:58,699:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:58,699:INFO:Creating metrics dataframe
2025-09-23 15:11:58,710:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 15:11:58,711:INFO:Total runtime is 0.6063745856285095 minutes
2025-09-23 15:11:58,717:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:58,717:INFO:Initializing create_model()
2025-09-23 15:11:58,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:58,717:INFO:Checking exceptions
2025-09-23 15:11:58,717:INFO:Importing libraries
2025-09-23 15:11:58,718:INFO:Copying training dataset
2025-09-23 15:11:58,728:INFO:Defining folds
2025-09-23 15:11:58,729:INFO:Declaring metric variables
2025-09-23 15:11:58,737:INFO:Importing untrained model
2025-09-23 15:11:58,744:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 15:11:58,758:INFO:Starting cross validation
2025-09-23 15:11:58,763:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:59,089:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:11:59,089:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:11:59,089:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:11:59,093:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:11:59,111:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:11:59,208:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:59,210:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,211:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:59,214:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,217:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:59,217:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,221:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:59,221:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,224:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,225:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,225:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,228:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,237:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,240:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,240:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:11:59,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,246:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,252:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:11:59,264:INFO:Calculating mean and std
2025-09-23 15:11:59,266:INFO:Creating metrics dataframe
2025-09-23 15:11:59,270:INFO:Uploading results into container
2025-09-23 15:11:59,271:INFO:Uploading model into container now
2025-09-23 15:11:59,272:INFO:_master_model_container: 8
2025-09-23 15:11:59,274:INFO:_display_container: 2
2025-09-23 15:11:59,274:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 15:11:59,274:INFO:create_model() successfully completed......................................
2025-09-23 15:11:59,439:INFO:SubProcess create_model() end ==================================
2025-09-23 15:11:59,440:INFO:Creating metrics dataframe
2025-09-23 15:11:59,452:INFO:Initializing Ada Boost Classifier
2025-09-23 15:11:59,452:INFO:Total runtime is 0.6187310775121053 minutes
2025-09-23 15:11:59,457:INFO:SubProcess create_model() called ==================================
2025-09-23 15:11:59,459:INFO:Initializing create_model()
2025-09-23 15:11:59,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:11:59,459:INFO:Checking exceptions
2025-09-23 15:11:59,459:INFO:Importing libraries
2025-09-23 15:11:59,459:INFO:Copying training dataset
2025-09-23 15:11:59,477:INFO:Defining folds
2025-09-23 15:11:59,478:INFO:Declaring metric variables
2025-09-23 15:11:59,488:INFO:Importing untrained model
2025-09-23 15:11:59,494:INFO:Ada Boost Classifier Imported successfully
2025-09-23 15:11:59,506:INFO:Starting cross validation
2025-09-23 15:11:59,514:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:11:59,823:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:11:59,827:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:11:59,829:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:11:59,839:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:11:59,857:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:12:00,124:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:00,124:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:00,124:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,124:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:00,134:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,134:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:00,136:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,147:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,152:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:00,162:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,167:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,167:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:00,180:INFO:Calculating mean and std
2025-09-23 15:12:00,182:INFO:Creating metrics dataframe
2025-09-23 15:12:00,185:INFO:Uploading results into container
2025-09-23 15:12:00,186:INFO:Uploading model into container now
2025-09-23 15:12:00,186:INFO:_master_model_container: 9
2025-09-23 15:12:00,186:INFO:_display_container: 2
2025-09-23 15:12:00,186:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 15:12:00,188:INFO:create_model() successfully completed......................................
2025-09-23 15:12:00,373:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:00,373:INFO:Creating metrics dataframe
2025-09-23 15:12:00,389:INFO:Initializing Gradient Boosting Classifier
2025-09-23 15:12:00,391:INFO:Total runtime is 0.6343708078066508 minutes
2025-09-23 15:12:00,393:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:00,398:INFO:Initializing create_model()
2025-09-23 15:12:00,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:00,398:INFO:Checking exceptions
2025-09-23 15:12:00,399:INFO:Importing libraries
2025-09-23 15:12:00,399:INFO:Copying training dataset
2025-09-23 15:12:00,408:INFO:Defining folds
2025-09-23 15:12:00,408:INFO:Declaring metric variables
2025-09-23 15:12:00,421:INFO:Importing untrained model
2025-09-23 15:12:00,429:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 15:12:00,466:INFO:Starting cross validation
2025-09-23 15:12:00,472:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:01,758:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:01,758:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,775:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,780:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:01,783:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,794:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:01,796:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,799:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,800:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,800:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:01,807:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,808:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,810:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:01,811:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,814:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,817:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,818:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,822:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:01,838:INFO:Calculating mean and std
2025-09-23 15:12:01,840:INFO:Creating metrics dataframe
2025-09-23 15:12:01,842:INFO:Uploading results into container
2025-09-23 15:12:01,843:INFO:Uploading model into container now
2025-09-23 15:12:01,845:INFO:_master_model_container: 10
2025-09-23 15:12:01,845:INFO:_display_container: 2
2025-09-23 15:12:01,847:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 15:12:01,847:INFO:create_model() successfully completed......................................
2025-09-23 15:12:02,023:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:02,023:INFO:Creating metrics dataframe
2025-09-23 15:12:02,036:INFO:Initializing Linear Discriminant Analysis
2025-09-23 15:12:02,036:INFO:Total runtime is 0.6617914875348408 minutes
2025-09-23 15:12:02,042:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:02,043:INFO:Initializing create_model()
2025-09-23 15:12:02,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:02,043:INFO:Checking exceptions
2025-09-23 15:12:02,043:INFO:Importing libraries
2025-09-23 15:12:02,044:INFO:Copying training dataset
2025-09-23 15:12:02,055:INFO:Defining folds
2025-09-23 15:12:02,055:INFO:Declaring metric variables
2025-09-23 15:12:02,063:INFO:Importing untrained model
2025-09-23 15:12:02,072:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 15:12:02,082:INFO:Starting cross validation
2025-09-23 15:12:02,091:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:02,522:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:02,524:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,529:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,535:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,550:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:02,552:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:02,553:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,554:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,557:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,560:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,563:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,564:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,567:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:02,569:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,573:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:12:02,574:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,575:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,578:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,580:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,584:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:02,591:INFO:Calculating mean and std
2025-09-23 15:12:02,595:INFO:Creating metrics dataframe
2025-09-23 15:12:02,599:INFO:Uploading results into container
2025-09-23 15:12:02,600:INFO:Uploading model into container now
2025-09-23 15:12:02,601:INFO:_master_model_container: 11
2025-09-23 15:12:02,602:INFO:_display_container: 2
2025-09-23 15:12:02,602:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 15:12:02,603:INFO:create_model() successfully completed......................................
2025-09-23 15:12:02,783:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:02,783:INFO:Creating metrics dataframe
2025-09-23 15:12:02,796:INFO:Initializing Extra Trees Classifier
2025-09-23 15:12:02,796:INFO:Total runtime is 0.6744646588961283 minutes
2025-09-23 15:12:02,802:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:02,803:INFO:Initializing create_model()
2025-09-23 15:12:02,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:02,803:INFO:Checking exceptions
2025-09-23 15:12:02,803:INFO:Importing libraries
2025-09-23 15:12:02,803:INFO:Copying training dataset
2025-09-23 15:12:02,818:INFO:Defining folds
2025-09-23 15:12:02,818:INFO:Declaring metric variables
2025-09-23 15:12:02,825:INFO:Importing untrained model
2025-09-23 15:12:02,830:INFO:Extra Trees Classifier Imported successfully
2025-09-23 15:12:02,842:INFO:Starting cross validation
2025-09-23 15:12:02,846:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:03,508:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,512:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,519:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,522:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,528:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,532:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,552:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,553:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,558:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,560:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,563:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,566:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,568:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,573:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,578:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:03,589:INFO:Calculating mean and std
2025-09-23 15:12:03,591:INFO:Creating metrics dataframe
2025-09-23 15:12:03,593:INFO:Uploading results into container
2025-09-23 15:12:03,594:INFO:Uploading model into container now
2025-09-23 15:12:03,595:INFO:_master_model_container: 12
2025-09-23 15:12:03,595:INFO:_display_container: 2
2025-09-23 15:12:03,596:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 15:12:03,597:INFO:create_model() successfully completed......................................
2025-09-23 15:12:03,777:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:03,777:INFO:Creating metrics dataframe
2025-09-23 15:12:03,792:INFO:Initializing Extreme Gradient Boosting
2025-09-23 15:12:03,792:INFO:Total runtime is 0.6910556674003601 minutes
2025-09-23 15:12:03,796:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:03,796:INFO:Initializing create_model()
2025-09-23 15:12:03,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:03,796:INFO:Checking exceptions
2025-09-23 15:12:03,796:INFO:Importing libraries
2025-09-23 15:12:03,796:INFO:Copying training dataset
2025-09-23 15:12:03,809:INFO:Defining folds
2025-09-23 15:12:03,810:INFO:Declaring metric variables
2025-09-23 15:12:03,817:INFO:Importing untrained model
2025-09-23 15:12:03,835:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:12:03,855:INFO:Starting cross validation
2025-09-23 15:12:03,859:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:04,464:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,469:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,471:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,472:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,475:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,488:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,490:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,492:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,497:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:04,511:INFO:Calculating mean and std
2025-09-23 15:12:04,513:INFO:Creating metrics dataframe
2025-09-23 15:12:04,515:INFO:Uploading results into container
2025-09-23 15:12:04,515:INFO:Uploading model into container now
2025-09-23 15:12:04,516:INFO:_master_model_container: 13
2025-09-23 15:12:04,516:INFO:_display_container: 2
2025-09-23 15:12:04,518:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:12:04,519:INFO:create_model() successfully completed......................................
2025-09-23 15:12:04,689:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:04,689:INFO:Creating metrics dataframe
2025-09-23 15:12:04,703:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 15:12:04,704:INFO:Total runtime is 0.7062632083892821 minutes
2025-09-23 15:12:04,708:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:04,709:INFO:Initializing create_model()
2025-09-23 15:12:04,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:04,710:INFO:Checking exceptions
2025-09-23 15:12:04,710:INFO:Importing libraries
2025-09-23 15:12:04,710:INFO:Copying training dataset
2025-09-23 15:12:04,723:INFO:Defining folds
2025-09-23 15:12:04,724:INFO:Declaring metric variables
2025-09-23 15:12:04,735:INFO:Importing untrained model
2025-09-23 15:12:04,743:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 15:12:04,758:INFO:Starting cross validation
2025-09-23 15:12:04,763:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:05,938:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,942:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,950:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,951:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,954:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,957:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,983:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,989:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:05,995:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:06,000:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:06,006:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:06,011:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:06,031:INFO:Calculating mean and std
2025-09-23 15:12:06,034:INFO:Creating metrics dataframe
2025-09-23 15:12:06,038:INFO:Uploading results into container
2025-09-23 15:12:06,039:INFO:Uploading model into container now
2025-09-23 15:12:06,039:INFO:_master_model_container: 14
2025-09-23 15:12:06,040:INFO:_display_container: 2
2025-09-23 15:12:06,041:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 15:12:06,041:INFO:create_model() successfully completed......................................
2025-09-23 15:12:06,236:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:06,236:INFO:Creating metrics dataframe
2025-09-23 15:12:06,251:INFO:Initializing CatBoost Classifier
2025-09-23 15:12:06,251:INFO:Total runtime is 0.732047136624654 minutes
2025-09-23 15:12:06,257:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:06,258:INFO:Initializing create_model()
2025-09-23 15:12:06,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:06,259:INFO:Checking exceptions
2025-09-23 15:12:06,259:INFO:Importing libraries
2025-09-23 15:12:06,259:INFO:Copying training dataset
2025-09-23 15:12:06,273:INFO:Defining folds
2025-09-23 15:12:06,274:INFO:Declaring metric variables
2025-09-23 15:12:06,284:INFO:Importing untrained model
2025-09-23 15:12:06,290:INFO:CatBoost Classifier Imported successfully
2025-09-23 15:12:06,302:INFO:Starting cross validation
2025-09-23 15:12:06,310:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:12,981:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:12,989:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:12,993:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,034:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,040:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,044:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,061:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 5.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\catboost\core.py", line 2410, in _fit
    self._train(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\catboost\core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5023, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5072, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info


2025-09-23 15:12:13,062:INFO:Calculating mean and std
2025-09-23 15:12:13,064:INFO:Creating metrics dataframe
2025-09-23 15:12:13,068:INFO:Uploading results into container
2025-09-23 15:12:13,070:INFO:Uploading model into container now
2025-09-23 15:12:13,071:INFO:_master_model_container: 15
2025-09-23 15:12:13,072:INFO:_display_container: 2
2025-09-23 15:12:13,072:INFO:<catboost.core.CatBoostClassifier object at 0x00000256819FC400>
2025-09-23 15:12:13,072:INFO:create_model() successfully completed......................................
2025-09-23 15:12:13,277:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:13,277:INFO:Creating metrics dataframe
2025-09-23 15:12:13,292:INFO:Initializing Dummy Classifier
2025-09-23 15:12:13,293:INFO:Total runtime is 0.8494031826655069 minutes
2025-09-23 15:12:13,297:INFO:SubProcess create_model() called ==================================
2025-09-23 15:12:13,298:INFO:Initializing create_model()
2025-09-23 15:12:13,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025681E9BBE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:13,299:INFO:Checking exceptions
2025-09-23 15:12:13,299:INFO:Importing libraries
2025-09-23 15:12:13,299:INFO:Copying training dataset
2025-09-23 15:12:13,310:INFO:Defining folds
2025-09-23 15:12:13,310:INFO:Declaring metric variables
2025-09-23 15:12:13,318:INFO:Importing untrained model
2025-09-23 15:12:13,325:INFO:Dummy Classifier Imported successfully
2025-09-23 15:12:13,334:INFO:Starting cross validation
2025-09-23 15:12:13,340:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:12:13,643:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,648:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,651:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:12:13,654:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,673:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,678:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,680:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:12:13,682:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,687:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,692:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,693:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:12:13,696:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,706:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,707:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,710:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,712:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:12:13,712:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:12:13,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:12:13,731:INFO:Calculating mean and std
2025-09-23 15:12:13,733:INFO:Creating metrics dataframe
2025-09-23 15:12:13,735:INFO:Uploading results into container
2025-09-23 15:12:13,736:INFO:Uploading model into container now
2025-09-23 15:12:13,737:INFO:_master_model_container: 16
2025-09-23 15:12:13,737:INFO:_display_container: 2
2025-09-23 15:12:13,737:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 15:12:13,737:INFO:create_model() successfully completed......................................
2025-09-23 15:12:13,906:INFO:SubProcess create_model() end ==================================
2025-09-23 15:12:13,906:INFO:Creating metrics dataframe
2025-09-23 15:12:13,924:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-23 15:12:13,941:INFO:Initializing create_model()
2025-09-23 15:12:13,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:12:13,941:INFO:Checking exceptions
2025-09-23 15:12:13,944:INFO:Importing libraries
2025-09-23 15:12:13,944:INFO:Copying training dataset
2025-09-23 15:12:13,960:INFO:Defining folds
2025-09-23 15:12:13,960:INFO:Declaring metric variables
2025-09-23 15:12:13,960:INFO:Importing untrained model
2025-09-23 15:12:13,960:INFO:Declaring custom model
2025-09-23 15:12:13,962:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:12:13,966:INFO:Cross validation set to False
2025-09-23 15:12:13,966:INFO:Fitting Model
2025-09-23 15:12:14,297:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:12:14,297:INFO:create_model() successfully completed......................................
2025-09-23 15:12:14,524:INFO:_master_model_container: 16
2025-09-23 15:12:14,524:INFO:_display_container: 2
2025-09-23 15:12:14,525:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:12:14,526:INFO:compare_models() successfully completed......................................
2025-09-23 15:12:14,527:INFO:Initializing plot_model()
2025-09-23 15:12:14,527:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, system=True)
2025-09-23 15:12:14,527:INFO:Checking exceptions
2025-09-23 15:12:14,536:INFO:Preloading libraries
2025-09-23 15:12:14,550:INFO:Copying training dataset
2025-09-23 15:12:14,550:INFO:Plot type: confusion_matrix
2025-09-23 15:12:14,778:INFO:Fitting Model
2025-09-23 15:12:14,779:INFO:Scoring test/hold-out set
2025-09-23 15:12:14,993:INFO:Visual Rendered Successfully
2025-09-23 15:12:15,181:INFO:plot_model() successfully completed......................................
2025-09-23 15:12:15,184:INFO:Initializing plot_model()
2025-09-23 15:12:15,184:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, system=True)
2025-09-23 15:12:15,184:INFO:Checking exceptions
2025-09-23 15:12:15,191:INFO:Preloading libraries
2025-09-23 15:12:15,201:INFO:Copying training dataset
2025-09-23 15:12:15,201:INFO:Plot type: feature
2025-09-23 15:12:15,202:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 15:12:15,475:INFO:Visual Rendered Successfully
2025-09-23 15:12:15,640:INFO:plot_model() successfully completed......................................
2025-09-23 15:12:15,642:INFO:Initializing predict_model()
2025-09-23 15:12:15,642:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256D0FF7C10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025681837490>)
2025-09-23 15:12:15,642:INFO:Checking exceptions
2025-09-23 15:12:15,642:INFO:Preloading libraries
2025-09-23 15:12:15,848:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 15:12:15,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 15:12:15,858:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 15:26:04,224:INFO:PyCaret ClassificationExperiment
2025-09-23 15:26:04,224:INFO:Logging name: clf-default-name
2025-09-23 15:26:04,224:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:26:04,224:INFO:version 3.3.2
2025-09-23 15:26:04,224:INFO:Initializing setup()
2025-09-23 15:26:04,224:INFO:self.USI: 41b9
2025-09-23 15:26:04,224:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'X_train', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_id', 'fix_imbalance', 'pipeline', 'memory', 'X', 'USI', 'idx', 'logging_param', 'y', 'html_param', 'fold_shuffle_param', 'data', '_ml_usecase', 'seed', 'fold_generator', 'gpu_param', 'y_test', 'X_test', 'target_param', '_available_plots', 'is_multiclass'}
2025-09-23 15:26:04,224:INFO:Checking environment
2025-09-23 15:26:04,224:INFO:python_version: 3.10.18
2025-09-23 15:26:04,224:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:26:04,224:INFO:machine: AMD64
2025-09-23 15:26:04,224:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:26:04,225:INFO:Memory: svmem(total=16486035456, available=7387385856, percent=55.2, used=9098649600, free=7387385856)
2025-09-23 15:26:04,225:INFO:Physical Core: 8
2025-09-23 15:26:04,225:INFO:Logical Core: 16
2025-09-23 15:26:04,225:INFO:Checking libraries
2025-09-23 15:26:04,225:INFO:System:
2025-09-23 15:26:04,225:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:26:04,225:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:26:04,225:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:26:04,225:INFO:PyCaret required dependencies:
2025-09-23 15:26:04,225:INFO:                 pip: 25.2
2025-09-23 15:26:04,225:INFO:          setuptools: 78.1.1
2025-09-23 15:26:04,225:INFO:             pycaret: 3.3.2
2025-09-23 15:26:04,225:INFO:             IPython: 8.37.0
2025-09-23 15:26:04,225:INFO:          ipywidgets: 8.1.7
2025-09-23 15:26:04,225:INFO:                tqdm: 4.67.1
2025-09-23 15:26:04,225:INFO:               numpy: 1.26.4
2025-09-23 15:26:04,225:INFO:              pandas: 2.1.4
2025-09-23 15:26:04,225:INFO:              jinja2: 3.1.6
2025-09-23 15:26:04,225:INFO:               scipy: 1.11.4
2025-09-23 15:26:04,225:INFO:              joblib: 1.3.2
2025-09-23 15:26:04,225:INFO:             sklearn: 1.4.2
2025-09-23 15:26:04,225:INFO:                pyod: 2.0.5
2025-09-23 15:26:04,225:INFO:            imblearn: 0.14.0
2025-09-23 15:26:04,225:INFO:   category_encoders: 2.7.0
2025-09-23 15:26:04,225:INFO:            lightgbm: 4.6.0
2025-09-23 15:26:04,225:INFO:               numba: 0.61.0
2025-09-23 15:26:04,225:INFO:            requests: 2.32.5
2025-09-23 15:26:04,225:INFO:          matplotlib: 3.7.5
2025-09-23 15:26:04,225:INFO:          scikitplot: 0.3.7
2025-09-23 15:26:04,225:INFO:         yellowbrick: 1.5
2025-09-23 15:26:04,225:INFO:              plotly: 5.24.1
2025-09-23 15:26:04,225:INFO:    plotly-resampler: Not installed
2025-09-23 15:26:04,225:INFO:             kaleido: 1.1.0
2025-09-23 15:26:04,225:INFO:           schemdraw: 0.15
2025-09-23 15:26:04,225:INFO:         statsmodels: 0.14.5
2025-09-23 15:26:04,225:INFO:              sktime: 0.26.0
2025-09-23 15:26:04,225:INFO:               tbats: 1.1.3
2025-09-23 15:26:04,225:INFO:            pmdarima: 2.0.4
2025-09-23 15:26:04,225:INFO:              psutil: 7.1.0
2025-09-23 15:26:04,225:INFO:          markupsafe: 3.0.2
2025-09-23 15:26:04,225:INFO:             pickle5: Not installed
2025-09-23 15:26:04,225:INFO:         cloudpickle: 3.1.1
2025-09-23 15:26:04,225:INFO:         deprecation: 2.1.0
2025-09-23 15:26:04,225:INFO:              xxhash: 3.5.0
2025-09-23 15:26:04,225:INFO:           wurlitzer: Not installed
2025-09-23 15:26:04,225:INFO:PyCaret optional dependencies:
2025-09-23 15:26:04,225:INFO:                shap: 0.44.1
2025-09-23 15:26:04,225:INFO:           interpret: 0.7.2
2025-09-23 15:26:04,225:INFO:                umap: 0.5.7
2025-09-23 15:26:04,225:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:26:04,225:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:26:04,225:INFO:             autoviz: Not installed
2025-09-23 15:26:04,225:INFO:           fairlearn: 0.7.0
2025-09-23 15:26:04,225:INFO:          deepchecks: Not installed
2025-09-23 15:26:04,225:INFO:             xgboost: 3.0.5
2025-09-23 15:26:04,225:INFO:            catboost: 1.2.8
2025-09-23 15:26:04,225:INFO:              kmodes: 0.12.2
2025-09-23 15:26:04,225:INFO:             mlxtend: 0.23.4
2025-09-23 15:26:04,225:INFO:       statsforecast: 1.5.0
2025-09-23 15:26:04,225:INFO:        tune_sklearn: Not installed
2025-09-23 15:26:04,225:INFO:                 ray: Not installed
2025-09-23 15:26:04,225:INFO:            hyperopt: 0.2.7
2025-09-23 15:26:04,225:INFO:              optuna: 4.5.0
2025-09-23 15:26:04,225:INFO:               skopt: 0.10.2
2025-09-23 15:26:04,225:INFO:              mlflow: 3.4.0
2025-09-23 15:26:04,225:INFO:              gradio: 5.46.1
2025-09-23 15:26:04,225:INFO:             fastapi: 0.117.1
2025-09-23 15:26:04,225:INFO:             uvicorn: 0.36.0
2025-09-23 15:26:04,225:INFO:              m2cgen: 0.10.0
2025-09-23 15:26:04,225:INFO:           evidently: 0.4.40
2025-09-23 15:26:04,225:INFO:               fugue: 0.8.7
2025-09-23 15:26:04,225:INFO:           streamlit: Not installed
2025-09-23 15:26:04,225:INFO:             prophet: Not installed
2025-09-23 15:26:04,225:INFO:None
2025-09-23 15:26:04,225:INFO:Set up data.
2025-09-23 15:26:04,303:INFO:Set up folding strategy.
2025-09-23 15:26:04,303:INFO:Set up train/test split.
2025-09-23 15:26:04,373:INFO:Set up index.
2025-09-23 15:26:04,373:INFO:Assigning column types.
2025-09-23 15:26:04,401:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:26:04,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:26:04,474:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:26:04,514:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:04,516:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:04,581:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:26:04,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:26:04,616:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:04,616:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:04,616:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:26:04,691:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:26:04,738:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:04,738:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:04,804:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:26:04,833:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:04,847:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:04,849:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:26:04,947:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:04,949:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:05,048:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:05,052:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:05,053:INFO:Preparing preprocessing pipeline...
2025-09-23 15:26:05,059:INFO:Set up label encoding.
2025-09-23 15:26:05,059:INFO:Set up simple imputation.
2025-09-23 15:26:05,077:INFO:Set up encoding of ordinal features.
2025-09-23 15:26:05,086:INFO:Set up encoding of categorical features.
2025-09-23 15:26:05,091:INFO:Set up column name cleaning.
2025-09-23 15:26:06,311:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:26:06,338:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:26:06,339:INFO:Creating final display dataframe.
2025-09-23 15:26:07,628:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                  (50000, 35)
5        Transformed data shape                                  (50000, 62)
6   Transformed train set shape                                  (35000, 62)
7    Transformed test set shape                                  (15000, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         41b9
2025-09-23 15:26:07,726:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:07,730:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:07,834:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:26:07,837:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:26:07,839:INFO:setup() successfully completed in 3.62s...............
2025-09-23 15:26:07,840:INFO:Initializing compare_models()
2025-09-23 15:26:07,840:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:26:07,840:INFO:Checking exceptions
2025-09-23 15:26:07,861:INFO:Preparing display monitor
2025-09-23 15:26:07,902:INFO:Initializing Logistic Regression
2025-09-23 15:26:07,903:INFO:Total runtime is 1.8723805745442708e-05 minutes
2025-09-23 15:26:07,910:INFO:SubProcess create_model() called ==================================
2025-09-23 15:26:07,910:INFO:Initializing create_model()
2025-09-23 15:26:07,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:26:07,912:INFO:Checking exceptions
2025-09-23 15:26:07,912:INFO:Importing libraries
2025-09-23 15:26:07,912:INFO:Copying training dataset
2025-09-23 15:26:07,961:INFO:Defining folds
2025-09-23 15:26:07,961:INFO:Declaring metric variables
2025-09-23 15:26:07,969:INFO:Importing untrained model
2025-09-23 15:26:07,979:INFO:Logistic Regression Imported successfully
2025-09-23 15:26:07,993:INFO:Starting cross validation
2025-09-23 15:26:08,002:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:26:30,447:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:26:30,694:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:26:30,721:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:30,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:30,804:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:26:30,824:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:30,867:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:26:30,896:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:26:31,043:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:26:31,050:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:26:31,070:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,109:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:26:31,120:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:26:31,136:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,160:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,165:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,181:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,204:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,236:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,238:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:26:31,256:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,257:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,300:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,348:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:31,415:INFO:Calculating mean and std
2025-09-23 15:26:31,418:INFO:Creating metrics dataframe
2025-09-23 15:26:31,422:INFO:Uploading results into container
2025-09-23 15:26:31,423:INFO:Uploading model into container now
2025-09-23 15:26:31,424:INFO:_master_model_container: 1
2025-09-23 15:26:31,424:INFO:_display_container: 2
2025-09-23 15:26:31,425:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:26:31,426:INFO:create_model() successfully completed......................................
2025-09-23 15:26:31,609:INFO:SubProcess create_model() end ==================================
2025-09-23 15:26:31,609:INFO:Creating metrics dataframe
2025-09-23 15:26:31,617:INFO:Initializing K Neighbors Classifier
2025-09-23 15:26:31,618:INFO:Total runtime is 0.39525840679804486 minutes
2025-09-23 15:26:31,623:INFO:SubProcess create_model() called ==================================
2025-09-23 15:26:31,624:INFO:Initializing create_model()
2025-09-23 15:26:31,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:26:31,624:INFO:Checking exceptions
2025-09-23 15:26:31,624:INFO:Importing libraries
2025-09-23 15:26:31,624:INFO:Copying training dataset
2025-09-23 15:26:31,666:INFO:Defining folds
2025-09-23 15:26:31,666:INFO:Declaring metric variables
2025-09-23 15:26:31,673:INFO:Importing untrained model
2025-09-23 15:26:31,679:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:26:31,691:INFO:Starting cross validation
2025-09-23 15:26:31,695:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:26:44,333:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,388:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,450:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,484:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,526:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,545:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,572:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,602:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,627:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,651:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,659:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,698:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,704:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:44,771:INFO:Calculating mean and std
2025-09-23 15:26:44,774:INFO:Creating metrics dataframe
2025-09-23 15:26:44,778:INFO:Uploading results into container
2025-09-23 15:26:44,779:INFO:Uploading model into container now
2025-09-23 15:26:44,780:INFO:_master_model_container: 2
2025-09-23 15:26:44,780:INFO:_display_container: 2
2025-09-23 15:26:44,781:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 15:26:44,782:INFO:create_model() successfully completed......................................
2025-09-23 15:26:44,976:INFO:SubProcess create_model() end ==================================
2025-09-23 15:26:44,976:INFO:Creating metrics dataframe
2025-09-23 15:26:44,986:INFO:Initializing Naive Bayes
2025-09-23 15:26:44,986:INFO:Total runtime is 0.6180688738822937 minutes
2025-09-23 15:26:44,993:INFO:SubProcess create_model() called ==================================
2025-09-23 15:26:44,993:INFO:Initializing create_model()
2025-09-23 15:26:44,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:26:44,994:INFO:Checking exceptions
2025-09-23 15:26:44,994:INFO:Importing libraries
2025-09-23 15:26:44,994:INFO:Copying training dataset
2025-09-23 15:26:45,038:INFO:Defining folds
2025-09-23 15:26:45,039:INFO:Declaring metric variables
2025-09-23 15:26:45,046:INFO:Importing untrained model
2025-09-23 15:26:45,053:INFO:Naive Bayes Imported successfully
2025-09-23 15:26:45,064:INFO:Starting cross validation
2025-09-23 15:26:45,070:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:26:53,850:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,871:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,882:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,904:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,917:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,937:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,946:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,950:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,974:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:53,983:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:54,000:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:54,000:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:54,057:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:54,060:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:54,146:INFO:Calculating mean and std
2025-09-23 15:26:54,148:INFO:Creating metrics dataframe
2025-09-23 15:26:54,154:INFO:Uploading results into container
2025-09-23 15:26:54,155:INFO:Uploading model into container now
2025-09-23 15:26:54,156:INFO:_master_model_container: 3
2025-09-23 15:26:54,156:INFO:_display_container: 2
2025-09-23 15:26:54,156:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 15:26:54,156:INFO:create_model() successfully completed......................................
2025-09-23 15:26:54,350:INFO:SubProcess create_model() end ==================================
2025-09-23 15:26:54,350:INFO:Creating metrics dataframe
2025-09-23 15:26:54,360:INFO:Initializing Decision Tree Classifier
2025-09-23 15:26:54,360:INFO:Total runtime is 0.7743022680282593 minutes
2025-09-23 15:26:54,367:INFO:SubProcess create_model() called ==================================
2025-09-23 15:26:54,367:INFO:Initializing create_model()
2025-09-23 15:26:54,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:26:54,367:INFO:Checking exceptions
2025-09-23 15:26:54,367:INFO:Importing libraries
2025-09-23 15:26:54,367:INFO:Copying training dataset
2025-09-23 15:26:54,405:INFO:Defining folds
2025-09-23 15:26:54,405:INFO:Declaring metric variables
2025-09-23 15:26:54,416:INFO:Importing untrained model
2025-09-23 15:26:54,423:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:26:54,433:INFO:Starting cross validation
2025-09-23 15:26:54,440:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:26:55,842:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,893:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,905:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,945:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,968:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:55,991:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:56,001:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:56,028:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:56,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:26:56,060:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:01,907:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:01,950:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:01,995:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:02,061:INFO:Calculating mean and std
2025-09-23 15:27:02,063:INFO:Creating metrics dataframe
2025-09-23 15:27:02,069:INFO:Uploading results into container
2025-09-23 15:27:02,071:INFO:Uploading model into container now
2025-09-23 15:27:02,072:INFO:_master_model_container: 4
2025-09-23 15:27:02,072:INFO:_display_container: 2
2025-09-23 15:27:02,074:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:27:02,075:INFO:create_model() successfully completed......................................
2025-09-23 15:27:02,259:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:02,259:INFO:Creating metrics dataframe
2025-09-23 15:27:02,271:INFO:Initializing SVM - Linear Kernel
2025-09-23 15:27:02,271:INFO:Total runtime is 0.906138288974762 minutes
2025-09-23 15:27:02,276:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:02,276:INFO:Initializing create_model()
2025-09-23 15:27:02,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:02,277:INFO:Checking exceptions
2025-09-23 15:27:02,277:INFO:Importing libraries
2025-09-23 15:27:02,277:INFO:Copying training dataset
2025-09-23 15:27:02,319:INFO:Defining folds
2025-09-23 15:27:02,320:INFO:Declaring metric variables
2025-09-23 15:27:02,327:INFO:Importing untrained model
2025-09-23 15:27:02,334:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 15:27:02,345:INFO:Starting cross validation
2025-09-23 15:27:02,350:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:06,219:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:06,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:06,297:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:06,347:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,070:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:07,089:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,186:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,320:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:07,332:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,377:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:07,382:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,398:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,429:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,444:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,490:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,517:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:07,534:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,585:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,628:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:07,698:INFO:Calculating mean and std
2025-09-23 15:27:07,699:INFO:Creating metrics dataframe
2025-09-23 15:27:07,704:INFO:Uploading results into container
2025-09-23 15:27:07,705:INFO:Uploading model into container now
2025-09-23 15:27:07,707:INFO:_master_model_container: 5
2025-09-23 15:27:07,707:INFO:_display_container: 2
2025-09-23 15:27:07,708:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 15:27:07,708:INFO:create_model() successfully completed......................................
2025-09-23 15:27:07,877:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:07,877:INFO:Creating metrics dataframe
2025-09-23 15:27:07,888:INFO:Initializing Ridge Classifier
2025-09-23 15:27:07,888:INFO:Total runtime is 0.9997574925422669 minutes
2025-09-23 15:27:07,891:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:07,891:INFO:Initializing create_model()
2025-09-23 15:27:07,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:07,891:INFO:Checking exceptions
2025-09-23 15:27:07,891:INFO:Importing libraries
2025-09-23 15:27:07,891:INFO:Copying training dataset
2025-09-23 15:27:07,932:INFO:Defining folds
2025-09-23 15:27:07,932:INFO:Declaring metric variables
2025-09-23 15:27:07,940:INFO:Importing untrained model
2025-09-23 15:27:07,944:INFO:Ridge Classifier Imported successfully
2025-09-23 15:27:07,959:INFO:Starting cross validation
2025-09-23 15:27:07,964:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:09,465:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:09,487:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,496:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:09,496:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:09,500:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:09,503:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:09,513:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,514:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,517:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,561:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,564:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,565:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,568:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,590:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,605:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,627:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:09,699:INFO:Calculating mean and std
2025-09-23 15:27:09,702:INFO:Creating metrics dataframe
2025-09-23 15:27:09,703:INFO:Uploading results into container
2025-09-23 15:27:09,704:INFO:Uploading model into container now
2025-09-23 15:27:09,705:INFO:_master_model_container: 6
2025-09-23 15:27:09,705:INFO:_display_container: 2
2025-09-23 15:27:09,706:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 15:27:09,706:INFO:create_model() successfully completed......................................
2025-09-23 15:27:09,876:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:09,878:INFO:Creating metrics dataframe
2025-09-23 15:27:09,889:INFO:Initializing Random Forest Classifier
2025-09-23 15:27:09,889:INFO:Total runtime is 1.0331188360850017 minutes
2025-09-23 15:27:09,896:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:09,897:INFO:Initializing create_model()
2025-09-23 15:27:09,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:09,897:INFO:Checking exceptions
2025-09-23 15:27:09,897:INFO:Importing libraries
2025-09-23 15:27:09,897:INFO:Copying training dataset
2025-09-23 15:27:09,938:INFO:Defining folds
2025-09-23 15:27:09,939:INFO:Declaring metric variables
2025-09-23 15:27:09,945:INFO:Importing untrained model
2025-09-23 15:27:09,952:INFO:Random Forest Classifier Imported successfully
2025-09-23 15:27:09,962:INFO:Starting cross validation
2025-09-23 15:27:09,970:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:12,994:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,018:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,035:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,039:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,062:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,066:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,078:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,082:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,123:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,125:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,185:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,229:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,269:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,304:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:13,374:INFO:Calculating mean and std
2025-09-23 15:27:13,374:INFO:Creating metrics dataframe
2025-09-23 15:27:13,374:INFO:Uploading results into container
2025-09-23 15:27:13,374:INFO:Uploading model into container now
2025-09-23 15:27:13,374:INFO:_master_model_container: 7
2025-09-23 15:27:13,381:INFO:_display_container: 2
2025-09-23 15:27:13,383:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 15:27:13,383:INFO:create_model() successfully completed......................................
2025-09-23 15:27:13,553:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:13,553:INFO:Creating metrics dataframe
2025-09-23 15:27:13,559:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 15:27:13,565:INFO:Total runtime is 1.0942806442578634 minutes
2025-09-23 15:27:13,570:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:13,570:INFO:Initializing create_model()
2025-09-23 15:27:13,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:13,572:INFO:Checking exceptions
2025-09-23 15:27:13,572:INFO:Importing libraries
2025-09-23 15:27:13,572:INFO:Copying training dataset
2025-09-23 15:27:13,637:INFO:Defining folds
2025-09-23 15:27:13,637:INFO:Declaring metric variables
2025-09-23 15:27:13,640:INFO:Importing untrained model
2025-09-23 15:27:13,649:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 15:27:13,658:INFO:Starting cross validation
2025-09-23 15:27:13,666:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:15,003:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:27:15,025:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:27:15,034:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:27:15,142:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:27:15,168:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:27:15,521:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:15,544:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:15,650:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,655:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,656:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:15,677:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:15,686:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,710:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,723:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:15,738:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,743:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,747:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,755:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,786:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,795:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,807:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,846:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:15,915:INFO:Calculating mean and std
2025-09-23 15:27:15,917:INFO:Creating metrics dataframe
2025-09-23 15:27:15,919:INFO:Uploading results into container
2025-09-23 15:27:15,921:INFO:Uploading model into container now
2025-09-23 15:27:15,922:INFO:_master_model_container: 8
2025-09-23 15:27:15,922:INFO:_display_container: 2
2025-09-23 15:27:15,923:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 15:27:15,923:INFO:create_model() successfully completed......................................
2025-09-23 15:27:16,093:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:16,093:INFO:Creating metrics dataframe
2025-09-23 15:27:16,105:INFO:Initializing Ada Boost Classifier
2025-09-23 15:27:16,105:INFO:Total runtime is 1.1367196917533875 minutes
2025-09-23 15:27:16,111:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:16,111:INFO:Initializing create_model()
2025-09-23 15:27:16,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:16,113:INFO:Checking exceptions
2025-09-23 15:27:16,113:INFO:Importing libraries
2025-09-23 15:27:16,113:INFO:Copying training dataset
2025-09-23 15:27:16,157:INFO:Defining folds
2025-09-23 15:27:16,157:INFO:Declaring metric variables
2025-09-23 15:27:16,164:INFO:Importing untrained model
2025-09-23 15:27:16,172:INFO:Ada Boost Classifier Imported successfully
2025-09-23 15:27:16,187:INFO:Starting cross validation
2025-09-23 15:27:16,194:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:17,410:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:27:17,416:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:27:17,436:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:27:17,446:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:27:17,469:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:27:20,923:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:20,933:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:20,947:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:20,951:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:20,979:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:20,995:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:20,996:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,005:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,018:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:21,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,039:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,046:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,066:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,070:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,126:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,126:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,166:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:21,245:INFO:Calculating mean and std
2025-09-23 15:27:21,248:INFO:Creating metrics dataframe
2025-09-23 15:27:21,250:INFO:Uploading results into container
2025-09-23 15:27:21,251:INFO:Uploading model into container now
2025-09-23 15:27:21,252:INFO:_master_model_container: 9
2025-09-23 15:27:21,252:INFO:_display_container: 2
2025-09-23 15:27:21,253:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 15:27:21,254:INFO:create_model() successfully completed......................................
2025-09-23 15:27:21,423:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:21,423:INFO:Creating metrics dataframe
2025-09-23 15:27:21,437:INFO:Initializing Gradient Boosting Classifier
2025-09-23 15:27:21,437:INFO:Total runtime is 1.225577453772227 minutes
2025-09-23 15:27:21,441:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:21,444:INFO:Initializing create_model()
2025-09-23 15:27:21,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:21,444:INFO:Checking exceptions
2025-09-23 15:27:21,444:INFO:Importing libraries
2025-09-23 15:27:21,444:INFO:Copying training dataset
2025-09-23 15:27:21,487:INFO:Defining folds
2025-09-23 15:27:21,487:INFO:Declaring metric variables
2025-09-23 15:27:21,494:INFO:Importing untrained model
2025-09-23 15:27:21,502:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 15:27:21,515:INFO:Starting cross validation
2025-09-23 15:27:21,521:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:37,258:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:37,283:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,333:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,349:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:37,374:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,377:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,385:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:37,410:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,474:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:37,494:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,509:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,517:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,555:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,599:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,655:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:37,671:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,716:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,759:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:37,833:INFO:Calculating mean and std
2025-09-23 15:27:37,835:INFO:Creating metrics dataframe
2025-09-23 15:27:37,840:INFO:Uploading results into container
2025-09-23 15:27:37,840:INFO:Uploading model into container now
2025-09-23 15:27:37,842:INFO:_master_model_container: 10
2025-09-23 15:27:37,842:INFO:_display_container: 2
2025-09-23 15:27:37,843:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 15:27:37,843:INFO:create_model() successfully completed......................................
2025-09-23 15:27:38,014:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:38,015:INFO:Creating metrics dataframe
2025-09-23 15:27:38,028:INFO:Initializing Linear Discriminant Analysis
2025-09-23 15:27:38,028:INFO:Total runtime is 1.5020965337753296 minutes
2025-09-23 15:27:38,034:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:38,035:INFO:Initializing create_model()
2025-09-23 15:27:38,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:38,035:INFO:Checking exceptions
2025-09-23 15:27:38,035:INFO:Importing libraries
2025-09-23 15:27:38,035:INFO:Copying training dataset
2025-09-23 15:27:38,073:INFO:Defining folds
2025-09-23 15:27:38,074:INFO:Declaring metric variables
2025-09-23 15:27:38,079:INFO:Importing untrained model
2025-09-23 15:27:38,087:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 15:27:38,097:INFO:Starting cross validation
2025-09-23 15:27:38,106:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:40,315:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:40,318:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:40,337:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,345:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,349:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:40,375:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:40,376:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,385:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:27:40,398:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,399:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,399:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,399:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,438:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,445:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,452:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,458:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,458:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,515:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:40,593:INFO:Calculating mean and std
2025-09-23 15:27:40,593:INFO:Creating metrics dataframe
2025-09-23 15:27:40,599:INFO:Uploading results into container
2025-09-23 15:27:40,601:INFO:Uploading model into container now
2025-09-23 15:27:40,601:INFO:_master_model_container: 11
2025-09-23 15:27:40,601:INFO:_display_container: 2
2025-09-23 15:27:40,601:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 15:27:40,601:INFO:create_model() successfully completed......................................
2025-09-23 15:27:40,774:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:40,775:INFO:Creating metrics dataframe
2025-09-23 15:27:40,791:INFO:Initializing Extra Trees Classifier
2025-09-23 15:27:40,792:INFO:Total runtime is 1.5481543978055319 minutes
2025-09-23 15:27:40,797:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:40,797:INFO:Initializing create_model()
2025-09-23 15:27:40,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:40,799:INFO:Checking exceptions
2025-09-23 15:27:40,799:INFO:Importing libraries
2025-09-23 15:27:40,799:INFO:Copying training dataset
2025-09-23 15:27:40,842:INFO:Defining folds
2025-09-23 15:27:40,842:INFO:Declaring metric variables
2025-09-23 15:27:40,850:INFO:Importing untrained model
2025-09-23 15:27:40,857:INFO:Extra Trees Classifier Imported successfully
2025-09-23 15:27:40,870:INFO:Starting cross validation
2025-09-23 15:27:40,876:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:44,477:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,516:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,516:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,587:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,633:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,685:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,716:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,718:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,753:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,760:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,797:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,801:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:44,876:INFO:Calculating mean and std
2025-09-23 15:27:44,876:INFO:Creating metrics dataframe
2025-09-23 15:27:44,882:INFO:Uploading results into container
2025-09-23 15:27:44,884:INFO:Uploading model into container now
2025-09-23 15:27:44,884:INFO:_master_model_container: 12
2025-09-23 15:27:44,884:INFO:_display_container: 2
2025-09-23 15:27:44,886:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 15:27:44,887:INFO:create_model() successfully completed......................................
2025-09-23 15:27:45,056:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:45,056:INFO:Creating metrics dataframe
2025-09-23 15:27:45,070:INFO:Initializing Extreme Gradient Boosting
2025-09-23 15:27:45,070:INFO:Total runtime is 1.619456656773885 minutes
2025-09-23 15:27:45,075:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:45,076:INFO:Initializing create_model()
2025-09-23 15:27:45,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:45,076:INFO:Checking exceptions
2025-09-23 15:27:45,076:INFO:Importing libraries
2025-09-23 15:27:45,076:INFO:Copying training dataset
2025-09-23 15:27:45,114:INFO:Defining folds
2025-09-23 15:27:45,114:INFO:Declaring metric variables
2025-09-23 15:27:45,122:INFO:Importing untrained model
2025-09-23 15:27:45,128:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:27:45,141:INFO:Starting cross validation
2025-09-23 15:27:45,145:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:48,152:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,214:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,219:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,245:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,270:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,277:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,295:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,300:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,326:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,346:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,360:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,488:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,533:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,575:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:48,646:INFO:Calculating mean and std
2025-09-23 15:27:48,649:INFO:Creating metrics dataframe
2025-09-23 15:27:48,651:INFO:Uploading results into container
2025-09-23 15:27:48,651:INFO:Uploading model into container now
2025-09-23 15:27:48,651:INFO:_master_model_container: 13
2025-09-23 15:27:48,651:INFO:_display_container: 2
2025-09-23 15:27:48,658:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:27:48,658:INFO:create_model() successfully completed......................................
2025-09-23 15:27:48,834:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:48,834:INFO:Creating metrics dataframe
2025-09-23 15:27:48,848:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 15:27:48,849:INFO:Total runtime is 1.6824493567148844 minutes
2025-09-23 15:27:48,851:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:48,851:INFO:Initializing create_model()
2025-09-23 15:27:48,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:48,851:INFO:Checking exceptions
2025-09-23 15:27:48,851:INFO:Importing libraries
2025-09-23 15:27:48,851:INFO:Copying training dataset
2025-09-23 15:27:48,903:INFO:Defining folds
2025-09-23 15:27:48,903:INFO:Declaring metric variables
2025-09-23 15:27:48,910:INFO:Importing untrained model
2025-09-23 15:27:48,917:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 15:27:48,924:INFO:Starting cross validation
2025-09-23 15:27:48,932:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:27:51,638:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,641:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,704:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,759:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,760:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,765:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,794:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,820:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,841:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,858:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,883:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,886:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,908:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:27:51,968:INFO:Calculating mean and std
2025-09-23 15:27:51,969:INFO:Creating metrics dataframe
2025-09-23 15:27:51,972:INFO:Uploading results into container
2025-09-23 15:27:51,973:INFO:Uploading model into container now
2025-09-23 15:27:51,974:INFO:_master_model_container: 14
2025-09-23 15:27:51,974:INFO:_display_container: 2
2025-09-23 15:27:51,975:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 15:27:51,976:INFO:create_model() successfully completed......................................
2025-09-23 15:27:52,145:INFO:SubProcess create_model() end ==================================
2025-09-23 15:27:52,145:INFO:Creating metrics dataframe
2025-09-23 15:27:52,159:INFO:Initializing CatBoost Classifier
2025-09-23 15:27:52,160:INFO:Total runtime is 1.7376275579134624 minutes
2025-09-23 15:27:52,166:INFO:SubProcess create_model() called ==================================
2025-09-23 15:27:52,167:INFO:Initializing create_model()
2025-09-23 15:27:52,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:27:52,167:INFO:Checking exceptions
2025-09-23 15:27:52,167:INFO:Importing libraries
2025-09-23 15:27:52,167:INFO:Copying training dataset
2025-09-23 15:27:52,202:INFO:Defining folds
2025-09-23 15:27:52,202:INFO:Declaring metric variables
2025-09-23 15:27:52,208:INFO:Importing untrained model
2025-09-23 15:27:52,213:INFO:CatBoost Classifier Imported successfully
2025-09-23 15:27:52,223:INFO:Starting cross validation
2025-09-23 15:27:52,229:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:28:19,050:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,122:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,194:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,258:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,324:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,388:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,599:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,649:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,812:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,835:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,878:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,896:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,919:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:19,982:INFO:Calculating mean and std
2025-09-23 15:28:19,984:INFO:Creating metrics dataframe
2025-09-23 15:28:19,987:INFO:Uploading results into container
2025-09-23 15:28:19,989:INFO:Uploading model into container now
2025-09-23 15:28:19,990:INFO:_master_model_container: 15
2025-09-23 15:28:19,990:INFO:_display_container: 2
2025-09-23 15:28:19,990:INFO:<catboost.core.CatBoostClassifier object at 0x0000025681C5BB50>
2025-09-23 15:28:19,990:INFO:create_model() successfully completed......................................
2025-09-23 15:28:20,163:INFO:SubProcess create_model() end ==================================
2025-09-23 15:28:20,163:INFO:Creating metrics dataframe
2025-09-23 15:28:20,178:INFO:Initializing Dummy Classifier
2025-09-23 15:28:20,179:INFO:Total runtime is 2.204618529478709 minutes
2025-09-23 15:28:20,185:INFO:SubProcess create_model() called ==================================
2025-09-23 15:28:20,186:INFO:Initializing create_model()
2025-09-23 15:28:20,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F5480>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:28:20,187:INFO:Checking exceptions
2025-09-23 15:28:20,187:INFO:Importing libraries
2025-09-23 15:28:20,187:INFO:Copying training dataset
2025-09-23 15:28:20,252:INFO:Defining folds
2025-09-23 15:28:20,252:INFO:Declaring metric variables
2025-09-23 15:28:20,258:INFO:Importing untrained model
2025-09-23 15:28:20,264:INFO:Dummy Classifier Imported successfully
2025-09-23 15:28:20,278:INFO:Starting cross validation
2025-09-23 15:28:20,283:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:28:21,667:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,682:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,697:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,722:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,742:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,748:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:28:21,752:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,765:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,771:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:28:21,772:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:28:21,795:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,797:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,814:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,825:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,850:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:28:21,852:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:28:21,869:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,869:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:28:21,934:INFO:Calculating mean and std
2025-09-23 15:28:21,935:INFO:Creating metrics dataframe
2025-09-23 15:28:21,939:INFO:Uploading results into container
2025-09-23 15:28:21,940:INFO:Uploading model into container now
2025-09-23 15:28:21,941:INFO:_master_model_container: 16
2025-09-23 15:28:21,941:INFO:_display_container: 2
2025-09-23 15:28:21,942:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 15:28:21,943:INFO:create_model() successfully completed......................................
2025-09-23 15:28:22,110:INFO:SubProcess create_model() end ==================================
2025-09-23 15:28:22,110:INFO:Creating metrics dataframe
2025-09-23 15:28:22,127:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-23 15:28:22,144:INFO:Initializing create_model()
2025-09-23 15:28:22,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:28:22,144:INFO:Checking exceptions
2025-09-23 15:28:22,146:INFO:Importing libraries
2025-09-23 15:28:22,146:INFO:Copying training dataset
2025-09-23 15:28:22,192:INFO:Defining folds
2025-09-23 15:28:22,192:INFO:Declaring metric variables
2025-09-23 15:28:22,192:INFO:Importing untrained model
2025-09-23 15:28:22,192:INFO:Declaring custom model
2025-09-23 15:28:22,193:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:28:22,196:INFO:Cross validation set to False
2025-09-23 15:28:22,196:INFO:Fitting Model
2025-09-23 15:28:22,949:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:28:22,949:INFO:create_model() successfully completed......................................
2025-09-23 15:28:23,175:INFO:_master_model_container: 16
2025-09-23 15:28:23,175:INFO:_display_container: 2
2025-09-23 15:28:23,175:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:28:23,175:INFO:compare_models() successfully completed......................................
2025-09-23 15:28:23,177:INFO:Initializing plot_model()
2025-09-23 15:28:23,177:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, system=True)
2025-09-23 15:28:23,178:INFO:Checking exceptions
2025-09-23 15:28:23,197:INFO:Preloading libraries
2025-09-23 15:28:23,197:INFO:Copying training dataset
2025-09-23 15:28:23,198:INFO:Plot type: confusion_matrix
2025-09-23 15:28:23,518:INFO:Fitting Model
2025-09-23 15:28:23,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names

2025-09-23 15:28:23,520:INFO:Scoring test/hold-out set
2025-09-23 15:28:23,702:INFO:Visual Rendered Successfully
2025-09-23 15:28:23,874:INFO:plot_model() successfully completed......................................
2025-09-23 15:28:23,875:INFO:Initializing plot_model()
2025-09-23 15:28:23,875:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, system=True)
2025-09-23 15:28:23,875:INFO:Checking exceptions
2025-09-23 15:28:23,890:INFO:Preloading libraries
2025-09-23 15:28:23,890:INFO:Copying training dataset
2025-09-23 15:28:23,890:INFO:Plot type: feature
2025-09-23 15:28:23,891:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 15:28:24,170:INFO:Visual Rendered Successfully
2025-09-23 15:28:24,405:INFO:plot_model() successfully completed......................................
2025-09-23 15:28:24,406:INFO:Initializing predict_model()
2025-09-23 15:28:24,406:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000256B0D93B80>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002568181C790>)
2025-09-23 15:28:24,406:INFO:Checking exceptions
2025-09-23 15:28:24,406:INFO:Preloading libraries
2025-09-23 15:28:24,673:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 15:28:24,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 15:28:24,859:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 15:36:36,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:36:36,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:36:36,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:36:36,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-23 15:38:56,991:INFO:PyCaret ClassificationExperiment
2025-09-23 15:38:56,991:INFO:Logging name: clf-default-name
2025-09-23 15:38:56,992:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:38:56,992:INFO:version 3.3.2
2025-09-23 15:38:57,021:INFO:Initializing setup()
2025-09-23 15:38:57,022:INFO:self.USI: e5d3
2025-09-23 15:38:57,022:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'y_test', 'fold_shuffle_param', 'X_train', 'X_test', 'fix_imbalance', 'exp_id', 'fold_generator', 'data', 'memory', 'USI', 'y_train', 'html_param', 'X', 'seed', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', 'y', 'n_jobs_param', 'pipeline', '_ml_usecase', 'idx', '_available_plots', 'is_multiclass', 'logging_param'}
2025-09-23 15:38:57,022:INFO:Checking environment
2025-09-23 15:38:57,022:INFO:python_version: 3.10.18
2025-09-23 15:38:57,022:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:38:57,022:INFO:machine: AMD64
2025-09-23 15:38:57,022:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:38:57,022:INFO:Memory: svmem(total=16486035456, available=7670665216, percent=53.5, used=8815370240, free=7670665216)
2025-09-23 15:38:57,023:INFO:Physical Core: 8
2025-09-23 15:38:57,023:INFO:Logical Core: 16
2025-09-23 15:38:57,023:INFO:Checking libraries
2025-09-23 15:38:57,023:INFO:System:
2025-09-23 15:38:57,023:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:38:57,023:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:38:57,023:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:38:57,023:INFO:PyCaret required dependencies:
2025-09-23 15:38:58,667:INFO:                 pip: 25.2
2025-09-23 15:38:58,667:INFO:          setuptools: 78.1.1
2025-09-23 15:38:58,667:INFO:             pycaret: 3.3.2
2025-09-23 15:38:58,668:INFO:             IPython: 8.37.0
2025-09-23 15:38:58,668:INFO:          ipywidgets: 8.1.7
2025-09-23 15:38:58,668:INFO:                tqdm: 4.67.1
2025-09-23 15:38:58,668:INFO:               numpy: 1.26.4
2025-09-23 15:38:58,668:INFO:              pandas: 2.1.4
2025-09-23 15:38:58,668:INFO:              jinja2: 3.1.6
2025-09-23 15:38:58,668:INFO:               scipy: 1.11.4
2025-09-23 15:38:58,668:INFO:              joblib: 1.3.2
2025-09-23 15:38:58,668:INFO:             sklearn: 1.4.2
2025-09-23 15:38:58,668:INFO:                pyod: 2.0.5
2025-09-23 15:38:58,668:INFO:            imblearn: 0.14.0
2025-09-23 15:38:58,668:INFO:   category_encoders: 2.7.0
2025-09-23 15:38:58,668:INFO:            lightgbm: 4.6.0
2025-09-23 15:38:58,668:INFO:               numba: 0.61.0
2025-09-23 15:38:58,668:INFO:            requests: 2.32.5
2025-09-23 15:38:58,668:INFO:          matplotlib: 3.7.5
2025-09-23 15:38:58,668:INFO:          scikitplot: 0.3.7
2025-09-23 15:38:58,668:INFO:         yellowbrick: 1.5
2025-09-23 15:38:58,668:INFO:              plotly: 5.24.1
2025-09-23 15:38:58,668:INFO:    plotly-resampler: Not installed
2025-09-23 15:38:58,669:INFO:             kaleido: 1.1.0
2025-09-23 15:38:58,669:INFO:           schemdraw: 0.15
2025-09-23 15:38:58,669:INFO:         statsmodels: 0.14.5
2025-09-23 15:38:58,669:INFO:              sktime: 0.26.0
2025-09-23 15:38:58,669:INFO:               tbats: 1.1.3
2025-09-23 15:38:58,669:INFO:            pmdarima: 2.0.4
2025-09-23 15:38:58,669:INFO:              psutil: 7.1.0
2025-09-23 15:38:58,669:INFO:          markupsafe: 3.0.2
2025-09-23 15:38:58,669:INFO:             pickle5: Not installed
2025-09-23 15:38:58,669:INFO:         cloudpickle: 3.1.1
2025-09-23 15:38:58,669:INFO:         deprecation: 2.1.0
2025-09-23 15:38:58,669:INFO:              xxhash: 3.5.0
2025-09-23 15:38:58,669:INFO:           wurlitzer: Not installed
2025-09-23 15:38:58,669:INFO:PyCaret optional dependencies:
2025-09-23 15:39:06,215:INFO:                shap: 0.44.1
2025-09-23 15:39:06,215:INFO:           interpret: 0.7.2
2025-09-23 15:39:06,215:INFO:                umap: 0.5.7
2025-09-23 15:39:06,215:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:39:06,215:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:39:06,215:INFO:             autoviz: Not installed
2025-09-23 15:39:06,215:INFO:           fairlearn: 0.7.0
2025-09-23 15:39:06,215:INFO:          deepchecks: Not installed
2025-09-23 15:39:06,215:INFO:             xgboost: 3.0.5
2025-09-23 15:39:06,215:INFO:            catboost: 1.2.8
2025-09-23 15:39:06,215:INFO:              kmodes: 0.12.2
2025-09-23 15:39:06,215:INFO:             mlxtend: 0.23.4
2025-09-23 15:39:06,215:INFO:       statsforecast: 1.5.0
2025-09-23 15:39:06,215:INFO:        tune_sklearn: Not installed
2025-09-23 15:39:06,215:INFO:                 ray: Not installed
2025-09-23 15:39:06,215:INFO:            hyperopt: 0.2.7
2025-09-23 15:39:06,215:INFO:              optuna: 4.5.0
2025-09-23 15:39:06,215:INFO:               skopt: 0.10.2
2025-09-23 15:39:06,216:INFO:              mlflow: 3.4.0
2025-09-23 15:39:06,216:INFO:              gradio: 5.46.1
2025-09-23 15:39:06,216:INFO:             fastapi: 0.117.1
2025-09-23 15:39:06,216:INFO:             uvicorn: 0.36.0
2025-09-23 15:39:06,216:INFO:              m2cgen: 0.10.0
2025-09-23 15:39:06,216:INFO:           evidently: 0.4.40
2025-09-23 15:39:06,216:INFO:               fugue: 0.8.7
2025-09-23 15:39:06,216:INFO:           streamlit: Not installed
2025-09-23 15:39:06,216:INFO:             prophet: Not installed
2025-09-23 15:39:06,216:INFO:None
2025-09-23 15:39:06,216:INFO:Set up data.
2025-09-23 15:39:06,229:INFO:Set up folding strategy.
2025-09-23 15:39:06,229:INFO:Set up train/test split.
2025-09-23 15:39:06,244:INFO:Set up index.
2025-09-23 15:39:06,244:INFO:Assigning column types.
2025-09-23 15:39:06,252:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:39:06,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:39:06,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:39:06,372:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:06,373:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:06,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:39:06,467:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:39:06,511:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:06,511:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:06,511:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:39:06,579:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:39:06,623:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:06,627:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:06,694:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:39:06,729:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:06,729:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:06,729:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:39:06,845:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:06,847:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:06,946:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:06,946:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:06,956:INFO:Preparing preprocessing pipeline...
2025-09-23 15:39:06,956:INFO:Set up label encoding.
2025-09-23 15:39:06,960:INFO:Set up simple imputation.
2025-09-23 15:39:06,968:INFO:Set up encoding of ordinal features.
2025-09-23 15:39:06,971:INFO:Set up encoding of categorical features.
2025-09-23 15:39:06,971:INFO:Set up column name cleaning.
2025-09-23 15:39:07,235:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:39:07,261:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:39:07,262:INFO:Creating final display dataframe.
2025-09-23 15:39:08,002:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                   (1000, 35)
5        Transformed data shape                                   (1000, 62)
6   Transformed train set shape                                    (700, 62)
7    Transformed test set shape                                    (300, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         e5d3
2025-09-23 15:39:08,106:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:08,110:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:08,214:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:39:08,218:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:39:08,220:INFO:setup() successfully completed in 11.24s...............
2025-09-23 15:39:08,220:INFO:Initializing compare_models()
2025-09-23 15:39:08,220:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:39:08,220:INFO:Checking exceptions
2025-09-23 15:39:08,227:INFO:Preparing display monitor
2025-09-23 15:39:08,284:INFO:Initializing Logistic Regression
2025-09-23 15:39:08,284:INFO:Total runtime is 2.1390120188395183e-05 minutes
2025-09-23 15:39:08,291:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:08,291:INFO:Initializing create_model()
2025-09-23 15:39:08,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:08,292:INFO:Checking exceptions
2025-09-23 15:39:08,293:INFO:Importing libraries
2025-09-23 15:39:08,293:INFO:Copying training dataset
2025-09-23 15:39:08,315:INFO:Defining folds
2025-09-23 15:39:08,315:INFO:Declaring metric variables
2025-09-23 15:39:08,322:INFO:Importing untrained model
2025-09-23 15:39:08,332:INFO:Logistic Regression Imported successfully
2025-09-23 15:39:08,347:INFO:Starting cross validation
2025-09-23 15:39:08,356:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:17,346:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:39:17,363:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:39:17,405:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:39:17,423:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:39:17,466:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:17,473:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,484:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:17,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,490:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,498:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,499:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:39:17,504:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,542:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:17,548:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,550:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:17,553:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,555:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,559:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,561:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,566:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,634:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:17,639:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,644:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,649:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:17,666:INFO:Calculating mean and std
2025-09-23 15:39:17,668:INFO:Creating metrics dataframe
2025-09-23 15:39:17,673:INFO:Uploading results into container
2025-09-23 15:39:17,673:INFO:Uploading model into container now
2025-09-23 15:39:17,674:INFO:_master_model_container: 1
2025-09-23 15:39:17,674:INFO:_display_container: 2
2025-09-23 15:39:17,675:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:39:17,676:INFO:create_model() successfully completed......................................
2025-09-23 15:39:17,863:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:17,863:INFO:Creating metrics dataframe
2025-09-23 15:39:17,872:INFO:Initializing K Neighbors Classifier
2025-09-23 15:39:17,873:INFO:Total runtime is 0.15983271598815918 minutes
2025-09-23 15:39:17,880:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:17,880:INFO:Initializing create_model()
2025-09-23 15:39:17,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:17,880:INFO:Checking exceptions
2025-09-23 15:39:17,880:INFO:Importing libraries
2025-09-23 15:39:17,881:INFO:Copying training dataset
2025-09-23 15:39:17,891:INFO:Defining folds
2025-09-23 15:39:17,891:INFO:Declaring metric variables
2025-09-23 15:39:17,898:INFO:Importing untrained model
2025-09-23 15:39:17,906:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:39:17,922:INFO:Starting cross validation
2025-09-23 15:39:17,926:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:25,565:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,572:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,575:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,577:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,583:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,589:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,610:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,617:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,623:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,631:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:25,645:INFO:Calculating mean and std
2025-09-23 15:39:25,648:INFO:Creating metrics dataframe
2025-09-23 15:39:25,653:INFO:Uploading results into container
2025-09-23 15:39:25,655:INFO:Uploading model into container now
2025-09-23 15:39:25,656:INFO:_master_model_container: 2
2025-09-23 15:39:25,657:INFO:_display_container: 2
2025-09-23 15:39:25,658:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 15:39:25,659:INFO:create_model() successfully completed......................................
2025-09-23 15:39:25,871:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:25,871:INFO:Creating metrics dataframe
2025-09-23 15:39:25,880:INFO:Initializing Naive Bayes
2025-09-23 15:39:25,881:INFO:Total runtime is 0.2933019042015076 minutes
2025-09-23 15:39:25,886:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:25,886:INFO:Initializing create_model()
2025-09-23 15:39:25,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:25,886:INFO:Checking exceptions
2025-09-23 15:39:25,886:INFO:Importing libraries
2025-09-23 15:39:25,886:INFO:Copying training dataset
2025-09-23 15:39:25,899:INFO:Defining folds
2025-09-23 15:39:25,900:INFO:Declaring metric variables
2025-09-23 15:39:25,906:INFO:Importing untrained model
2025-09-23 15:39:25,913:INFO:Naive Bayes Imported successfully
2025-09-23 15:39:25,923:INFO:Starting cross validation
2025-09-23 15:39:25,928:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:33,618:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,625:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,628:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,631:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,633:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,637:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,661:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,666:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,671:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,696:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,701:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,707:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,709:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,717:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,725:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:33,751:INFO:Calculating mean and std
2025-09-23 15:39:33,754:INFO:Creating metrics dataframe
2025-09-23 15:39:33,759:INFO:Uploading results into container
2025-09-23 15:39:33,760:INFO:Uploading model into container now
2025-09-23 15:39:33,761:INFO:_master_model_container: 3
2025-09-23 15:39:33,761:INFO:_display_container: 2
2025-09-23 15:39:33,762:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 15:39:33,763:INFO:create_model() successfully completed......................................
2025-09-23 15:39:33,961:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:33,962:INFO:Creating metrics dataframe
2025-09-23 15:39:33,971:INFO:Initializing Decision Tree Classifier
2025-09-23 15:39:33,971:INFO:Total runtime is 0.42813850243886314 minutes
2025-09-23 15:39:33,976:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:33,977:INFO:Initializing create_model()
2025-09-23 15:39:33,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:33,978:INFO:Checking exceptions
2025-09-23 15:39:33,978:INFO:Importing libraries
2025-09-23 15:39:33,978:INFO:Copying training dataset
2025-09-23 15:39:33,990:INFO:Defining folds
2025-09-23 15:39:33,991:INFO:Declaring metric variables
2025-09-23 15:39:33,997:INFO:Importing untrained model
2025-09-23 15:39:34,004:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:39:34,017:INFO:Starting cross validation
2025-09-23 15:39:34,022:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:34,469:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,472:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,477:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,482:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,484:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,487:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:34,492:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:40,454:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:40,459:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:40,464:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:40,473:INFO:Calculating mean and std
2025-09-23 15:39:40,474:INFO:Creating metrics dataframe
2025-09-23 15:39:40,480:INFO:Uploading results into container
2025-09-23 15:39:40,482:INFO:Uploading model into container now
2025-09-23 15:39:40,483:INFO:_master_model_container: 4
2025-09-23 15:39:40,484:INFO:_display_container: 2
2025-09-23 15:39:40,485:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:39:40,485:INFO:create_model() successfully completed......................................
2025-09-23 15:39:40,668:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:40,668:INFO:Creating metrics dataframe
2025-09-23 15:39:40,680:INFO:Initializing SVM - Linear Kernel
2025-09-23 15:39:40,680:INFO:Total runtime is 0.5399446646372478 minutes
2025-09-23 15:39:40,686:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:40,687:INFO:Initializing create_model()
2025-09-23 15:39:40,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:40,688:INFO:Checking exceptions
2025-09-23 15:39:40,688:INFO:Importing libraries
2025-09-23 15:39:40,688:INFO:Copying training dataset
2025-09-23 15:39:40,699:INFO:Defining folds
2025-09-23 15:39:40,700:INFO:Declaring metric variables
2025-09-23 15:39:40,708:INFO:Importing untrained model
2025-09-23 15:39:40,714:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 15:39:40,728:INFO:Starting cross validation
2025-09-23 15:39:40,734:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:41,186:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,188:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,192:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,196:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,207:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,209:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,214:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,218:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,229:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,233:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,235:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,237:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,239:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,243:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,245:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,248:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,252:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,267:INFO:Calculating mean and std
2025-09-23 15:39:41,269:INFO:Creating metrics dataframe
2025-09-23 15:39:41,271:INFO:Uploading results into container
2025-09-23 15:39:41,272:INFO:Uploading model into container now
2025-09-23 15:39:41,274:INFO:_master_model_container: 5
2025-09-23 15:39:41,274:INFO:_display_container: 2
2025-09-23 15:39:41,274:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 15:39:41,275:INFO:create_model() successfully completed......................................
2025-09-23 15:39:41,448:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:41,449:INFO:Creating metrics dataframe
2025-09-23 15:39:41,463:INFO:Initializing Ridge Classifier
2025-09-23 15:39:41,463:INFO:Total runtime is 0.5529985785484315 minutes
2025-09-23 15:39:41,468:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:41,469:INFO:Initializing create_model()
2025-09-23 15:39:41,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:41,469:INFO:Checking exceptions
2025-09-23 15:39:41,469:INFO:Importing libraries
2025-09-23 15:39:41,469:INFO:Copying training dataset
2025-09-23 15:39:41,482:INFO:Defining folds
2025-09-23 15:39:41,483:INFO:Declaring metric variables
2025-09-23 15:39:41,490:INFO:Importing untrained model
2025-09-23 15:39:41,496:INFO:Ridge Classifier Imported successfully
2025-09-23 15:39:41,507:INFO:Starting cross validation
2025-09-23 15:39:41,514:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:41,964:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,969:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,971:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,974:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,978:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,979:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,981:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,985:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,988:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,988:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,993:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:41,993:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,994:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,996:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,998:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:41,999:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:42,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:42,014:INFO:Calculating mean and std
2025-09-23 15:39:42,017:INFO:Creating metrics dataframe
2025-09-23 15:39:42,019:INFO:Uploading results into container
2025-09-23 15:39:42,020:INFO:Uploading model into container now
2025-09-23 15:39:42,021:INFO:_master_model_container: 6
2025-09-23 15:39:42,021:INFO:_display_container: 2
2025-09-23 15:39:42,021:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 15:39:42,022:INFO:create_model() successfully completed......................................
2025-09-23 15:39:42,197:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:42,197:INFO:Creating metrics dataframe
2025-09-23 15:39:42,210:INFO:Initializing Random Forest Classifier
2025-09-23 15:39:42,210:INFO:Total runtime is 0.5654514352480572 minutes
2025-09-23 15:39:42,216:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:42,217:INFO:Initializing create_model()
2025-09-23 15:39:42,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:42,217:INFO:Checking exceptions
2025-09-23 15:39:42,217:INFO:Importing libraries
2025-09-23 15:39:42,217:INFO:Copying training dataset
2025-09-23 15:39:42,228:INFO:Defining folds
2025-09-23 15:39:42,228:INFO:Declaring metric variables
2025-09-23 15:39:42,238:INFO:Importing untrained model
2025-09-23 15:39:42,245:INFO:Random Forest Classifier Imported successfully
2025-09-23 15:39:42,257:INFO:Starting cross validation
2025-09-23 15:39:42,262:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:43,108:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,108:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,110:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,117:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,117:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,117:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,123:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,123:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,171:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,171:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,171:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,171:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,178:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,194:INFO:Calculating mean and std
2025-09-23 15:39:43,195:INFO:Creating metrics dataframe
2025-09-23 15:39:43,195:INFO:Uploading results into container
2025-09-23 15:39:43,195:INFO:Uploading model into container now
2025-09-23 15:39:43,195:INFO:_master_model_container: 7
2025-09-23 15:39:43,195:INFO:_display_container: 2
2025-09-23 15:39:43,195:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 15:39:43,195:INFO:create_model() successfully completed......................................
2025-09-23 15:39:43,366:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:43,366:INFO:Creating metrics dataframe
2025-09-23 15:39:43,379:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 15:39:43,379:INFO:Total runtime is 0.5849290172259014 minutes
2025-09-23 15:39:43,391:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:43,391:INFO:Initializing create_model()
2025-09-23 15:39:43,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:43,391:INFO:Checking exceptions
2025-09-23 15:39:43,391:INFO:Importing libraries
2025-09-23 15:39:43,394:INFO:Copying training dataset
2025-09-23 15:39:43,396:INFO:Defining folds
2025-09-23 15:39:43,396:INFO:Declaring metric variables
2025-09-23 15:39:43,413:INFO:Importing untrained model
2025-09-23 15:39:43,418:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 15:39:43,429:INFO:Starting cross validation
2025-09-23 15:39:43,437:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:43,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:39:43,760:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:39:43,772:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:39:43,775:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:39:43,778:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:39:43,870:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:43,873:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,881:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,891:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,891:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,894:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:43,898:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,898:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,898:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:43,901:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,901:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,904:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,904:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,911:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:43,927:INFO:Calculating mean and std
2025-09-23 15:39:43,929:INFO:Creating metrics dataframe
2025-09-23 15:39:43,934:INFO:Uploading results into container
2025-09-23 15:39:43,934:INFO:Uploading model into container now
2025-09-23 15:39:43,934:INFO:_master_model_container: 8
2025-09-23 15:39:43,934:INFO:_display_container: 2
2025-09-23 15:39:43,934:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 15:39:43,934:INFO:create_model() successfully completed......................................
2025-09-23 15:39:44,111:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:44,114:INFO:Creating metrics dataframe
2025-09-23 15:39:44,124:INFO:Initializing Ada Boost Classifier
2025-09-23 15:39:44,124:INFO:Total runtime is 0.5973583141962688 minutes
2025-09-23 15:39:44,130:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:44,130:INFO:Initializing create_model()
2025-09-23 15:39:44,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:44,130:INFO:Checking exceptions
2025-09-23 15:39:44,130:INFO:Importing libraries
2025-09-23 15:39:44,130:INFO:Copying training dataset
2025-09-23 15:39:44,151:INFO:Defining folds
2025-09-23 15:39:44,151:INFO:Declaring metric variables
2025-09-23 15:39:44,151:INFO:Importing untrained model
2025-09-23 15:39:44,167:INFO:Ada Boost Classifier Imported successfully
2025-09-23 15:39:44,180:INFO:Starting cross validation
2025-09-23 15:39:44,183:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:44,507:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:39:44,514:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:39:44,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:39:44,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:39:44,526:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:39:44,797:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:44,811:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,816:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,818:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:44,820:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,822:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,826:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,831:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,833:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:44,841:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,847:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,850:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:44,852:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,852:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,855:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:44,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:44,893:INFO:Calculating mean and std
2025-09-23 15:39:44,895:INFO:Creating metrics dataframe
2025-09-23 15:39:44,900:INFO:Uploading results into container
2025-09-23 15:39:44,901:INFO:Uploading model into container now
2025-09-23 15:39:44,902:INFO:_master_model_container: 9
2025-09-23 15:39:44,902:INFO:_display_container: 2
2025-09-23 15:39:44,902:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 15:39:44,902:INFO:create_model() successfully completed......................................
2025-09-23 15:39:45,077:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:45,078:INFO:Creating metrics dataframe
2025-09-23 15:39:45,090:INFO:Initializing Gradient Boosting Classifier
2025-09-23 15:39:45,090:INFO:Total runtime is 0.613451119263967 minutes
2025-09-23 15:39:45,096:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:45,096:INFO:Initializing create_model()
2025-09-23 15:39:45,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:45,097:INFO:Checking exceptions
2025-09-23 15:39:45,097:INFO:Importing libraries
2025-09-23 15:39:45,097:INFO:Copying training dataset
2025-09-23 15:39:45,111:INFO:Defining folds
2025-09-23 15:39:45,112:INFO:Declaring metric variables
2025-09-23 15:39:45,128:INFO:Importing untrained model
2025-09-23 15:39:45,137:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 15:39:45,150:INFO:Starting cross validation
2025-09-23 15:39:45,155:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:46,347:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:46,350:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,352:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:46,354:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,355:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,358:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,360:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:46,362:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,363:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,366:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,368:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:46,368:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,369:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,371:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,371:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:46,374:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,375:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,377:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,378:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,382:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:46,397:INFO:Calculating mean and std
2025-09-23 15:39:46,400:INFO:Creating metrics dataframe
2025-09-23 15:39:46,401:INFO:Uploading results into container
2025-09-23 15:39:46,402:INFO:Uploading model into container now
2025-09-23 15:39:46,404:INFO:_master_model_container: 10
2025-09-23 15:39:46,405:INFO:_display_container: 2
2025-09-23 15:39:46,405:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 15:39:46,406:INFO:create_model() successfully completed......................................
2025-09-23 15:39:46,580:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:46,580:INFO:Creating metrics dataframe
2025-09-23 15:39:46,593:INFO:Initializing Linear Discriminant Analysis
2025-09-23 15:39:46,593:INFO:Total runtime is 0.6384989698727926 minutes
2025-09-23 15:39:46,599:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:46,600:INFO:Initializing create_model()
2025-09-23 15:39:46,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:46,600:INFO:Checking exceptions
2025-09-23 15:39:46,600:INFO:Importing libraries
2025-09-23 15:39:46,600:INFO:Copying training dataset
2025-09-23 15:39:46,613:INFO:Defining folds
2025-09-23 15:39:46,614:INFO:Declaring metric variables
2025-09-23 15:39:46,620:INFO:Importing untrained model
2025-09-23 15:39:46,625:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 15:39:46,639:INFO:Starting cross validation
2025-09-23 15:39:46,646:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:47,096:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:47,097:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:47,100:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,101:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,101:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:47,102:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:47,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,107:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,108:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,108:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,110:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,114:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,116:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,117:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,125:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:39:47,128:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,132:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,135:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:47,144:INFO:Calculating mean and std
2025-09-23 15:39:47,147:INFO:Creating metrics dataframe
2025-09-23 15:39:47,150:INFO:Uploading results into container
2025-09-23 15:39:47,151:INFO:Uploading model into container now
2025-09-23 15:39:47,152:INFO:_master_model_container: 11
2025-09-23 15:39:47,152:INFO:_display_container: 2
2025-09-23 15:39:47,153:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 15:39:47,153:INFO:create_model() successfully completed......................................
2025-09-23 15:39:47,348:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:47,349:INFO:Creating metrics dataframe
2025-09-23 15:39:47,362:INFO:Initializing Extra Trees Classifier
2025-09-23 15:39:47,362:INFO:Total runtime is 0.6513246933619182 minutes
2025-09-23 15:39:47,369:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:47,369:INFO:Initializing create_model()
2025-09-23 15:39:47,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:47,369:INFO:Checking exceptions
2025-09-23 15:39:47,369:INFO:Importing libraries
2025-09-23 15:39:47,369:INFO:Copying training dataset
2025-09-23 15:39:47,380:INFO:Defining folds
2025-09-23 15:39:47,381:INFO:Declaring metric variables
2025-09-23 15:39:47,387:INFO:Importing untrained model
2025-09-23 15:39:47,398:INFO:Extra Trees Classifier Imported successfully
2025-09-23 15:39:47,408:INFO:Starting cross validation
2025-09-23 15:39:47,414:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:48,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,119:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,120:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,123:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,125:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,145:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,145:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,148:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,150:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,153:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,153:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,179:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,182:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,186:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:48,197:INFO:Calculating mean and std
2025-09-23 15:39:48,198:INFO:Creating metrics dataframe
2025-09-23 15:39:48,202:INFO:Uploading results into container
2025-09-23 15:39:48,203:INFO:Uploading model into container now
2025-09-23 15:39:48,203:INFO:_master_model_container: 12
2025-09-23 15:39:48,203:INFO:_display_container: 2
2025-09-23 15:39:48,204:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 15:39:48,204:INFO:create_model() successfully completed......................................
2025-09-23 15:39:48,385:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:48,385:INFO:Creating metrics dataframe
2025-09-23 15:39:48,398:INFO:Initializing Extreme Gradient Boosting
2025-09-23 15:39:48,399:INFO:Total runtime is 0.6685817480087282 minutes
2025-09-23 15:39:48,403:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:48,404:INFO:Initializing create_model()
2025-09-23 15:39:48,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:48,405:INFO:Checking exceptions
2025-09-23 15:39:48,405:INFO:Importing libraries
2025-09-23 15:39:48,405:INFO:Copying training dataset
2025-09-23 15:39:48,415:INFO:Defining folds
2025-09-23 15:39:48,416:INFO:Declaring metric variables
2025-09-23 15:39:48,423:INFO:Importing untrained model
2025-09-23 15:39:48,432:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:39:48,445:INFO:Starting cross validation
2025-09-23 15:39:48,451:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:49,080:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,081:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,094:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,094:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,097:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,097:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,110:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,126:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:49,142:INFO:Calculating mean and std
2025-09-23 15:39:49,142:INFO:Creating metrics dataframe
2025-09-23 15:39:49,148:INFO:Uploading results into container
2025-09-23 15:39:49,148:INFO:Uploading model into container now
2025-09-23 15:39:49,148:INFO:_master_model_container: 13
2025-09-23 15:39:49,150:INFO:_display_container: 2
2025-09-23 15:39:49,150:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:39:49,150:INFO:create_model() successfully completed......................................
2025-09-23 15:39:49,325:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:49,325:INFO:Creating metrics dataframe
2025-09-23 15:39:49,341:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 15:39:49,341:INFO:Total runtime is 0.6843040943145753 minutes
2025-09-23 15:39:49,347:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:49,347:INFO:Initializing create_model()
2025-09-23 15:39:49,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:49,347:INFO:Checking exceptions
2025-09-23 15:39:49,347:INFO:Importing libraries
2025-09-23 15:39:49,347:INFO:Copying training dataset
2025-09-23 15:39:49,364:INFO:Defining folds
2025-09-23 15:39:49,364:INFO:Declaring metric variables
2025-09-23 15:39:49,371:INFO:Importing untrained model
2025-09-23 15:39:49,379:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 15:39:49,387:INFO:Starting cross validation
2025-09-23 15:39:49,400:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:39:50,528:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,534:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,540:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,610:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,614:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,620:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,629:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,634:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,641:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,651:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,657:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,728:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,734:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,737:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:39:50,760:INFO:Calculating mean and std
2025-09-23 15:39:50,762:INFO:Creating metrics dataframe
2025-09-23 15:39:50,766:INFO:Uploading results into container
2025-09-23 15:39:50,767:INFO:Uploading model into container now
2025-09-23 15:39:50,767:INFO:_master_model_container: 14
2025-09-23 15:39:50,767:INFO:_display_container: 2
2025-09-23 15:39:50,767:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 15:39:50,770:INFO:create_model() successfully completed......................................
2025-09-23 15:39:50,946:INFO:SubProcess create_model() end ==================================
2025-09-23 15:39:50,946:INFO:Creating metrics dataframe
2025-09-23 15:39:50,969:INFO:Initializing CatBoost Classifier
2025-09-23 15:39:50,969:INFO:Total runtime is 0.7114414215087892 minutes
2025-09-23 15:39:50,977:INFO:SubProcess create_model() called ==================================
2025-09-23 15:39:50,978:INFO:Initializing create_model()
2025-09-23 15:39:50,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:39:50,978:INFO:Checking exceptions
2025-09-23 15:39:50,978:INFO:Importing libraries
2025-09-23 15:39:50,978:INFO:Copying training dataset
2025-09-23 15:39:50,990:INFO:Defining folds
2025-09-23 15:39:50,990:INFO:Declaring metric variables
2025-09-23 15:39:51,003:INFO:Importing untrained model
2025-09-23 15:39:51,013:INFO:CatBoost Classifier Imported successfully
2025-09-23 15:39:51,029:INFO:Starting cross validation
2025-09-23 15:39:51,036:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:01,092:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,094:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,095:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,100:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,102:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,102:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,146:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,146:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,153:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,197:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,198:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,223:INFO:Calculating mean and std
2025-09-23 15:40:01,223:INFO:Creating metrics dataframe
2025-09-23 15:40:01,223:INFO:Uploading results into container
2025-09-23 15:40:01,229:INFO:Uploading model into container now
2025-09-23 15:40:01,231:INFO:_master_model_container: 15
2025-09-23 15:40:01,231:INFO:_display_container: 2
2025-09-23 15:40:01,231:INFO:<catboost.core.CatBoostClassifier object at 0x000001D2922777C0>
2025-09-23 15:40:01,232:INFO:create_model() successfully completed......................................
2025-09-23 15:40:01,404:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:01,404:INFO:Creating metrics dataframe
2025-09-23 15:40:01,418:INFO:Initializing Dummy Classifier
2025-09-23 15:40:01,418:INFO:Total runtime is 0.8855781237284344 minutes
2025-09-23 15:40:01,425:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:01,425:INFO:Initializing create_model()
2025-09-23 15:40:01,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1C5FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:01,425:INFO:Checking exceptions
2025-09-23 15:40:01,425:INFO:Importing libraries
2025-09-23 15:40:01,425:INFO:Copying training dataset
2025-09-23 15:40:01,435:INFO:Defining folds
2025-09-23 15:40:01,435:INFO:Declaring metric variables
2025-09-23 15:40:01,445:INFO:Importing untrained model
2025-09-23 15:40:01,456:INFO:Dummy Classifier Imported successfully
2025-09-23 15:40:01,470:INFO:Starting cross validation
2025-09-23 15:40:01,474:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:01,917:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,923:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,923:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,923:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:01,928:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,930:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,933:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:01,933:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,933:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,933:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,947:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,947:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:01,947:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,947:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,954:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:01,956:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,961:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:01,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:01,977:INFO:Calculating mean and std
2025-09-23 15:40:01,979:INFO:Creating metrics dataframe
2025-09-23 15:40:01,981:INFO:Uploading results into container
2025-09-23 15:40:01,981:INFO:Uploading model into container now
2025-09-23 15:40:01,981:INFO:_master_model_container: 16
2025-09-23 15:40:01,981:INFO:_display_container: 2
2025-09-23 15:40:01,981:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 15:40:01,981:INFO:create_model() successfully completed......................................
2025-09-23 15:40:02,155:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:02,155:INFO:Creating metrics dataframe
2025-09-23 15:40:02,193:INFO:Initializing create_model()
2025-09-23 15:40:02,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:02,195:INFO:Checking exceptions
2025-09-23 15:40:02,198:INFO:Importing libraries
2025-09-23 15:40:02,198:INFO:Copying training dataset
2025-09-23 15:40:02,250:INFO:Defining folds
2025-09-23 15:40:02,250:INFO:Declaring metric variables
2025-09-23 15:40:02,250:INFO:Importing untrained model
2025-09-23 15:40:02,250:INFO:Declaring custom model
2025-09-23 15:40:02,254:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:02,255:INFO:Cross validation set to False
2025-09-23 15:40:02,255:INFO:Fitting Model
2025-09-23 15:40:02,580:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:02,580:INFO:create_model() successfully completed......................................
2025-09-23 15:40:02,808:INFO:_master_model_container: 16
2025-09-23 15:40:02,808:INFO:_display_container: 2
2025-09-23 15:40:02,809:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:02,809:INFO:compare_models() successfully completed......................................
2025-09-23 15:40:02,821:INFO:Initializing create_model()
2025-09-23 15:40:02,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:02,821:INFO:Checking exceptions
2025-09-23 15:40:02,843:INFO:Importing libraries
2025-09-23 15:40:02,844:INFO:Copying training dataset
2025-09-23 15:40:02,855:INFO:Defining folds
2025-09-23 15:40:02,855:INFO:Declaring metric variables
2025-09-23 15:40:02,860:INFO:Importing untrained model
2025-09-23 15:40:02,868:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:02,884:INFO:Starting cross validation
2025-09-23 15:40:02,888:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:03,343:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,348:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,352:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,369:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,373:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,376:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,389:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,392:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,397:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,397:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,400:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,401:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,405:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,406:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:03,418:INFO:Calculating mean and std
2025-09-23 15:40:03,419:INFO:Creating metrics dataframe
2025-09-23 15:40:03,427:INFO:Finalizing model
2025-09-23 15:40:03,771:INFO:Uploading results into container
2025-09-23 15:40:03,773:INFO:Uploading model into container now
2025-09-23 15:40:03,790:INFO:_master_model_container: 17
2025-09-23 15:40:03,790:INFO:_display_container: 3
2025-09-23 15:40:03,792:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:03,792:INFO:create_model() successfully completed......................................
2025-09-23 15:40:03,988:INFO:Initializing tune_model()
2025-09-23 15:40:03,988:INFO:tune_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>)
2025-09-23 15:40:03,988:INFO:Checking exceptions
2025-09-23 15:40:04,010:INFO:Copying training dataset
2025-09-23 15:40:04,021:INFO:Checking base model
2025-09-23 15:40:04,021:INFO:Base model : Extreme Gradient Boosting
2025-09-23 15:40:04,030:INFO:Declaring metric variables
2025-09-23 15:40:04,036:INFO:Defining Hyperparameters
2025-09-23 15:40:04,247:INFO:Tuning with n_jobs=-1
2025-09-23 15:40:04,247:INFO:Initializing RandomizedSearchCV
2025-09-23 15:40:04,975:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:04,986:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,029:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,029:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,049:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,054:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,060:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,129:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,197:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,206:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,226:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,262:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,286:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,288:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,354:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,697:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,707:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,737:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,741:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,828:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,886:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,892:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,894:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,894:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,937:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,945:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:05,957:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,015:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,533:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,620:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,622:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,628:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,654:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,656:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,659:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,794:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,834:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,888:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,914:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,945:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:06,971:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,021:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,026:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,036:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,185:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,204:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,218:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__scale_pos_weight': 38.0, 'actual_estimator__reg_lambda': 0.7, 'actual_estimator__reg_alpha': 0.001, 'actual_estimator__n_estimators': 60, 'actual_estimator__min_child_weight': 1, 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 0.7}
2025-09-23 15:40:07,219:INFO:Hyperparameter search completed
2025-09-23 15:40:07,220:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:07,221:INFO:Initializing create_model()
2025-09-23 15:40:07,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2933AA3E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.7, 'scale_pos_weight': 38.0, 'reg_lambda': 0.7, 'reg_alpha': 0.001, 'n_estimators': 60, 'min_child_weight': 1, 'max_depth': 6, 'learning_rate': 0.4, 'colsample_bytree': 0.7})
2025-09-23 15:40:07,222:INFO:Checking exceptions
2025-09-23 15:40:07,222:INFO:Importing libraries
2025-09-23 15:40:07,223:INFO:Copying training dataset
2025-09-23 15:40:07,233:INFO:Defining folds
2025-09-23 15:40:07,234:INFO:Declaring metric variables
2025-09-23 15:40:07,239:INFO:Importing untrained model
2025-09-23 15:40:07,239:INFO:Declaring custom model
2025-09-23 15:40:07,246:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:07,259:INFO:Starting cross validation
2025-09-23 15:40:07,266:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:07,855:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,855:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,857:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,861:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,861:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,867:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,868:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,869:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,877:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,877:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,882:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,884:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,888:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,890:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:07,911:INFO:Calculating mean and std
2025-09-23 15:40:07,913:INFO:Creating metrics dataframe
2025-09-23 15:40:07,922:INFO:Finalizing model
2025-09-23 15:40:08,198:INFO:Uploading results into container
2025-09-23 15:40:08,199:INFO:Uploading model into container now
2025-09-23 15:40:08,201:INFO:_master_model_container: 18
2025-09-23 15:40:08,201:INFO:_display_container: 4
2025-09-23 15:40:08,202:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=6,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=60,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:08,203:INFO:create_model() successfully completed......................................
2025-09-23 15:40:08,400:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:08,400:INFO:choose_better activated
2025-09-23 15:40:08,405:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:08,407:INFO:Initializing create_model()
2025-09-23 15:40:08,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:08,407:INFO:Checking exceptions
2025-09-23 15:40:08,410:INFO:Importing libraries
2025-09-23 15:40:08,410:INFO:Copying training dataset
2025-09-23 15:40:08,420:INFO:Defining folds
2025-09-23 15:40:08,420:INFO:Declaring metric variables
2025-09-23 15:40:08,420:INFO:Importing untrained model
2025-09-23 15:40:08,421:INFO:Declaring custom model
2025-09-23 15:40:08,422:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:08,423:INFO:Starting cross validation
2025-09-23 15:40:08,427:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:08,946:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,950:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,955:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,955:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,959:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,962:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,968:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,973:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,974:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,978:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,979:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:08,984:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:09,003:INFO:Calculating mean and std
2025-09-23 15:40:09,004:INFO:Creating metrics dataframe
2025-09-23 15:40:09,006:INFO:Finalizing model
2025-09-23 15:40:09,326:INFO:Uploading results into container
2025-09-23 15:40:09,327:INFO:Uploading model into container now
2025-09-23 15:40:09,328:INFO:_master_model_container: 19
2025-09-23 15:40:09,328:INFO:_display_container: 5
2025-09-23 15:40:09,329:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:09,330:INFO:create_model() successfully completed......................................
2025-09-23 15:40:09,517:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:09,518:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 1.0
2025-09-23 15:40:09,519:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=6,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=60,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 0.9986
2025-09-23 15:40:09,520:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-09-23 15:40:09,520:INFO:choose_better completed
2025-09-23 15:40:09,520:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-09-23 15:40:09,536:INFO:_master_model_container: 19
2025-09-23 15:40:09,536:INFO:_display_container: 4
2025-09-23 15:40:09,538:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:09,538:INFO:tune_model() successfully completed......................................
2025-09-23 15:40:09,725:INFO:Initializing plot_model()
2025-09-23 15:40:09,725:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, system=True)
2025-09-23 15:40:09,725:INFO:Checking exceptions
2025-09-23 15:40:09,734:INFO:Preloading libraries
2025-09-23 15:40:09,746:INFO:Copying training dataset
2025-09-23 15:40:09,746:INFO:Plot type: confusion_matrix
2025-09-23 15:40:09,993:INFO:Fitting Model
2025-09-23 15:40:09,994:INFO:Scoring test/hold-out set
2025-09-23 15:40:10,049:INFO:Saving 'Confusion Matrix.png'
2025-09-23 15:40:10,227:INFO:Visual Rendered Successfully
2025-09-23 15:40:10,400:INFO:plot_model() successfully completed......................................
2025-09-23 15:40:10,402:INFO:Initializing plot_model()
2025-09-23 15:40:10,402:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, system=True)
2025-09-23 15:40:10,402:INFO:Checking exceptions
2025-09-23 15:40:10,409:INFO:Preloading libraries
2025-09-23 15:40:10,420:INFO:Copying training dataset
2025-09-23 15:40:10,420:INFO:Plot type: feature
2025-09-23 15:40:10,421:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 15:40:10,538:INFO:Saving 'Feature Importance.png'
2025-09-23 15:40:10,761:INFO:Visual Rendered Successfully
2025-09-23 15:40:10,937:INFO:plot_model() successfully completed......................................
2025-09-23 15:40:10,939:INFO:Initializing plot_model()
2025-09-23 15:40:10,939:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, system=True)
2025-09-23 15:40:10,939:INFO:Checking exceptions
2025-09-23 15:40:10,947:INFO:Preloading libraries
2025-09-23 15:40:10,957:INFO:Copying training dataset
2025-09-23 15:40:10,957:INFO:Plot type: class_report
2025-09-23 15:40:11,195:INFO:Fitting Model
2025-09-23 15:40:11,196:INFO:Scoring test/hold-out set
2025-09-23 15:40:11,268:INFO:Saving 'Class Report.png'
2025-09-23 15:40:11,531:INFO:Visual Rendered Successfully
2025-09-23 15:40:11,711:INFO:plot_model() successfully completed......................................
2025-09-23 15:40:11,711:INFO:Initializing interpret_model()
2025-09-23 15:40:11,711:INFO:interpret_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=True, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>)
2025-09-23 15:40:11,711:INFO:Checking exceptions
2025-09-23 15:40:11,711:INFO:Soft dependency imported: shap: 0.44.1
2025-09-23 15:40:11,765:INFO:plot type: summary
2025-09-23 15:40:11,765:INFO:Creating TreeExplainer
2025-09-23 15:40:11,872:INFO:Compiling shap values
2025-09-23 15:40:12,077:INFO:Saving 'SHAP summary.png'
2025-09-23 15:40:12,395:INFO:Visual Rendered Successfully
2025-09-23 15:40:12,395:INFO:interpret_model() successfully completed......................................
2025-09-23 15:40:12,584:INFO:Initializing predict_model()
2025-09-23 15:40:12,584:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D2933B37F0>)
2025-09-23 15:40:12,584:INFO:Checking exceptions
2025-09-23 15:40:12,584:INFO:Preloading libraries
2025-09-23 15:40:12,989:INFO:Initializing finalize_model()
2025-09-23 15:40:12,989:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-23 15:40:12,991:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:13,002:INFO:Initializing create_model()
2025-09-23 15:40:13,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D295C18CA0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:13,002:INFO:Checking exceptions
2025-09-23 15:40:13,003:INFO:Importing libraries
2025-09-23 15:40:13,003:INFO:Copying training dataset
2025-09-23 15:40:13,003:INFO:Defining folds
2025-09-23 15:40:13,003:INFO:Declaring metric variables
2025-09-23 15:40:13,003:INFO:Importing untrained model
2025-09-23 15:40:13,003:INFO:Declaring custom model
2025-09-23 15:40:13,008:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:13,012:INFO:Cross validation set to False
2025-09-23 15:40:13,012:INFO:Fitting Model
2025-09-23 15:40:13,393:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:40:13,393:INFO:create_model() successfully completed......................................
2025-09-23 15:40:13,575:INFO:_master_model_container: 19
2025-09-23 15:40:13,576:INFO:_display_container: 5
2025-09-23 15:40:13,601:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:40:13,602:INFO:finalize_model() successfully completed......................................
2025-09-23 15:40:13,892:INFO:Initializing save_model()
2025-09-23 15:40:13,892:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), model_name=c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_A_todo, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-09-23 15:40:13,892:INFO:Adding model into prep_pipe
2025-09-23 15:40:13,892:WARNING:Only Model saved as it was a pipeline.
2025-09-23 15:40:13,923:INFO:c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_A_todo.pkl saved in current working directory
2025-09-23 15:40:13,961:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:40:13,961:INFO:save_model() successfully completed......................................
2025-09-23 15:40:14,159:INFO:PyCaret ClassificationExperiment
2025-09-23 15:40:14,159:INFO:Logging name: clf-default-name
2025-09-23 15:40:14,159:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:40:14,159:INFO:version 3.3.2
2025-09-23 15:40:14,159:INFO:Initializing setup()
2025-09-23 15:40:14,159:INFO:self.USI: 9919
2025-09-23 15:40:14,160:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'y_test', 'fold_shuffle_param', 'X_train', 'X_test', 'fix_imbalance', 'exp_id', 'fold_generator', 'data', 'memory', 'USI', 'y_train', 'html_param', 'X', 'seed', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', 'y', 'n_jobs_param', 'pipeline', '_ml_usecase', 'idx', '_available_plots', 'is_multiclass', 'logging_param'}
2025-09-23 15:40:14,160:INFO:Checking environment
2025-09-23 15:40:14,160:INFO:python_version: 3.10.18
2025-09-23 15:40:14,160:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:40:14,160:INFO:machine: AMD64
2025-09-23 15:40:14,160:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:40:14,160:INFO:Memory: svmem(total=16486035456, available=4875165696, percent=70.4, used=11610869760, free=4875165696)
2025-09-23 15:40:14,160:INFO:Physical Core: 8
2025-09-23 15:40:14,160:INFO:Logical Core: 16
2025-09-23 15:40:14,160:INFO:Checking libraries
2025-09-23 15:40:14,160:INFO:System:
2025-09-23 15:40:14,160:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:40:14,160:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:40:14,160:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:40:14,161:INFO:PyCaret required dependencies:
2025-09-23 15:40:14,161:INFO:                 pip: 25.2
2025-09-23 15:40:14,161:INFO:          setuptools: 78.1.1
2025-09-23 15:40:14,161:INFO:             pycaret: 3.3.2
2025-09-23 15:40:14,161:INFO:             IPython: 8.37.0
2025-09-23 15:40:14,161:INFO:          ipywidgets: 8.1.7
2025-09-23 15:40:14,161:INFO:                tqdm: 4.67.1
2025-09-23 15:40:14,161:INFO:               numpy: 1.26.4
2025-09-23 15:40:14,161:INFO:              pandas: 2.1.4
2025-09-23 15:40:14,161:INFO:              jinja2: 3.1.6
2025-09-23 15:40:14,161:INFO:               scipy: 1.11.4
2025-09-23 15:40:14,161:INFO:              joblib: 1.3.2
2025-09-23 15:40:14,161:INFO:             sklearn: 1.4.2
2025-09-23 15:40:14,161:INFO:                pyod: 2.0.5
2025-09-23 15:40:14,161:INFO:            imblearn: 0.14.0
2025-09-23 15:40:14,161:INFO:   category_encoders: 2.7.0
2025-09-23 15:40:14,161:INFO:            lightgbm: 4.6.0
2025-09-23 15:40:14,161:INFO:               numba: 0.61.0
2025-09-23 15:40:14,161:INFO:            requests: 2.32.5
2025-09-23 15:40:14,161:INFO:          matplotlib: 3.7.5
2025-09-23 15:40:14,161:INFO:          scikitplot: 0.3.7
2025-09-23 15:40:14,161:INFO:         yellowbrick: 1.5
2025-09-23 15:40:14,161:INFO:              plotly: 5.24.1
2025-09-23 15:40:14,161:INFO:    plotly-resampler: Not installed
2025-09-23 15:40:14,162:INFO:             kaleido: 1.1.0
2025-09-23 15:40:14,162:INFO:           schemdraw: 0.15
2025-09-23 15:40:14,162:INFO:         statsmodels: 0.14.5
2025-09-23 15:40:14,162:INFO:              sktime: 0.26.0
2025-09-23 15:40:14,162:INFO:               tbats: 1.1.3
2025-09-23 15:40:14,162:INFO:            pmdarima: 2.0.4
2025-09-23 15:40:14,162:INFO:              psutil: 7.1.0
2025-09-23 15:40:14,162:INFO:          markupsafe: 3.0.2
2025-09-23 15:40:14,162:INFO:             pickle5: Not installed
2025-09-23 15:40:14,162:INFO:         cloudpickle: 3.1.1
2025-09-23 15:40:14,162:INFO:         deprecation: 2.1.0
2025-09-23 15:40:14,162:INFO:              xxhash: 3.5.0
2025-09-23 15:40:14,162:INFO:           wurlitzer: Not installed
2025-09-23 15:40:14,162:INFO:PyCaret optional dependencies:
2025-09-23 15:40:14,162:INFO:                shap: 0.44.1
2025-09-23 15:40:14,162:INFO:           interpret: 0.7.2
2025-09-23 15:40:14,162:INFO:                umap: 0.5.7
2025-09-23 15:40:14,162:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:40:14,163:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:40:14,163:INFO:             autoviz: Not installed
2025-09-23 15:40:14,163:INFO:           fairlearn: 0.7.0
2025-09-23 15:40:14,163:INFO:          deepchecks: Not installed
2025-09-23 15:40:14,163:INFO:             xgboost: 3.0.5
2025-09-23 15:40:14,163:INFO:            catboost: 1.2.8
2025-09-23 15:40:14,163:INFO:              kmodes: 0.12.2
2025-09-23 15:40:14,163:INFO:             mlxtend: 0.23.4
2025-09-23 15:40:14,163:INFO:       statsforecast: 1.5.0
2025-09-23 15:40:14,163:INFO:        tune_sklearn: Not installed
2025-09-23 15:40:14,163:INFO:                 ray: Not installed
2025-09-23 15:40:14,163:INFO:            hyperopt: 0.2.7
2025-09-23 15:40:14,163:INFO:              optuna: 4.5.0
2025-09-23 15:40:14,163:INFO:               skopt: 0.10.2
2025-09-23 15:40:14,163:INFO:              mlflow: 3.4.0
2025-09-23 15:40:14,163:INFO:              gradio: 5.46.1
2025-09-23 15:40:14,163:INFO:             fastapi: 0.117.1
2025-09-23 15:40:14,163:INFO:             uvicorn: 0.36.0
2025-09-23 15:40:14,163:INFO:              m2cgen: 0.10.0
2025-09-23 15:40:14,164:INFO:           evidently: 0.4.40
2025-09-23 15:40:14,164:INFO:               fugue: 0.8.7
2025-09-23 15:40:14,164:INFO:           streamlit: Not installed
2025-09-23 15:40:14,164:INFO:             prophet: Not installed
2025-09-23 15:40:14,164:INFO:None
2025-09-23 15:40:14,164:INFO:Set up data.
2025-09-23 15:40:14,178:INFO:Set up folding strategy.
2025-09-23 15:40:14,178:INFO:Set up train/test split.
2025-09-23 15:40:14,191:INFO:Set up index.
2025-09-23 15:40:14,191:INFO:Assigning column types.
2025-09-23 15:40:14,197:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:40:14,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:40:14,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:40:14,294:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:14,297:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:14,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:40:14,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:40:14,393:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:14,398:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:14,399:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:40:14,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:40:14,494:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:14,497:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:14,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:40:14,601:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:14,605:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:14,607:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:40:14,710:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:14,714:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:14,816:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:14,820:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:14,821:INFO:Preparing preprocessing pipeline...
2025-09-23 15:40:14,823:INFO:Set up label encoding.
2025-09-23 15:40:14,823:INFO:Set up simple imputation.
2025-09-23 15:40:14,831:INFO:Set up encoding of ordinal features.
2025-09-23 15:40:14,834:INFO:Set up encoding of categorical features.
2025-09-23 15:40:14,835:INFO:Set up column name cleaning.
2025-09-23 15:40:15,111:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:40:15,133:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_...
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:40:15,133:INFO:Creating final display dataframe.
2025-09-23 15:40:15,824:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                   (1000, 35)
5        Transformed data shape                                   (1000, 50)
6   Transformed train set shape                                    (700, 50)
7    Transformed test set shape                                    (300, 50)
8               Ignore features                                           10
9              Numeric features                                            4
10         Categorical features                                           10
11                   Preprocess                                         True
12              Imputation type                                       simple
13           Numeric imputation                                         mean
14       Categorical imputation                                         mode
15     Maximum one-hot encoding                                           25
16              Encoding method                                         None
17               Fold Generator                              StratifiedKFold
18                  Fold Number                                            5
19                     CPU Jobs                                           -1
20                      Use GPU                                        False
21               Log Experiment                                        False
22              Experiment Name                             clf-default-name
23                          USI                                         9919
2025-09-23 15:40:15,927:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:15,932:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:16,037:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:40:16,040:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:40:16,042:INFO:setup() successfully completed in 1.89s...............
2025-09-23 15:40:16,042:INFO:Initializing compare_models()
2025-09-23 15:40:16,042:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:40:16,042:INFO:Checking exceptions
2025-09-23 15:40:16,049:INFO:Preparing display monitor
2025-09-23 15:40:16,102:INFO:Initializing Logistic Regression
2025-09-23 15:40:16,103:INFO:Total runtime is 1.8433729807535806e-05 minutes
2025-09-23 15:40:16,111:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:16,113:INFO:Initializing create_model()
2025-09-23 15:40:16,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:16,113:INFO:Checking exceptions
2025-09-23 15:40:16,113:INFO:Importing libraries
2025-09-23 15:40:16,113:INFO:Copying training dataset
2025-09-23 15:40:16,129:INFO:Defining folds
2025-09-23 15:40:16,129:INFO:Declaring metric variables
2025-09-23 15:40:16,139:INFO:Importing untrained model
2025-09-23 15:40:16,150:INFO:Logistic Regression Imported successfully
2025-09-23 15:40:16,163:INFO:Starting cross validation
2025-09-23 15:40:16,171:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:16,873:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:40:16,926:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:40:16,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:40:16,942:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:40:16,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:40:16,980:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:16,984:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:16,991:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:16,999:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,030:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:17,036:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:17,040:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:17,040:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,044:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,047:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,047:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:17,047:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,049:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,052:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,054:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,054:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,068:INFO:Calculating mean and std
2025-09-23 15:40:17,068:INFO:Creating metrics dataframe
2025-09-23 15:40:17,072:INFO:Uploading results into container
2025-09-23 15:40:17,073:INFO:Uploading model into container now
2025-09-23 15:40:17,076:INFO:_master_model_container: 1
2025-09-23 15:40:17,076:INFO:_display_container: 2
2025-09-23 15:40:17,077:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:40:17,077:INFO:create_model() successfully completed......................................
2025-09-23 15:40:17,246:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:17,260:INFO:Creating metrics dataframe
2025-09-23 15:40:17,270:INFO:Initializing K Neighbors Classifier
2025-09-23 15:40:17,270:INFO:Total runtime is 0.01945501963297526 minutes
2025-09-23 15:40:17,274:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:17,276:INFO:Initializing create_model()
2025-09-23 15:40:17,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:17,276:INFO:Checking exceptions
2025-09-23 15:40:17,276:INFO:Importing libraries
2025-09-23 15:40:17,276:INFO:Copying training dataset
2025-09-23 15:40:17,278:INFO:Defining folds
2025-09-23 15:40:17,278:INFO:Declaring metric variables
2025-09-23 15:40:17,295:INFO:Importing untrained model
2025-09-23 15:40:17,302:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:40:17,314:INFO:Starting cross validation
2025-09-23 15:40:17,323:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,757:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,757:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,762:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,763:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,763:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,780:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:17,805:INFO:Calculating mean and std
2025-09-23 15:40:17,805:INFO:Creating metrics dataframe
2025-09-23 15:40:17,809:INFO:Uploading results into container
2025-09-23 15:40:17,810:INFO:Uploading model into container now
2025-09-23 15:40:17,813:INFO:_master_model_container: 2
2025-09-23 15:40:17,813:INFO:_display_container: 2
2025-09-23 15:40:17,814:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 15:40:17,814:INFO:create_model() successfully completed......................................
2025-09-23 15:40:17,982:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:17,982:INFO:Creating metrics dataframe
2025-09-23 15:40:18,003:INFO:Initializing Naive Bayes
2025-09-23 15:40:18,003:INFO:Total runtime is 0.031679177284240724 minutes
2025-09-23 15:40:18,007:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:18,009:INFO:Initializing create_model()
2025-09-23 15:40:18,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:18,009:INFO:Checking exceptions
2025-09-23 15:40:18,009:INFO:Importing libraries
2025-09-23 15:40:18,009:INFO:Copying training dataset
2025-09-23 15:40:18,013:INFO:Defining folds
2025-09-23 15:40:18,013:INFO:Declaring metric variables
2025-09-23 15:40:18,029:INFO:Importing untrained model
2025-09-23 15:40:18,035:INFO:Naive Bayes Imported successfully
2025-09-23 15:40:18,047:INFO:Starting cross validation
2025-09-23 15:40:18,052:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:18,464:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,474:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,499:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,499:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,503:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,503:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,503:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,508:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,510:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,513:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:18,528:INFO:Calculating mean and std
2025-09-23 15:40:18,530:INFO:Creating metrics dataframe
2025-09-23 15:40:18,531:INFO:Uploading results into container
2025-09-23 15:40:18,534:INFO:Uploading model into container now
2025-09-23 15:40:18,534:INFO:_master_model_container: 3
2025-09-23 15:40:18,534:INFO:_display_container: 2
2025-09-23 15:40:18,534:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 15:40:18,536:INFO:create_model() successfully completed......................................
2025-09-23 15:40:18,731:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:18,731:INFO:Creating metrics dataframe
2025-09-23 15:40:18,740:INFO:Initializing Decision Tree Classifier
2025-09-23 15:40:18,740:INFO:Total runtime is 0.04396182298660278 minutes
2025-09-23 15:40:18,746:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:18,747:INFO:Initializing create_model()
2025-09-23 15:40:18,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:18,748:INFO:Checking exceptions
2025-09-23 15:40:18,748:INFO:Importing libraries
2025-09-23 15:40:18,748:INFO:Copying training dataset
2025-09-23 15:40:18,758:INFO:Defining folds
2025-09-23 15:40:18,758:INFO:Declaring metric variables
2025-09-23 15:40:18,766:INFO:Importing untrained model
2025-09-23 15:40:18,774:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:40:18,786:INFO:Starting cross validation
2025-09-23 15:40:18,792:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:19,177:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,183:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,187:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,188:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,193:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,198:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,213:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,216:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,217:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,220:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,221:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,223:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,225:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,230:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,233:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,251:INFO:Calculating mean and std
2025-09-23 15:40:19,253:INFO:Creating metrics dataframe
2025-09-23 15:40:19,257:INFO:Uploading results into container
2025-09-23 15:40:19,259:INFO:Uploading model into container now
2025-09-23 15:40:19,260:INFO:_master_model_container: 4
2025-09-23 15:40:19,261:INFO:_display_container: 2
2025-09-23 15:40:19,261:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:40:19,261:INFO:create_model() successfully completed......................................
2025-09-23 15:40:19,443:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:19,443:INFO:Creating metrics dataframe
2025-09-23 15:40:19,454:INFO:Initializing SVM - Linear Kernel
2025-09-23 15:40:19,454:INFO:Total runtime is 0.0558681845664978 minutes
2025-09-23 15:40:19,461:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:19,461:INFO:Initializing create_model()
2025-09-23 15:40:19,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:19,462:INFO:Checking exceptions
2025-09-23 15:40:19,462:INFO:Importing libraries
2025-09-23 15:40:19,462:INFO:Copying training dataset
2025-09-23 15:40:19,480:INFO:Defining folds
2025-09-23 15:40:19,481:INFO:Declaring metric variables
2025-09-23 15:40:19,506:INFO:Importing untrained model
2025-09-23 15:40:19,516:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 15:40:19,527:INFO:Starting cross validation
2025-09-23 15:40:19,533:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:19,928:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:19,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:19,933:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:19,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,935:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,936:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,938:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:19,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,942:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:19,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:19,965:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,968:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:19,969:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,973:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,973:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,975:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:19,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:19,985:INFO:Calculating mean and std
2025-09-23 15:40:19,986:INFO:Creating metrics dataframe
2025-09-23 15:40:19,989:INFO:Uploading results into container
2025-09-23 15:40:19,990:INFO:Uploading model into container now
2025-09-23 15:40:19,992:INFO:_master_model_container: 5
2025-09-23 15:40:19,992:INFO:_display_container: 2
2025-09-23 15:40:19,993:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 15:40:19,993:INFO:create_model() successfully completed......................................
2025-09-23 15:40:20,174:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:20,174:INFO:Creating metrics dataframe
2025-09-23 15:40:20,184:INFO:Initializing Ridge Classifier
2025-09-23 15:40:20,184:INFO:Total runtime is 0.06802817583084106 minutes
2025-09-23 15:40:20,190:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:20,191:INFO:Initializing create_model()
2025-09-23 15:40:20,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:20,192:INFO:Checking exceptions
2025-09-23 15:40:20,192:INFO:Importing libraries
2025-09-23 15:40:20,192:INFO:Copying training dataset
2025-09-23 15:40:20,205:INFO:Defining folds
2025-09-23 15:40:20,205:INFO:Declaring metric variables
2025-09-23 15:40:20,212:INFO:Importing untrained model
2025-09-23 15:40:20,219:INFO:Ridge Classifier Imported successfully
2025-09-23 15:40:20,233:INFO:Starting cross validation
2025-09-23 15:40:20,239:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:20,641:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:20,642:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:20,643:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:20,644:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,644:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,648:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,650:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,650:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,652:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,654:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,655:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,656:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:20,666:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,670:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,674:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:20,674:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,676:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,679:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,683:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:20,701:INFO:Calculating mean and std
2025-09-23 15:40:20,702:INFO:Creating metrics dataframe
2025-09-23 15:40:20,704:INFO:Uploading results into container
2025-09-23 15:40:20,707:INFO:Uploading model into container now
2025-09-23 15:40:20,707:INFO:_master_model_container: 6
2025-09-23 15:40:20,708:INFO:_display_container: 2
2025-09-23 15:40:20,708:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 15:40:20,708:INFO:create_model() successfully completed......................................
2025-09-23 15:40:20,886:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:20,887:INFO:Creating metrics dataframe
2025-09-23 15:40:20,898:INFO:Initializing Random Forest Classifier
2025-09-23 15:40:20,898:INFO:Total runtime is 0.07992141246795653 minutes
2025-09-23 15:40:20,903:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:20,903:INFO:Initializing create_model()
2025-09-23 15:40:20,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:20,904:INFO:Checking exceptions
2025-09-23 15:40:20,904:INFO:Importing libraries
2025-09-23 15:40:20,904:INFO:Copying training dataset
2025-09-23 15:40:20,914:INFO:Defining folds
2025-09-23 15:40:20,914:INFO:Declaring metric variables
2025-09-23 15:40:20,920:INFO:Importing untrained model
2025-09-23 15:40:20,926:INFO:Random Forest Classifier Imported successfully
2025-09-23 15:40:20,936:INFO:Starting cross validation
2025-09-23 15:40:20,941:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:21,723:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,725:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,734:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,739:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,740:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,746:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,748:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,753:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,753:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,786:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,788:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,790:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,790:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:21,804:INFO:Calculating mean and std
2025-09-23 15:40:21,806:INFO:Creating metrics dataframe
2025-09-23 15:40:21,809:INFO:Uploading results into container
2025-09-23 15:40:21,809:INFO:Uploading model into container now
2025-09-23 15:40:21,812:INFO:_master_model_container: 7
2025-09-23 15:40:21,812:INFO:_display_container: 2
2025-09-23 15:40:21,812:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 15:40:21,814:INFO:create_model() successfully completed......................................
2025-09-23 15:40:22,003:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:22,004:INFO:Creating metrics dataframe
2025-09-23 15:40:22,020:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 15:40:22,020:INFO:Total runtime is 0.09862801631291707 minutes
2025-09-23 15:40:22,024:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:22,026:INFO:Initializing create_model()
2025-09-23 15:40:22,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:22,026:INFO:Checking exceptions
2025-09-23 15:40:22,027:INFO:Importing libraries
2025-09-23 15:40:22,027:INFO:Copying training dataset
2025-09-23 15:40:22,039:INFO:Defining folds
2025-09-23 15:40:22,039:INFO:Declaring metric variables
2025-09-23 15:40:22,080:INFO:Importing untrained model
2025-09-23 15:40:22,100:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 15:40:22,115:INFO:Starting cross validation
2025-09-23 15:40:22,122:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:22,384:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:40:22,396:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:40:22,396:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:40:22,396:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:40:22,396:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:40:22,470:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:22,472:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,476:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:22,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:22,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,491:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,493:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,493:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:22,495:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,497:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:22,497:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,500:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,502:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,502:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,502:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:22,528:INFO:Calculating mean and std
2025-09-23 15:40:22,531:INFO:Creating metrics dataframe
2025-09-23 15:40:22,533:INFO:Uploading results into container
2025-09-23 15:40:22,535:INFO:Uploading model into container now
2025-09-23 15:40:22,535:INFO:_master_model_container: 8
2025-09-23 15:40:22,535:INFO:_display_container: 2
2025-09-23 15:40:22,535:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 15:40:22,535:INFO:create_model() successfully completed......................................
2025-09-23 15:40:22,710:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:22,710:INFO:Creating metrics dataframe
2025-09-23 15:40:22,729:INFO:Initializing Ada Boost Classifier
2025-09-23 15:40:22,729:INFO:Total runtime is 0.11044923067092895 minutes
2025-09-23 15:40:22,735:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:22,735:INFO:Initializing create_model()
2025-09-23 15:40:22,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:22,735:INFO:Checking exceptions
2025-09-23 15:40:22,738:INFO:Importing libraries
2025-09-23 15:40:22,738:INFO:Copying training dataset
2025-09-23 15:40:22,746:INFO:Defining folds
2025-09-23 15:40:22,746:INFO:Declaring metric variables
2025-09-23 15:40:22,758:INFO:Importing untrained model
2025-09-23 15:40:22,765:INFO:Ada Boost Classifier Imported successfully
2025-09-23 15:40:22,770:INFO:Starting cross validation
2025-09-23 15:40:22,782:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:23,058:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:40:23,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:40:23,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:40:23,087:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:40:23,102:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:40:23,343:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:23,345:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,353:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,358:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,382:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:23,385:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:23,385:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,388:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,389:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:23,392:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,393:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,395:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,397:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,399:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,402:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,403:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,423:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:23,425:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,428:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,432:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:23,446:INFO:Calculating mean and std
2025-09-23 15:40:23,449:INFO:Creating metrics dataframe
2025-09-23 15:40:23,451:INFO:Uploading results into container
2025-09-23 15:40:23,452:INFO:Uploading model into container now
2025-09-23 15:40:23,452:INFO:_master_model_container: 9
2025-09-23 15:40:23,452:INFO:_display_container: 2
2025-09-23 15:40:23,453:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 15:40:23,453:INFO:create_model() successfully completed......................................
2025-09-23 15:40:23,636:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:23,636:INFO:Creating metrics dataframe
2025-09-23 15:40:23,654:INFO:Initializing Gradient Boosting Classifier
2025-09-23 15:40:23,654:INFO:Total runtime is 0.12586803038914998 minutes
2025-09-23 15:40:23,660:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:23,662:INFO:Initializing create_model()
2025-09-23 15:40:23,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:23,664:INFO:Checking exceptions
2025-09-23 15:40:23,664:INFO:Importing libraries
2025-09-23 15:40:23,664:INFO:Copying training dataset
2025-09-23 15:40:23,676:INFO:Defining folds
2025-09-23 15:40:23,676:INFO:Declaring metric variables
2025-09-23 15:40:23,685:INFO:Importing untrained model
2025-09-23 15:40:23,691:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 15:40:23,705:INFO:Starting cross validation
2025-09-23 15:40:23,711:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:24,909:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:24,913:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,920:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,926:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:24,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,945:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:24,947:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:24,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,949:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,951:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,957:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,964:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,964:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,975:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:24,977:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,983:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,989:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:24,999:INFO:Calculating mean and std
2025-09-23 15:40:25,002:INFO:Creating metrics dataframe
2025-09-23 15:40:25,005:INFO:Uploading results into container
2025-09-23 15:40:25,006:INFO:Uploading model into container now
2025-09-23 15:40:25,007:INFO:_master_model_container: 10
2025-09-23 15:40:25,007:INFO:_display_container: 2
2025-09-23 15:40:25,008:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 15:40:25,008:INFO:create_model() successfully completed......................................
2025-09-23 15:40:25,206:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:25,206:INFO:Creating metrics dataframe
2025-09-23 15:40:25,221:INFO:Initializing Linear Discriminant Analysis
2025-09-23 15:40:25,222:INFO:Total runtime is 0.15200128157933554 minutes
2025-09-23 15:40:25,227:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:25,228:INFO:Initializing create_model()
2025-09-23 15:40:25,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:25,229:INFO:Checking exceptions
2025-09-23 15:40:25,229:INFO:Importing libraries
2025-09-23 15:40:25,229:INFO:Copying training dataset
2025-09-23 15:40:25,239:INFO:Defining folds
2025-09-23 15:40:25,239:INFO:Declaring metric variables
2025-09-23 15:40:25,248:INFO:Importing untrained model
2025-09-23 15:40:25,255:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 15:40:25,269:INFO:Starting cross validation
2025-09-23 15:40:25,273:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:25,692:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:25,694:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,694:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:25,695:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,698:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:25,700:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,701:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,701:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,702:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,706:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,707:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,707:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,713:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,722:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:40:25,724:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,731:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:25,745:INFO:Calculating mean and std
2025-09-23 15:40:25,748:INFO:Creating metrics dataframe
2025-09-23 15:40:25,750:INFO:Uploading results into container
2025-09-23 15:40:25,751:INFO:Uploading model into container now
2025-09-23 15:40:25,752:INFO:_master_model_container: 11
2025-09-23 15:40:25,752:INFO:_display_container: 2
2025-09-23 15:40:25,753:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 15:40:25,753:INFO:create_model() successfully completed......................................
2025-09-23 15:40:25,947:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:25,948:INFO:Creating metrics dataframe
2025-09-23 15:40:25,962:INFO:Initializing Extra Trees Classifier
2025-09-23 15:40:25,963:INFO:Total runtime is 0.1643478830655416 minutes
2025-09-23 15:40:25,969:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:25,970:INFO:Initializing create_model()
2025-09-23 15:40:25,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:25,970:INFO:Checking exceptions
2025-09-23 15:40:25,970:INFO:Importing libraries
2025-09-23 15:40:25,970:INFO:Copying training dataset
2025-09-23 15:40:25,980:INFO:Defining folds
2025-09-23 15:40:25,980:INFO:Declaring metric variables
2025-09-23 15:40:25,988:INFO:Importing untrained model
2025-09-23 15:40:25,997:INFO:Extra Trees Classifier Imported successfully
2025-09-23 15:40:26,008:INFO:Starting cross validation
2025-09-23 15:40:26,014:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:26,758:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,764:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,772:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,783:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,790:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,794:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,795:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,795:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,798:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,799:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,799:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:26,809:INFO:Calculating mean and std
2025-09-23 15:40:26,811:INFO:Creating metrics dataframe
2025-09-23 15:40:26,814:INFO:Uploading results into container
2025-09-23 15:40:26,814:INFO:Uploading model into container now
2025-09-23 15:40:26,815:INFO:_master_model_container: 12
2025-09-23 15:40:26,815:INFO:_display_container: 2
2025-09-23 15:40:26,816:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 15:40:26,816:INFO:create_model() successfully completed......................................
2025-09-23 15:40:27,006:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:27,007:INFO:Creating metrics dataframe
2025-09-23 15:40:27,021:INFO:Initializing Extreme Gradient Boosting
2025-09-23 15:40:27,021:INFO:Total runtime is 0.18197932640711467 minutes
2025-09-23 15:40:27,029:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:27,030:INFO:Initializing create_model()
2025-09-23 15:40:27,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:27,031:INFO:Checking exceptions
2025-09-23 15:40:27,031:INFO:Importing libraries
2025-09-23 15:40:27,032:INFO:Copying training dataset
2025-09-23 15:40:27,042:INFO:Defining folds
2025-09-23 15:40:27,042:INFO:Declaring metric variables
2025-09-23 15:40:27,046:INFO:Importing untrained model
2025-09-23 15:40:27,056:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:27,062:INFO:Starting cross validation
2025-09-23 15:40:27,070:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:27,625:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,632:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,632:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,640:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,646:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,646:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,646:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,658:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,669:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,672:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,672:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,679:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,684:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:27,696:INFO:Calculating mean and std
2025-09-23 15:40:27,696:INFO:Creating metrics dataframe
2025-09-23 15:40:27,700:INFO:Uploading results into container
2025-09-23 15:40:27,702:INFO:Uploading model into container now
2025-09-23 15:40:27,702:INFO:_master_model_container: 13
2025-09-23 15:40:27,702:INFO:_display_container: 2
2025-09-23 15:40:27,702:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:27,702:INFO:create_model() successfully completed......................................
2025-09-23 15:40:27,886:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:27,886:INFO:Creating metrics dataframe
2025-09-23 15:40:27,900:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 15:40:27,900:INFO:Total runtime is 0.1966311017672221 minutes
2025-09-23 15:40:27,911:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:27,911:INFO:Initializing create_model()
2025-09-23 15:40:27,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:27,911:INFO:Checking exceptions
2025-09-23 15:40:27,911:INFO:Importing libraries
2025-09-23 15:40:27,911:INFO:Copying training dataset
2025-09-23 15:40:27,929:INFO:Defining folds
2025-09-23 15:40:27,929:INFO:Declaring metric variables
2025-09-23 15:40:27,937:INFO:Importing untrained model
2025-09-23 15:40:27,945:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 15:40:27,955:INFO:Starting cross validation
2025-09-23 15:40:27,961:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:29,211:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,218:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,224:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,232:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,238:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,238:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,243:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,243:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,244:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,249:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,255:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,282:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,288:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,293:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:29,307:INFO:Calculating mean and std
2025-09-23 15:40:29,309:INFO:Creating metrics dataframe
2025-09-23 15:40:29,312:INFO:Uploading results into container
2025-09-23 15:40:29,314:INFO:Uploading model into container now
2025-09-23 15:40:29,314:INFO:_master_model_container: 14
2025-09-23 15:40:29,315:INFO:_display_container: 2
2025-09-23 15:40:29,316:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 15:40:29,316:INFO:create_model() successfully completed......................................
2025-09-23 15:40:29,510:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:29,510:INFO:Creating metrics dataframe
2025-09-23 15:40:29,524:INFO:Initializing CatBoost Classifier
2025-09-23 15:40:29,524:INFO:Total runtime is 0.2236894726753235 minutes
2025-09-23 15:40:29,530:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:29,531:INFO:Initializing create_model()
2025-09-23 15:40:29,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:29,531:INFO:Checking exceptions
2025-09-23 15:40:29,531:INFO:Importing libraries
2025-09-23 15:40:29,531:INFO:Copying training dataset
2025-09-23 15:40:29,540:INFO:Defining folds
2025-09-23 15:40:29,540:INFO:Declaring metric variables
2025-09-23 15:40:29,549:INFO:Importing untrained model
2025-09-23 15:40:29,558:INFO:CatBoost Classifier Imported successfully
2025-09-23 15:40:29,573:INFO:Starting cross validation
2025-09-23 15:40:29,578:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:36,846:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:36,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:36,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:36,923:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:36,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:36,937:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:37,007:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:37,014:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:37,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,268:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,272:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,276:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,347:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,352:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,356:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:38,368:INFO:Calculating mean and std
2025-09-23 15:40:38,369:INFO:Creating metrics dataframe
2025-09-23 15:40:38,372:INFO:Uploading results into container
2025-09-23 15:40:38,373:INFO:Uploading model into container now
2025-09-23 15:40:38,373:INFO:_master_model_container: 15
2025-09-23 15:40:38,374:INFO:_display_container: 2
2025-09-23 15:40:38,374:INFO:<catboost.core.CatBoostClassifier object at 0x000001D2A212B250>
2025-09-23 15:40:38,375:INFO:create_model() successfully completed......................................
2025-09-23 15:40:38,563:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:38,563:INFO:Creating metrics dataframe
2025-09-23 15:40:38,577:INFO:Initializing Dummy Classifier
2025-09-23 15:40:38,578:INFO:Total runtime is 0.37460078398386637 minutes
2025-09-23 15:40:38,584:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:38,585:INFO:Initializing create_model()
2025-09-23 15:40:38,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1B5BE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:38,585:INFO:Checking exceptions
2025-09-23 15:40:38,585:INFO:Importing libraries
2025-09-23 15:40:38,585:INFO:Copying training dataset
2025-09-23 15:40:38,594:INFO:Defining folds
2025-09-23 15:40:38,594:INFO:Declaring metric variables
2025-09-23 15:40:38,644:INFO:Importing untrained model
2025-09-23 15:40:38,654:INFO:Dummy Classifier Imported successfully
2025-09-23 15:40:38,673:INFO:Starting cross validation
2025-09-23 15:40:38,677:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:39,048:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,053:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,055:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:39,058:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,075:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,076:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,080:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,081:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:39,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:39,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,086:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,087:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,091:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,093:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:39,095:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,107:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,111:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:40:39,116:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:39,129:INFO:Calculating mean and std
2025-09-23 15:40:39,130:INFO:Creating metrics dataframe
2025-09-23 15:40:39,134:INFO:Uploading results into container
2025-09-23 15:40:39,134:INFO:Uploading model into container now
2025-09-23 15:40:39,135:INFO:_master_model_container: 16
2025-09-23 15:40:39,135:INFO:_display_container: 2
2025-09-23 15:40:39,135:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 15:40:39,135:INFO:create_model() successfully completed......................................
2025-09-23 15:40:39,319:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:39,319:INFO:Creating metrics dataframe
2025-09-23 15:40:39,352:INFO:Initializing create_model()
2025-09-23 15:40:39,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:39,353:INFO:Checking exceptions
2025-09-23 15:40:39,355:INFO:Importing libraries
2025-09-23 15:40:39,356:INFO:Copying training dataset
2025-09-23 15:40:39,366:INFO:Defining folds
2025-09-23 15:40:39,366:INFO:Declaring metric variables
2025-09-23 15:40:39,366:INFO:Importing untrained model
2025-09-23 15:40:39,366:INFO:Declaring custom model
2025-09-23 15:40:39,367:INFO:Logistic Regression Imported successfully
2025-09-23 15:40:39,371:INFO:Cross validation set to False
2025-09-23 15:40:39,371:INFO:Fitting Model
2025-09-23 15:40:39,834:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:40:39,834:INFO:create_model() successfully completed......................................
2025-09-23 15:40:40,070:INFO:_master_model_container: 16
2025-09-23 15:40:40,071:INFO:_display_container: 2
2025-09-23 15:40:40,071:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:40:40,071:INFO:compare_models() successfully completed......................................
2025-09-23 15:40:40,074:INFO:Initializing create_model()
2025-09-23 15:40:40,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:40,074:INFO:Checking exceptions
2025-09-23 15:40:40,100:INFO:Importing libraries
2025-09-23 15:40:40,100:INFO:Copying training dataset
2025-09-23 15:40:40,120:INFO:Defining folds
2025-09-23 15:40:40,120:INFO:Declaring metric variables
2025-09-23 15:40:40,128:INFO:Importing untrained model
2025-09-23 15:40:40,136:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:40,152:INFO:Starting cross validation
2025-09-23 15:40:40,162:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:40,671:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,677:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,681:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,706:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,710:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,716:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,721:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,728:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,734:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,738:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,752:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,755:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,759:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:40,778:INFO:Calculating mean and std
2025-09-23 15:40:40,780:INFO:Creating metrics dataframe
2025-09-23 15:40:40,787:INFO:Finalizing model
2025-09-23 15:40:41,196:INFO:Uploading results into container
2025-09-23 15:40:41,198:INFO:Uploading model into container now
2025-09-23 15:40:41,215:INFO:_master_model_container: 17
2025-09-23 15:40:41,215:INFO:_display_container: 3
2025-09-23 15:40:41,216:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:41,217:INFO:create_model() successfully completed......................................
2025-09-23 15:40:41,425:INFO:Initializing tune_model()
2025-09-23 15:40:41,425:INFO:tune_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>)
2025-09-23 15:40:41,431:INFO:Checking exceptions
2025-09-23 15:40:41,453:INFO:Copying training dataset
2025-09-23 15:40:41,464:INFO:Checking base model
2025-09-23 15:40:41,464:INFO:Base model : Extreme Gradient Boosting
2025-09-23 15:40:41,468:INFO:Declaring metric variables
2025-09-23 15:40:41,476:INFO:Defining Hyperparameters
2025-09-23 15:40:41,676:INFO:Tuning with n_jobs=-1
2025-09-23 15:40:41,676:INFO:Initializing RandomizedSearchCV
2025-09-23 15:40:42,356:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,368:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,370:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,434:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,444:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,534:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,579:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,585:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,631:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,688:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,698:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,706:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,719:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,746:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:42,769:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,039:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,118:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,146:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,147:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,172:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,172:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,184:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,193:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,235:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,250:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,286:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,297:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,300:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,303:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,838:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,852:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,870:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,886:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:43,959:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,021:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,090:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,169:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,176:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,177:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,191:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,204:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,208:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,362:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,391:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,395:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,407:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,416:INFO:best_params: {'actual_estimator__subsample': 1, 'actual_estimator__scale_pos_weight': 27.1, 'actual_estimator__reg_lambda': 1e-07, 'actual_estimator__reg_alpha': 1e-06, 'actual_estimator__n_estimators': 30, 'actual_estimator__min_child_weight': 1, 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 0.5}
2025-09-23 15:40:44,417:INFO:Hyperparameter search completed
2025-09-23 15:40:44,417:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:44,419:INFO:Initializing create_model()
2025-09-23 15:40:44,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A1A5E440>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 1, 'scale_pos_weight': 27.1, 'reg_lambda': 1e-07, 'reg_alpha': 1e-06, 'n_estimators': 30, 'min_child_weight': 1, 'max_depth': 4, 'learning_rate': 0.4, 'colsample_bytree': 0.5})
2025-09-23 15:40:44,419:INFO:Checking exceptions
2025-09-23 15:40:44,420:INFO:Importing libraries
2025-09-23 15:40:44,421:INFO:Copying training dataset
2025-09-23 15:40:44,430:INFO:Defining folds
2025-09-23 15:40:44,430:INFO:Declaring metric variables
2025-09-23 15:40:44,436:INFO:Importing untrained model
2025-09-23 15:40:44,436:INFO:Declaring custom model
2025-09-23 15:40:44,443:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:44,455:INFO:Starting cross validation
2025-09-23 15:40:44,460:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:44,910:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,915:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,922:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,935:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,950:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,968:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,972:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,975:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,978:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:44,995:INFO:Calculating mean and std
2025-09-23 15:40:44,997:INFO:Creating metrics dataframe
2025-09-23 15:40:45,005:INFO:Finalizing model
2025-09-23 15:40:45,232:INFO:Uploading results into container
2025-09-23 15:40:45,234:INFO:Uploading model into container now
2025-09-23 15:40:45,236:INFO:_master_model_container: 18
2025-09-23 15:40:45,236:INFO:_display_container: 4
2025-09-23 15:40:45,238:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:45,238:INFO:create_model() successfully completed......................................
2025-09-23 15:40:45,435:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:45,435:INFO:choose_better activated
2025-09-23 15:40:45,440:INFO:SubProcess create_model() called ==================================
2025-09-23 15:40:45,441:INFO:Initializing create_model()
2025-09-23 15:40:45,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:45,442:INFO:Checking exceptions
2025-09-23 15:40:45,443:INFO:Importing libraries
2025-09-23 15:40:45,444:INFO:Copying training dataset
2025-09-23 15:40:45,452:INFO:Defining folds
2025-09-23 15:40:45,453:INFO:Declaring metric variables
2025-09-23 15:40:45,453:INFO:Importing untrained model
2025-09-23 15:40:45,453:INFO:Declaring custom model
2025-09-23 15:40:45,455:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:45,455:INFO:Starting cross validation
2025-09-23 15:40:45,458:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:40:45,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,971:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,974:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,977:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,978:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,983:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,985:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:45,990:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,034:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,034:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,037:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,038:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,041:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:40:46,060:INFO:Calculating mean and std
2025-09-23 15:40:46,060:INFO:Creating metrics dataframe
2025-09-23 15:40:46,063:INFO:Finalizing model
2025-09-23 15:40:46,429:INFO:Uploading results into container
2025-09-23 15:40:46,430:INFO:Uploading model into container now
2025-09-23 15:40:46,431:INFO:_master_model_container: 19
2025-09-23 15:40:46,431:INFO:_display_container: 5
2025-09-23 15:40:46,432:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:46,432:INFO:create_model() successfully completed......................................
2025-09-23 15:40:46,641:INFO:SubProcess create_model() end ==================================
2025-09-23 15:40:46,642:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 0.8968
2025-09-23 15:40:46,643:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 0.9226
2025-09-23 15:40:46,644:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-09-23 15:40:46,644:INFO:choose_better completed
2025-09-23 15:40:46,657:INFO:_master_model_container: 19
2025-09-23 15:40:46,657:INFO:_display_container: 4
2025-09-23 15:40:46,658:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:46,658:INFO:tune_model() successfully completed......................................
2025-09-23 15:40:46,845:INFO:Initializing plot_model()
2025-09-23 15:40:46,845:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, system=True)
2025-09-23 15:40:46,845:INFO:Checking exceptions
2025-09-23 15:40:46,852:INFO:Preloading libraries
2025-09-23 15:40:46,857:INFO:Copying training dataset
2025-09-23 15:40:46,857:INFO:Plot type: confusion_matrix
2025-09-23 15:40:47,075:INFO:Fitting Model
2025-09-23 15:40:47,076:INFO:Scoring test/hold-out set
2025-09-23 15:40:47,123:INFO:Saving 'Confusion Matrix.png'
2025-09-23 15:40:47,292:INFO:Visual Rendered Successfully
2025-09-23 15:40:47,478:INFO:plot_model() successfully completed......................................
2025-09-23 15:40:47,479:INFO:Initializing plot_model()
2025-09-23 15:40:47,479:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, system=True)
2025-09-23 15:40:47,479:INFO:Checking exceptions
2025-09-23 15:40:47,486:INFO:Preloading libraries
2025-09-23 15:40:47,491:INFO:Copying training dataset
2025-09-23 15:40:47,492:INFO:Plot type: feature
2025-09-23 15:40:47,493:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 15:40:47,590:INFO:Saving 'Feature Importance.png'
2025-09-23 15:40:47,801:INFO:Visual Rendered Successfully
2025-09-23 15:40:48,002:INFO:plot_model() successfully completed......................................
2025-09-23 15:40:48,004:INFO:Initializing plot_model()
2025-09-23 15:40:48,005:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, system=True)
2025-09-23 15:40:48,005:INFO:Checking exceptions
2025-09-23 15:40:48,013:INFO:Preloading libraries
2025-09-23 15:40:48,018:INFO:Copying training dataset
2025-09-23 15:40:48,018:INFO:Plot type: class_report
2025-09-23 15:40:48,237:INFO:Fitting Model
2025-09-23 15:40:48,238:INFO:Scoring test/hold-out set
2025-09-23 15:40:48,314:INFO:Saving 'Class Report.png'
2025-09-23 15:40:48,581:INFO:Visual Rendered Successfully
2025-09-23 15:40:48,779:INFO:plot_model() successfully completed......................................
2025-09-23 15:40:48,780:INFO:Initializing interpret_model()
2025-09-23 15:40:48,780:INFO:interpret_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=True, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>)
2025-09-23 15:40:48,780:INFO:Checking exceptions
2025-09-23 15:40:48,780:INFO:Soft dependency imported: shap: 0.44.1
2025-09-23 15:40:48,832:INFO:plot type: summary
2025-09-23 15:40:48,832:INFO:Creating TreeExplainer
2025-09-23 15:40:48,913:INFO:Compiling shap values
2025-09-23 15:40:49,113:INFO:Saving 'SHAP summary.png'
2025-09-23 15:40:49,437:INFO:Visual Rendered Successfully
2025-09-23 15:40:49,437:INFO:interpret_model() successfully completed......................................
2025-09-23 15:40:49,645:INFO:Initializing predict_model()
2025-09-23 15:40:49,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D2A3963400>)
2025-09-23 15:40:49,645:INFO:Checking exceptions
2025-09-23 15:40:49,645:INFO:Preloading libraries
2025-09-23 15:40:50,054:INFO:Initializing finalize_model()
2025-09-23 15:40:50,055:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-23 15:40:50,055:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:40:50,057:INFO:Initializing create_model()
2025-09-23 15:40:50,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A1A5C640>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:40:50,062:INFO:Checking exceptions
2025-09-23 15:40:50,064:INFO:Importing libraries
2025-09-23 15:40:50,064:INFO:Copying training dataset
2025-09-23 15:40:50,066:INFO:Defining folds
2025-09-23 15:40:50,066:INFO:Declaring metric variables
2025-09-23 15:40:50,066:INFO:Importing untrained model
2025-09-23 15:40:50,066:INFO:Declaring custom model
2025-09-23 15:40:50,066:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:40:50,070:INFO:Cross validation set to False
2025-09-23 15:40:50,072:INFO:Fitting Model
2025-09-23 15:40:50,379:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.4,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=4, max_leaves=None, min_child_weight=1,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=30, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:40:50,380:INFO:create_model() successfully completed......................................
2025-09-23 15:40:50,582:INFO:_master_model_container: 19
2025-09-23 15:40:50,582:INFO:_display_container: 5
2025-09-23 15:40:50,614:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.4,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=4, max_leaves=None, min_child_weight=1,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=30, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:40:50,614:INFO:finalize_model() successfully completed......................................
2025-09-23 15:40:50,874:INFO:Initializing save_model()
2025-09-23 15:40:50,876:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.4,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=4, max_leaves=None, min_child_weight=1,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=30, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), model_name=c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_B_antileak, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_...
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-09-23 15:40:50,876:INFO:Adding model into prep_pipe
2025-09-23 15:40:50,876:WARNING:Only Model saved as it was a pipeline.
2025-09-23 15:40:50,900:INFO:c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_B_antileak.pkl saved in current working directory
2025-09-23 15:40:50,941:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.4,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=4, max_leaves=None, min_child_weight=1,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=30, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:40:50,941:INFO:save_model() successfully completed......................................
2025-09-23 15:52:22,670:INFO:PyCaret ClassificationExperiment
2025-09-23 15:52:22,670:INFO:Logging name: clf-default-name
2025-09-23 15:52:22,670:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:52:22,670:INFO:version 3.3.2
2025-09-23 15:52:22,670:INFO:Initializing setup()
2025-09-23 15:52:22,670:INFO:self.USI: 8f4c
2025-09-23 15:52:22,670:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'y_test', 'fold_shuffle_param', 'X_train', 'X_test', 'fix_imbalance', 'exp_id', 'fold_generator', 'data', 'memory', 'USI', 'y_train', 'html_param', 'X', 'seed', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', 'y', 'n_jobs_param', 'pipeline', '_ml_usecase', 'idx', '_available_plots', 'is_multiclass', 'logging_param'}
2025-09-23 15:52:22,670:INFO:Checking environment
2025-09-23 15:52:22,670:INFO:python_version: 3.10.18
2025-09-23 15:52:22,670:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:52:22,670:INFO:machine: AMD64
2025-09-23 15:52:22,670:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:52:22,672:INFO:Memory: svmem(total=16486035456, available=7808151552, percent=52.6, used=8677883904, free=7808151552)
2025-09-23 15:52:22,672:INFO:Physical Core: 8
2025-09-23 15:52:22,672:INFO:Logical Core: 16
2025-09-23 15:52:22,672:INFO:Checking libraries
2025-09-23 15:52:22,672:INFO:System:
2025-09-23 15:52:22,672:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:52:22,672:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:52:22,672:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:52:22,672:INFO:PyCaret required dependencies:
2025-09-23 15:52:22,672:INFO:                 pip: 25.2
2025-09-23 15:52:22,672:INFO:          setuptools: 78.1.1
2025-09-23 15:52:22,672:INFO:             pycaret: 3.3.2
2025-09-23 15:52:22,672:INFO:             IPython: 8.37.0
2025-09-23 15:52:22,672:INFO:          ipywidgets: 8.1.7
2025-09-23 15:52:22,672:INFO:                tqdm: 4.67.1
2025-09-23 15:52:22,672:INFO:               numpy: 1.26.4
2025-09-23 15:52:22,672:INFO:              pandas: 2.1.4
2025-09-23 15:52:22,672:INFO:              jinja2: 3.1.6
2025-09-23 15:52:22,672:INFO:               scipy: 1.11.4
2025-09-23 15:52:22,672:INFO:              joblib: 1.3.2
2025-09-23 15:52:22,672:INFO:             sklearn: 1.4.2
2025-09-23 15:52:22,672:INFO:                pyod: 2.0.5
2025-09-23 15:52:22,672:INFO:            imblearn: 0.14.0
2025-09-23 15:52:22,672:INFO:   category_encoders: 2.7.0
2025-09-23 15:52:22,672:INFO:            lightgbm: 4.6.0
2025-09-23 15:52:22,674:INFO:               numba: 0.61.0
2025-09-23 15:52:22,674:INFO:            requests: 2.32.5
2025-09-23 15:52:22,674:INFO:          matplotlib: 3.7.5
2025-09-23 15:52:22,674:INFO:          scikitplot: 0.3.7
2025-09-23 15:52:22,674:INFO:         yellowbrick: 1.5
2025-09-23 15:52:22,674:INFO:              plotly: 5.24.1
2025-09-23 15:52:22,674:INFO:    plotly-resampler: Not installed
2025-09-23 15:52:22,674:INFO:             kaleido: 1.1.0
2025-09-23 15:52:22,674:INFO:           schemdraw: 0.15
2025-09-23 15:52:22,674:INFO:         statsmodels: 0.14.5
2025-09-23 15:52:22,674:INFO:              sktime: 0.26.0
2025-09-23 15:52:22,674:INFO:               tbats: 1.1.3
2025-09-23 15:52:22,674:INFO:            pmdarima: 2.0.4
2025-09-23 15:52:22,674:INFO:              psutil: 7.1.0
2025-09-23 15:52:22,674:INFO:          markupsafe: 3.0.2
2025-09-23 15:52:22,674:INFO:             pickle5: Not installed
2025-09-23 15:52:22,674:INFO:         cloudpickle: 3.1.1
2025-09-23 15:52:22,674:INFO:         deprecation: 2.1.0
2025-09-23 15:52:22,674:INFO:              xxhash: 3.5.0
2025-09-23 15:52:22,674:INFO:           wurlitzer: Not installed
2025-09-23 15:52:22,674:INFO:PyCaret optional dependencies:
2025-09-23 15:52:22,674:INFO:                shap: 0.44.1
2025-09-23 15:52:22,674:INFO:           interpret: 0.7.2
2025-09-23 15:52:22,674:INFO:                umap: 0.5.7
2025-09-23 15:52:22,674:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:52:22,674:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:52:22,674:INFO:             autoviz: Not installed
2025-09-23 15:52:22,674:INFO:           fairlearn: 0.7.0
2025-09-23 15:52:22,674:INFO:          deepchecks: Not installed
2025-09-23 15:52:22,674:INFO:             xgboost: 3.0.5
2025-09-23 15:52:22,674:INFO:            catboost: 1.2.8
2025-09-23 15:52:22,677:INFO:              kmodes: 0.12.2
2025-09-23 15:52:22,677:INFO:             mlxtend: 0.23.4
2025-09-23 15:52:22,677:INFO:       statsforecast: 1.5.0
2025-09-23 15:52:22,677:INFO:        tune_sklearn: Not installed
2025-09-23 15:52:22,677:INFO:                 ray: Not installed
2025-09-23 15:52:22,677:INFO:            hyperopt: 0.2.7
2025-09-23 15:52:22,677:INFO:              optuna: 4.5.0
2025-09-23 15:52:22,677:INFO:               skopt: 0.10.2
2025-09-23 15:52:22,677:INFO:              mlflow: 3.4.0
2025-09-23 15:52:22,677:INFO:              gradio: 5.46.1
2025-09-23 15:52:22,677:INFO:             fastapi: 0.117.1
2025-09-23 15:52:22,677:INFO:             uvicorn: 0.36.0
2025-09-23 15:52:22,677:INFO:              m2cgen: 0.10.0
2025-09-23 15:52:22,677:INFO:           evidently: 0.4.40
2025-09-23 15:52:22,677:INFO:               fugue: 0.8.7
2025-09-23 15:52:22,677:INFO:           streamlit: Not installed
2025-09-23 15:52:22,677:INFO:             prophet: Not installed
2025-09-23 15:52:22,677:INFO:None
2025-09-23 15:52:22,677:INFO:Set up data.
2025-09-23 15:52:22,741:INFO:Set up folding strategy.
2025-09-23 15:52:22,741:INFO:Set up train/test split.
2025-09-23 15:52:22,817:INFO:Set up index.
2025-09-23 15:52:22,817:INFO:Assigning column types.
2025-09-23 15:52:22,841:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:52:22,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:52:22,905:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:52:22,944:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:22,948:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:23,008:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:52:23,008:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:52:23,051:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:23,056:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:23,057:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:52:23,122:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:52:23,160:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:23,163:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:23,224:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:52:23,262:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:23,266:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:23,267:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:52:23,369:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:23,372:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:23,480:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:23,484:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:23,486:INFO:Preparing preprocessing pipeline...
2025-09-23 15:52:23,491:INFO:Set up label encoding.
2025-09-23 15:52:23,492:INFO:Set up simple imputation.
2025-09-23 15:52:23,511:INFO:Set up encoding of ordinal features.
2025-09-23 15:52:23,519:INFO:Set up encoding of categorical features.
2025-09-23 15:52:23,522:INFO:Set up column name cleaning.
2025-09-23 15:52:24,322:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:52:24,348:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:52:24,348:INFO:Creating final display dataframe.
2025-09-23 15:52:25,562:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                  (50000, 35)
5        Transformed data shape                                  (50000, 62)
6   Transformed train set shape                                  (35000, 62)
7    Transformed test set shape                                  (15000, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         8f4c
2025-09-23 15:52:25,666:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:25,670:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:25,780:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:52:25,783:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:52:25,785:INFO:setup() successfully completed in 3.12s...............
2025-09-23 15:52:25,785:INFO:Initializing compare_models()
2025-09-23 15:52:25,785:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:52:25,786:INFO:Checking exceptions
2025-09-23 15:52:25,807:INFO:Preparing display monitor
2025-09-23 15:52:25,861:INFO:Initializing Logistic Regression
2025-09-23 15:52:25,861:INFO:Total runtime is 0.0 minutes
2025-09-23 15:52:25,869:INFO:SubProcess create_model() called ==================================
2025-09-23 15:52:25,869:INFO:Initializing create_model()
2025-09-23 15:52:25,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:52:25,869:INFO:Checking exceptions
2025-09-23 15:52:25,869:INFO:Importing libraries
2025-09-23 15:52:25,869:INFO:Copying training dataset
2025-09-23 15:52:25,973:INFO:Defining folds
2025-09-23 15:52:25,973:INFO:Declaring metric variables
2025-09-23 15:52:25,978:INFO:Importing untrained model
2025-09-23 15:52:25,988:INFO:Logistic Regression Imported successfully
2025-09-23 15:52:26,000:INFO:Starting cross validation
2025-09-23 15:52:26,006:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:52:48,842:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:52:48,845:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:52:48,932:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:52:49,087:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:52:49,090:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:52:49,109:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,118:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,160:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:52:49,163:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,175:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:52:49,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,187:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:52:49,213:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,213:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,235:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,271:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,337:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,361:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:52:49,372:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:52:49,384:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,397:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,430:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,446:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,472:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:52:49,550:INFO:Calculating mean and std
2025-09-23 15:52:49,553:INFO:Creating metrics dataframe
2025-09-23 15:52:49,557:INFO:Uploading results into container
2025-09-23 15:52:49,559:INFO:Uploading model into container now
2025-09-23 15:52:49,560:INFO:_master_model_container: 1
2025-09-23 15:52:49,560:INFO:_display_container: 2
2025-09-23 15:52:49,560:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:52:49,561:INFO:create_model() successfully completed......................................
2025-09-23 15:52:49,787:INFO:SubProcess create_model() end ==================================
2025-09-23 15:52:49,788:INFO:Creating metrics dataframe
2025-09-23 15:52:49,798:INFO:Initializing K Neighbors Classifier
2025-09-23 15:52:49,799:INFO:Total runtime is 0.39897541999816893 minutes
2025-09-23 15:52:49,805:INFO:SubProcess create_model() called ==================================
2025-09-23 15:52:49,805:INFO:Initializing create_model()
2025-09-23 15:52:49,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:52:49,806:INFO:Checking exceptions
2025-09-23 15:52:49,806:INFO:Importing libraries
2025-09-23 15:52:49,806:INFO:Copying training dataset
2025-09-23 15:52:49,851:INFO:Defining folds
2025-09-23 15:52:49,851:INFO:Declaring metric variables
2025-09-23 15:52:49,861:INFO:Importing untrained model
2025-09-23 15:52:49,866:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:52:49,879:INFO:Starting cross validation
2025-09-23 15:52:49,883:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:02,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,529:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,551:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,584:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,621:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,633:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,638:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,667:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,671:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,696:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,725:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,731:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,755:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:02,835:INFO:Calculating mean and std
2025-09-23 15:53:02,837:INFO:Creating metrics dataframe
2025-09-23 15:53:02,845:INFO:Uploading results into container
2025-09-23 15:53:02,845:INFO:Uploading model into container now
2025-09-23 15:53:02,848:INFO:_master_model_container: 2
2025-09-23 15:53:02,848:INFO:_display_container: 2
2025-09-23 15:53:02,848:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 15:53:02,848:INFO:create_model() successfully completed......................................
2025-09-23 15:53:03,050:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:03,050:INFO:Creating metrics dataframe
2025-09-23 15:53:03,059:INFO:Initializing Naive Bayes
2025-09-23 15:53:03,059:INFO:Total runtime is 0.61997443040212 minutes
2025-09-23 15:53:03,064:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:03,065:INFO:Initializing create_model()
2025-09-23 15:53:03,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:03,066:INFO:Checking exceptions
2025-09-23 15:53:03,066:INFO:Importing libraries
2025-09-23 15:53:03,066:INFO:Copying training dataset
2025-09-23 15:53:03,104:INFO:Defining folds
2025-09-23 15:53:03,104:INFO:Declaring metric variables
2025-09-23 15:53:03,111:INFO:Importing untrained model
2025-09-23 15:53:03,117:INFO:Naive Bayes Imported successfully
2025-09-23 15:53:03,130:INFO:Starting cross validation
2025-09-23 15:53:03,136:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:11,760:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,814:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,846:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,927:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,932:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,977:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,978:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:11,991:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,008:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,025:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,025:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,047:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,061:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:12,187:INFO:Calculating mean and std
2025-09-23 15:53:12,188:INFO:Creating metrics dataframe
2025-09-23 15:53:12,194:INFO:Uploading results into container
2025-09-23 15:53:12,196:INFO:Uploading model into container now
2025-09-23 15:53:12,196:INFO:_master_model_container: 3
2025-09-23 15:53:12,196:INFO:_display_container: 2
2025-09-23 15:53:12,196:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 15:53:12,196:INFO:create_model() successfully completed......................................
2025-09-23 15:53:12,393:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:12,393:INFO:Creating metrics dataframe
2025-09-23 15:53:12,393:INFO:Initializing Decision Tree Classifier
2025-09-23 15:53:12,403:INFO:Total runtime is 0.7757104555765788 minutes
2025-09-23 15:53:12,407:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:12,410:INFO:Initializing create_model()
2025-09-23 15:53:12,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:12,410:INFO:Checking exceptions
2025-09-23 15:53:12,410:INFO:Importing libraries
2025-09-23 15:53:12,410:INFO:Copying training dataset
2025-09-23 15:53:12,450:INFO:Defining folds
2025-09-23 15:53:12,450:INFO:Declaring metric variables
2025-09-23 15:53:12,458:INFO:Importing untrained model
2025-09-23 15:53:12,467:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:53:12,476:INFO:Starting cross validation
2025-09-23 15:53:12,483:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:13,946:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:13,964:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:13,979:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:13,995:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,003:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,024:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,032:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,043:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,062:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,079:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,082:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:14,091:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:20,056:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:20,099:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:20,144:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:20,208:INFO:Calculating mean and std
2025-09-23 15:53:20,210:INFO:Creating metrics dataframe
2025-09-23 15:53:20,216:INFO:Uploading results into container
2025-09-23 15:53:20,218:INFO:Uploading model into container now
2025-09-23 15:53:20,219:INFO:_master_model_container: 4
2025-09-23 15:53:20,219:INFO:_display_container: 2
2025-09-23 15:53:20,220:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:53:20,221:INFO:create_model() successfully completed......................................
2025-09-23 15:53:20,409:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:20,409:INFO:Creating metrics dataframe
2025-09-23 15:53:20,419:INFO:Initializing SVM - Linear Kernel
2025-09-23 15:53:20,419:INFO:Total runtime is 0.9093003710110983 minutes
2025-09-23 15:53:20,424:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:20,425:INFO:Initializing create_model()
2025-09-23 15:53:20,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:20,425:INFO:Checking exceptions
2025-09-23 15:53:20,427:INFO:Importing libraries
2025-09-23 15:53:20,427:INFO:Copying training dataset
2025-09-23 15:53:20,466:INFO:Defining folds
2025-09-23 15:53:20,466:INFO:Declaring metric variables
2025-09-23 15:53:20,472:INFO:Importing untrained model
2025-09-23 15:53:20,480:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 15:53:20,491:INFO:Starting cross validation
2025-09-23 15:53:20,497:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:24,461:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:24,479:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:24,528:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:24,581:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,284:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:25,305:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,353:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,404:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,464:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:25,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,524:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,576:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:25,611:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,659:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,679:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:25,695:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,703:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,738:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,780:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:25,845:INFO:Calculating mean and std
2025-09-23 15:53:25,848:INFO:Creating metrics dataframe
2025-09-23 15:53:25,850:INFO:Uploading results into container
2025-09-23 15:53:25,852:INFO:Uploading model into container now
2025-09-23 15:53:25,853:INFO:_master_model_container: 5
2025-09-23 15:53:25,853:INFO:_display_container: 2
2025-09-23 15:53:25,854:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 15:53:25,855:INFO:create_model() successfully completed......................................
2025-09-23 15:53:26,032:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:26,032:INFO:Creating metrics dataframe
2025-09-23 15:53:26,042:INFO:Initializing Ridge Classifier
2025-09-23 15:53:26,043:INFO:Total runtime is 1.003041394551595 minutes
2025-09-23 15:53:26,048:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:26,048:INFO:Initializing create_model()
2025-09-23 15:53:26,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:26,049:INFO:Checking exceptions
2025-09-23 15:53:26,049:INFO:Importing libraries
2025-09-23 15:53:26,049:INFO:Copying training dataset
2025-09-23 15:53:26,089:INFO:Defining folds
2025-09-23 15:53:26,089:INFO:Declaring metric variables
2025-09-23 15:53:26,098:INFO:Importing untrained model
2025-09-23 15:53:26,104:INFO:Ridge Classifier Imported successfully
2025-09-23 15:53:26,116:INFO:Starting cross validation
2025-09-23 15:53:26,122:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:27,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:27,657:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,672:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:27,693:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,702:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:27,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,716:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:27,717:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:27,718:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,732:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,734:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,741:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,765:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,775:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,783:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,809:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,821:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,824:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:27,884:INFO:Calculating mean and std
2025-09-23 15:53:27,887:INFO:Creating metrics dataframe
2025-09-23 15:53:27,889:INFO:Uploading results into container
2025-09-23 15:53:27,890:INFO:Uploading model into container now
2025-09-23 15:53:27,891:INFO:_master_model_container: 6
2025-09-23 15:53:27,891:INFO:_display_container: 2
2025-09-23 15:53:27,892:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 15:53:27,892:INFO:create_model() successfully completed......................................
2025-09-23 15:53:28,071:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:28,071:INFO:Creating metrics dataframe
2025-09-23 15:53:28,084:INFO:Initializing Random Forest Classifier
2025-09-23 15:53:28,085:INFO:Total runtime is 1.0370684345563252 minutes
2025-09-23 15:53:28,091:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:28,091:INFO:Initializing create_model()
2025-09-23 15:53:28,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:28,092:INFO:Checking exceptions
2025-09-23 15:53:28,092:INFO:Importing libraries
2025-09-23 15:53:28,092:INFO:Copying training dataset
2025-09-23 15:53:28,138:INFO:Defining folds
2025-09-23 15:53:28,140:INFO:Declaring metric variables
2025-09-23 15:53:28,148:INFO:Importing untrained model
2025-09-23 15:53:28,155:INFO:Random Forest Classifier Imported successfully
2025-09-23 15:53:28,166:INFO:Starting cross validation
2025-09-23 15:53:28,172:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:31,183:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,223:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,229:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,279:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,281:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,289:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,338:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,347:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,376:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,388:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,418:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,430:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,463:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,474:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:31,539:INFO:Calculating mean and std
2025-09-23 15:53:31,541:INFO:Creating metrics dataframe
2025-09-23 15:53:31,543:INFO:Uploading results into container
2025-09-23 15:53:31,544:INFO:Uploading model into container now
2025-09-23 15:53:31,545:INFO:_master_model_container: 7
2025-09-23 15:53:31,545:INFO:_display_container: 2
2025-09-23 15:53:31,546:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 15:53:31,546:INFO:create_model() successfully completed......................................
2025-09-23 15:53:31,724:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:31,725:INFO:Creating metrics dataframe
2025-09-23 15:53:31,738:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 15:53:31,738:INFO:Total runtime is 1.0979621529579162 minutes
2025-09-23 15:53:31,745:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:31,745:INFO:Initializing create_model()
2025-09-23 15:53:31,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:31,747:INFO:Checking exceptions
2025-09-23 15:53:31,747:INFO:Importing libraries
2025-09-23 15:53:31,747:INFO:Copying training dataset
2025-09-23 15:53:31,790:INFO:Defining folds
2025-09-23 15:53:31,791:INFO:Declaring metric variables
2025-09-23 15:53:31,798:INFO:Importing untrained model
2025-09-23 15:53:31,804:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 15:53:31,816:INFO:Starting cross validation
2025-09-23 15:53:31,822:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:33,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:53:33,183:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:53:33,192:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:53:33,228:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:53:33,309:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:53:33,680:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:33,685:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:33,704:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,709:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,747:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:33,764:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,783:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:33,793:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:33,799:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,812:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,815:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,815:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,818:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,846:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,861:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,864:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,903:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,905:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:33,974:INFO:Calculating mean and std
2025-09-23 15:53:33,976:INFO:Creating metrics dataframe
2025-09-23 15:53:33,978:INFO:Uploading results into container
2025-09-23 15:53:33,980:INFO:Uploading model into container now
2025-09-23 15:53:33,981:INFO:_master_model_container: 8
2025-09-23 15:53:33,981:INFO:_display_container: 2
2025-09-23 15:53:33,983:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 15:53:33,983:INFO:create_model() successfully completed......................................
2025-09-23 15:53:34,161:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:34,161:INFO:Creating metrics dataframe
2025-09-23 15:53:34,173:INFO:Initializing Ada Boost Classifier
2025-09-23 15:53:34,173:INFO:Total runtime is 1.1385319709777832 minutes
2025-09-23 15:53:34,180:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:34,181:INFO:Initializing create_model()
2025-09-23 15:53:34,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:34,181:INFO:Checking exceptions
2025-09-23 15:53:34,181:INFO:Importing libraries
2025-09-23 15:53:34,181:INFO:Copying training dataset
2025-09-23 15:53:34,221:INFO:Defining folds
2025-09-23 15:53:34,222:INFO:Declaring metric variables
2025-09-23 15:53:34,230:INFO:Importing untrained model
2025-09-23 15:53:34,238:INFO:Ada Boost Classifier Imported successfully
2025-09-23 15:53:34,250:INFO:Starting cross validation
2025-09-23 15:53:34,253:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:35,390:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:53:35,451:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:53:35,468:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:53:35,478:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:53:35,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:53:38,840:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:38,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:38,857:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,872:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,909:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:38,918:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,919:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:38,920:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,924:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:38,926:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,938:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,980:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:38,992:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:39,000:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:39,023:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:39,036:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:39,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:39,113:INFO:Calculating mean and std
2025-09-23 15:53:39,114:INFO:Creating metrics dataframe
2025-09-23 15:53:39,119:INFO:Uploading results into container
2025-09-23 15:53:39,120:INFO:Uploading model into container now
2025-09-23 15:53:39,120:INFO:_master_model_container: 9
2025-09-23 15:53:39,120:INFO:_display_container: 2
2025-09-23 15:53:39,121:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 15:53:39,122:INFO:create_model() successfully completed......................................
2025-09-23 15:53:39,300:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:39,300:INFO:Creating metrics dataframe
2025-09-23 15:53:39,312:INFO:Initializing Gradient Boosting Classifier
2025-09-23 15:53:39,312:INFO:Total runtime is 1.2241893808046977 minutes
2025-09-23 15:53:39,318:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:39,319:INFO:Initializing create_model()
2025-09-23 15:53:39,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:39,319:INFO:Checking exceptions
2025-09-23 15:53:39,319:INFO:Importing libraries
2025-09-23 15:53:39,319:INFO:Copying training dataset
2025-09-23 15:53:39,393:INFO:Defining folds
2025-09-23 15:53:39,393:INFO:Declaring metric variables
2025-09-23 15:53:39,401:INFO:Importing untrained model
2025-09-23 15:53:39,406:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 15:53:39,419:INFO:Starting cross validation
2025-09-23 15:53:39,423:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:54,777:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:54,799:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:54,845:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:54,891:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,119:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:55,137:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,197:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:55,213:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,238:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,257:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,259:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:55,277:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,314:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,328:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,361:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:55,372:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,377:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,419:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,460:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:55,527:INFO:Calculating mean and std
2025-09-23 15:53:55,529:INFO:Creating metrics dataframe
2025-09-23 15:53:55,533:INFO:Uploading results into container
2025-09-23 15:53:55,534:INFO:Uploading model into container now
2025-09-23 15:53:55,535:INFO:_master_model_container: 10
2025-09-23 15:53:55,535:INFO:_display_container: 2
2025-09-23 15:53:55,536:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 15:53:55,536:INFO:create_model() successfully completed......................................
2025-09-23 15:53:55,713:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:55,713:INFO:Creating metrics dataframe
2025-09-23 15:53:55,725:INFO:Initializing Linear Discriminant Analysis
2025-09-23 15:53:55,725:INFO:Total runtime is 1.4977398196856182 minutes
2025-09-23 15:53:55,733:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:55,733:INFO:Initializing create_model()
2025-09-23 15:53:55,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:55,734:INFO:Checking exceptions
2025-09-23 15:53:55,734:INFO:Importing libraries
2025-09-23 15:53:55,734:INFO:Copying training dataset
2025-09-23 15:53:55,777:INFO:Defining folds
2025-09-23 15:53:55,777:INFO:Declaring metric variables
2025-09-23 15:53:55,785:INFO:Importing untrained model
2025-09-23 15:53:55,790:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 15:53:55,803:INFO:Starting cross validation
2025-09-23 15:53:55,810:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:53:58,071:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:58,074:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:58,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:58,095:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,099:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,105:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,108:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:58,121:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:53:58,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,145:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,147:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,152:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,190:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,198:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,203:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,245:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,262:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:53:58,336:INFO:Calculating mean and std
2025-09-23 15:53:58,339:INFO:Creating metrics dataframe
2025-09-23 15:53:58,342:INFO:Uploading results into container
2025-09-23 15:53:58,344:INFO:Uploading model into container now
2025-09-23 15:53:58,345:INFO:_master_model_container: 11
2025-09-23 15:53:58,345:INFO:_display_container: 2
2025-09-23 15:53:58,346:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 15:53:58,346:INFO:create_model() successfully completed......................................
2025-09-23 15:53:58,525:INFO:SubProcess create_model() end ==================================
2025-09-23 15:53:58,525:INFO:Creating metrics dataframe
2025-09-23 15:53:58,539:INFO:Initializing Extra Trees Classifier
2025-09-23 15:53:58,540:INFO:Total runtime is 1.544648019472758 minutes
2025-09-23 15:53:58,545:INFO:SubProcess create_model() called ==================================
2025-09-23 15:53:58,546:INFO:Initializing create_model()
2025-09-23 15:53:58,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:53:58,546:INFO:Checking exceptions
2025-09-23 15:53:58,546:INFO:Importing libraries
2025-09-23 15:53:58,547:INFO:Copying training dataset
2025-09-23 15:53:58,586:INFO:Defining folds
2025-09-23 15:53:58,586:INFO:Declaring metric variables
2025-09-23 15:53:58,595:INFO:Importing untrained model
2025-09-23 15:53:58,601:INFO:Extra Trees Classifier Imported successfully
2025-09-23 15:53:58,615:INFO:Starting cross validation
2025-09-23 15:53:58,621:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:54:02,063:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,128:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,198:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,318:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,329:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,344:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,361:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,381:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,400:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,426:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,448:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,528:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,569:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,610:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:02,669:INFO:Calculating mean and std
2025-09-23 15:54:02,671:INFO:Creating metrics dataframe
2025-09-23 15:54:02,674:INFO:Uploading results into container
2025-09-23 15:54:02,675:INFO:Uploading model into container now
2025-09-23 15:54:02,676:INFO:_master_model_container: 12
2025-09-23 15:54:02,676:INFO:_display_container: 2
2025-09-23 15:54:02,677:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 15:54:02,677:INFO:create_model() successfully completed......................................
2025-09-23 15:54:02,856:INFO:SubProcess create_model() end ==================================
2025-09-23 15:54:02,856:INFO:Creating metrics dataframe
2025-09-23 15:54:02,870:INFO:Initializing Extreme Gradient Boosting
2025-09-23 15:54:02,870:INFO:Total runtime is 1.6168217698733014 minutes
2025-09-23 15:54:02,876:INFO:SubProcess create_model() called ==================================
2025-09-23 15:54:02,876:INFO:Initializing create_model()
2025-09-23 15:54:02,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:54:02,877:INFO:Checking exceptions
2025-09-23 15:54:02,877:INFO:Importing libraries
2025-09-23 15:54:02,877:INFO:Copying training dataset
2025-09-23 15:54:02,918:INFO:Defining folds
2025-09-23 15:54:02,919:INFO:Declaring metric variables
2025-09-23 15:54:02,926:INFO:Importing untrained model
2025-09-23 15:54:02,932:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:54:02,945:INFO:Starting cross validation
2025-09-23 15:54:02,949:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:54:05,849:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,898:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,902:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,921:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,949:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,953:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,973:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,981:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:05,992:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:06,005:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:06,019:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:06,022:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:06,048:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:06,064:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:06,133:INFO:Calculating mean and std
2025-09-23 15:54:06,135:INFO:Creating metrics dataframe
2025-09-23 15:54:06,137:INFO:Uploading results into container
2025-09-23 15:54:06,139:INFO:Uploading model into container now
2025-09-23 15:54:06,140:INFO:_master_model_container: 13
2025-09-23 15:54:06,140:INFO:_display_container: 2
2025-09-23 15:54:06,141:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:54:06,142:INFO:create_model() successfully completed......................................
2025-09-23 15:54:06,322:INFO:SubProcess create_model() end ==================================
2025-09-23 15:54:06,322:INFO:Creating metrics dataframe
2025-09-23 15:54:06,339:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 15:54:06,340:INFO:Total runtime is 1.6746366262435914 minutes
2025-09-23 15:54:06,345:INFO:SubProcess create_model() called ==================================
2025-09-23 15:54:06,346:INFO:Initializing create_model()
2025-09-23 15:54:06,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:54:06,346:INFO:Checking exceptions
2025-09-23 15:54:06,346:INFO:Importing libraries
2025-09-23 15:54:06,346:INFO:Copying training dataset
2025-09-23 15:54:06,386:INFO:Defining folds
2025-09-23 15:54:06,386:INFO:Declaring metric variables
2025-09-23 15:54:06,394:INFO:Importing untrained model
2025-09-23 15:54:06,400:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 15:54:06,412:INFO:Starting cross validation
2025-09-23 15:54:06,419:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:54:09,119:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,227:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,240:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,266:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,281:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,298:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,301:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,340:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,355:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,356:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,391:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,401:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:09,472:INFO:Calculating mean and std
2025-09-23 15:54:09,473:INFO:Creating metrics dataframe
2025-09-23 15:54:09,479:INFO:Uploading results into container
2025-09-23 15:54:09,480:INFO:Uploading model into container now
2025-09-23 15:54:09,480:INFO:_master_model_container: 14
2025-09-23 15:54:09,480:INFO:_display_container: 2
2025-09-23 15:54:09,481:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 15:54:09,482:INFO:create_model() successfully completed......................................
2025-09-23 15:54:09,671:INFO:SubProcess create_model() end ==================================
2025-09-23 15:54:09,671:INFO:Creating metrics dataframe
2025-09-23 15:54:09,687:INFO:Initializing CatBoost Classifier
2025-09-23 15:54:09,687:INFO:Total runtime is 1.7304355223973593 minutes
2025-09-23 15:54:09,692:INFO:SubProcess create_model() called ==================================
2025-09-23 15:54:09,693:INFO:Initializing create_model()
2025-09-23 15:54:09,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:54:09,694:INFO:Checking exceptions
2025-09-23 15:54:09,694:INFO:Importing libraries
2025-09-23 15:54:09,694:INFO:Copying training dataset
2025-09-23 15:54:09,733:INFO:Defining folds
2025-09-23 15:54:09,733:INFO:Declaring metric variables
2025-09-23 15:54:09,739:INFO:Importing untrained model
2025-09-23 15:54:09,746:INFO:CatBoost Classifier Imported successfully
2025-09-23 15:54:09,763:INFO:Starting cross validation
2025-09-23 15:54:09,769:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:54:34,927:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:34,997:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:35,070:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,436:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,500:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,542:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,547:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,551:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,585:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,589:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,640:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,787:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,828:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:37,895:INFO:Calculating mean and std
2025-09-23 15:54:37,897:INFO:Creating metrics dataframe
2025-09-23 15:54:37,901:INFO:Uploading results into container
2025-09-23 15:54:37,902:INFO:Uploading model into container now
2025-09-23 15:54:37,902:INFO:_master_model_container: 15
2025-09-23 15:54:37,903:INFO:_display_container: 2
2025-09-23 15:54:37,903:INFO:<catboost.core.CatBoostClassifier object at 0x000001D295EB2350>
2025-09-23 15:54:37,903:INFO:create_model() successfully completed......................................
2025-09-23 15:54:38,082:INFO:SubProcess create_model() end ==================================
2025-09-23 15:54:38,087:INFO:Creating metrics dataframe
2025-09-23 15:54:38,103:INFO:Initializing Dummy Classifier
2025-09-23 15:54:38,103:INFO:Total runtime is 2.2040419777234397 minutes
2025-09-23 15:54:38,110:INFO:SubProcess create_model() called ==================================
2025-09-23 15:54:38,111:INFO:Initializing create_model()
2025-09-23 15:54:38,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A38B7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:54:38,111:INFO:Checking exceptions
2025-09-23 15:54:38,112:INFO:Importing libraries
2025-09-23 15:54:38,112:INFO:Copying training dataset
2025-09-23 15:54:38,156:INFO:Defining folds
2025-09-23 15:54:38,156:INFO:Declaring metric variables
2025-09-23 15:54:38,165:INFO:Importing untrained model
2025-09-23 15:54:38,171:INFO:Dummy Classifier Imported successfully
2025-09-23 15:54:38,182:INFO:Starting cross validation
2025-09-23 15:54:38,190:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:54:39,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,665:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,680:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,697:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,697:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,710:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:54:39,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:54:39,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:54:39,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:54:39,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:54:39,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,786:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,793:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:39,858:INFO:Calculating mean and std
2025-09-23 15:54:39,858:INFO:Creating metrics dataframe
2025-09-23 15:54:39,864:INFO:Uploading results into container
2025-09-23 15:54:39,864:INFO:Uploading model into container now
2025-09-23 15:54:39,866:INFO:_master_model_container: 16
2025-09-23 15:54:39,866:INFO:_display_container: 2
2025-09-23 15:54:39,866:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 15:54:39,866:INFO:create_model() successfully completed......................................
2025-09-23 15:54:40,043:INFO:SubProcess create_model() end ==================================
2025-09-23 15:54:40,046:INFO:Creating metrics dataframe
2025-09-23 15:54:40,077:INFO:Initializing create_model()
2025-09-23 15:54:40,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:54:40,080:INFO:Checking exceptions
2025-09-23 15:54:40,081:INFO:Importing libraries
2025-09-23 15:54:40,081:INFO:Copying training dataset
2025-09-23 15:54:40,129:INFO:Defining folds
2025-09-23 15:54:40,129:INFO:Declaring metric variables
2025-09-23 15:54:40,129:INFO:Importing untrained model
2025-09-23 15:54:40,129:INFO:Declaring custom model
2025-09-23 15:54:40,136:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:54:40,136:INFO:Cross validation set to False
2025-09-23 15:54:40,136:INFO:Fitting Model
2025-09-23 15:54:40,863:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:54:40,863:INFO:create_model() successfully completed......................................
2025-09-23 15:54:41,097:INFO:_master_model_container: 16
2025-09-23 15:54:41,098:INFO:_display_container: 2
2025-09-23 15:54:41,098:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:54:41,098:INFO:compare_models() successfully completed......................................
2025-09-23 15:54:41,102:INFO:Initializing create_model()
2025-09-23 15:54:41,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:54:41,103:INFO:Checking exceptions
2025-09-23 15:54:41,128:INFO:Importing libraries
2025-09-23 15:54:41,128:INFO:Copying training dataset
2025-09-23 15:54:41,184:INFO:Defining folds
2025-09-23 15:54:41,185:INFO:Declaring metric variables
2025-09-23 15:54:41,190:INFO:Importing untrained model
2025-09-23 15:54:41,199:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:54:41,212:INFO:Starting cross validation
2025-09-23 15:54:41,217:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:54:44,167:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,230:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,234:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,247:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,282:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,289:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,289:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,308:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,334:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,336:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,341:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,370:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,393:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,441:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:44,505:INFO:Calculating mean and std
2025-09-23 15:54:44,507:INFO:Creating metrics dataframe
2025-09-23 15:54:44,515:INFO:Finalizing model
2025-09-23 15:54:45,816:INFO:Uploading results into container
2025-09-23 15:54:45,818:INFO:Uploading model into container now
2025-09-23 15:54:45,831:INFO:_master_model_container: 17
2025-09-23 15:54:45,831:INFO:_display_container: 3
2025-09-23 15:54:45,833:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:54:45,833:INFO:create_model() successfully completed......................................
2025-09-23 15:54:46,045:INFO:Initializing tune_model()
2025-09-23 15:54:46,045:INFO:tune_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>)
2025-09-23 15:54:46,045:INFO:Checking exceptions
2025-09-23 15:54:46,080:INFO:Copying training dataset
2025-09-23 15:54:46,131:INFO:Checking base model
2025-09-23 15:54:46,131:INFO:Base model : Extreme Gradient Boosting
2025-09-23 15:54:46,138:INFO:Declaring metric variables
2025-09-23 15:54:46,148:INFO:Defining Hyperparameters
2025-09-23 15:54:46,337:INFO:Tuning with n_jobs=-1
2025-09-23 15:54:46,338:INFO:Initializing RandomizedSearchCV
2025-09-23 15:54:51,153:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:51,169:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:51,402:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:51,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:51,565:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:51,953:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:52,222:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:52,445:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:52,446:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:52,513:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:55,059:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:55,210:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:55,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:55,875:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,014:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,130:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,157:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,179:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,249:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,343:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,510:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:56,542:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:58,706:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:58,822:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:59,183:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:59,353:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:59,423:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:59,477:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:59,495:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:54:59,780:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:03,570:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:03,689:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:03,834:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:03,858:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:03,872:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:05,962:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:06,246:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:06,576:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:06,590:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:06,639:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:06,697:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:08,415:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:08,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:08,615:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:08,916:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:09,288:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:09,319:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:09,337:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:10,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:10,188:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:10,232:INFO:best_params: {'actual_estimator__subsample': 1, 'actual_estimator__scale_pos_weight': 27.1, 'actual_estimator__reg_lambda': 1e-07, 'actual_estimator__reg_alpha': 1e-06, 'actual_estimator__n_estimators': 30, 'actual_estimator__min_child_weight': 1, 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__colsample_bytree': 0.5}
2025-09-23 15:55:10,233:INFO:Hyperparameter search completed
2025-09-23 15:55:10,233:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:10,235:INFO:Initializing create_model()
2025-09-23 15:55:10,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D296096E60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 1, 'scale_pos_weight': 27.1, 'reg_lambda': 1e-07, 'reg_alpha': 1e-06, 'n_estimators': 30, 'min_child_weight': 1, 'max_depth': 4, 'learning_rate': 0.4, 'colsample_bytree': 0.5})
2025-09-23 15:55:10,236:INFO:Checking exceptions
2025-09-23 15:55:10,236:INFO:Importing libraries
2025-09-23 15:55:10,237:INFO:Copying training dataset
2025-09-23 15:55:10,279:INFO:Defining folds
2025-09-23 15:55:10,279:INFO:Declaring metric variables
2025-09-23 15:55:10,284:INFO:Importing untrained model
2025-09-23 15:55:10,284:INFO:Declaring custom model
2025-09-23 15:55:10,290:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:55:10,306:INFO:Starting cross validation
2025-09-23 15:55:10,310:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:12,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,533:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,558:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,564:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,568:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,578:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,580:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,600:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,620:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,622:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,650:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,657:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,670:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:12,741:INFO:Calculating mean and std
2025-09-23 15:55:12,743:INFO:Creating metrics dataframe
2025-09-23 15:55:12,750:INFO:Finalizing model
2025-09-23 15:55:13,771:INFO:Uploading results into container
2025-09-23 15:55:13,772:INFO:Uploading model into container now
2025-09-23 15:55:13,773:INFO:_master_model_container: 18
2025-09-23 15:55:13,774:INFO:_display_container: 4
2025-09-23 15:55:13,775:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:55:13,776:INFO:create_model() successfully completed......................................
2025-09-23 15:55:13,971:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:13,972:INFO:choose_better activated
2025-09-23 15:55:13,978:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:13,980:INFO:Initializing create_model()
2025-09-23 15:55:13,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:13,980:INFO:Checking exceptions
2025-09-23 15:55:13,982:INFO:Importing libraries
2025-09-23 15:55:13,982:INFO:Copying training dataset
2025-09-23 15:55:14,018:INFO:Defining folds
2025-09-23 15:55:14,018:INFO:Declaring metric variables
2025-09-23 15:55:14,018:INFO:Importing untrained model
2025-09-23 15:55:14,018:INFO:Declaring custom model
2025-09-23 15:55:14,020:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:55:14,020:INFO:Starting cross validation
2025-09-23 15:55:14,024:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:16,887:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:16,919:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:16,935:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:16,972:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:16,972:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:16,988:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,015:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,018:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,018:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,040:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,071:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,074:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,091:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,117:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,135:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:17,198:INFO:Calculating mean and std
2025-09-23 15:55:17,199:INFO:Creating metrics dataframe
2025-09-23 15:55:17,201:INFO:Finalizing model
2025-09-23 15:55:18,549:INFO:Uploading results into container
2025-09-23 15:55:18,550:INFO:Uploading model into container now
2025-09-23 15:55:18,550:INFO:_master_model_container: 19
2025-09-23 15:55:18,551:INFO:_display_container: 5
2025-09-23 15:55:18,552:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:55:18,552:INFO:create_model() successfully completed......................................
2025-09-23 15:55:18,755:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:18,756:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 1.0
2025-09-23 15:55:18,757:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.5, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.4, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,
              max_leaves=None, min_child_weight=1, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=30,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 1.0
2025-09-23 15:55:18,758:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-09-23 15:55:18,758:INFO:choose_better completed
2025-09-23 15:55:18,759:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-09-23 15:55:18,775:INFO:_master_model_container: 19
2025-09-23 15:55:18,775:INFO:_display_container: 4
2025-09-23 15:55:18,777:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:55:18,778:INFO:tune_model() successfully completed......................................
2025-09-23 15:55:18,982:INFO:Initializing plot_model()
2025-09-23 15:55:18,982:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, system=True)
2025-09-23 15:55:18,982:INFO:Checking exceptions
2025-09-23 15:55:19,002:INFO:Preloading libraries
2025-09-23 15:55:19,014:INFO:Copying training dataset
2025-09-23 15:55:19,014:INFO:Plot type: confusion_matrix
2025-09-23 15:55:19,372:INFO:Fitting Model
2025-09-23 15:55:19,373:INFO:Scoring test/hold-out set
2025-09-23 15:55:19,438:INFO:Saving 'Confusion Matrix.png'
2025-09-23 15:55:19,611:INFO:Visual Rendered Successfully
2025-09-23 15:55:19,799:INFO:plot_model() successfully completed......................................
2025-09-23 15:55:19,802:INFO:Initializing plot_model()
2025-09-23 15:55:19,802:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, system=True)
2025-09-23 15:55:19,802:INFO:Checking exceptions
2025-09-23 15:55:19,821:INFO:Preloading libraries
2025-09-23 15:55:19,833:INFO:Copying training dataset
2025-09-23 15:55:19,833:INFO:Plot type: feature
2025-09-23 15:55:19,833:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 15:55:19,994:INFO:Saving 'Feature Importance.png'
2025-09-23 15:55:20,224:INFO:Visual Rendered Successfully
2025-09-23 15:55:20,424:INFO:plot_model() successfully completed......................................
2025-09-23 15:55:20,424:INFO:Initializing plot_model()
2025-09-23 15:55:20,427:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, system=True)
2025-09-23 15:55:20,427:INFO:Checking exceptions
2025-09-23 15:55:20,446:INFO:Preloading libraries
2025-09-23 15:55:20,456:INFO:Copying training dataset
2025-09-23 15:55:20,456:INFO:Plot type: class_report
2025-09-23 15:55:20,782:INFO:Fitting Model
2025-09-23 15:55:20,782:INFO:Scoring test/hold-out set
2025-09-23 15:55:20,877:INFO:Saving 'Class Report.png'
2025-09-23 15:55:21,131:INFO:Visual Rendered Successfully
2025-09-23 15:55:21,330:INFO:plot_model() successfully completed......................................
2025-09-23 15:55:21,331:INFO:Initializing interpret_model()
2025-09-23 15:55:21,331:INFO:interpret_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=True, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>)
2025-09-23 15:55:21,331:INFO:Checking exceptions
2025-09-23 15:55:21,331:INFO:Soft dependency imported: shap: 0.44.1
2025-09-23 15:55:21,415:INFO:plot type: summary
2025-09-23 15:55:21,415:INFO:Creating TreeExplainer
2025-09-23 15:55:21,512:INFO:Compiling shap values
2025-09-23 15:55:21,995:INFO:Saving 'SHAP summary.png'
2025-09-23 15:55:22,337:INFO:Visual Rendered Successfully
2025-09-23 15:55:22,338:INFO:interpret_model() successfully completed......................................
2025-09-23 15:55:22,536:INFO:Initializing predict_model()
2025-09-23 15:55:22,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D2A1A3FF40>)
2025-09-23 15:55:22,536:INFO:Checking exceptions
2025-09-23 15:55:22,536:INFO:Preloading libraries
2025-09-23 15:55:23,589:INFO:Initializing finalize_model()
2025-09-23 15:55:23,589:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-23 15:55:23,591:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:55:23,611:INFO:Initializing create_model()
2025-09-23 15:55:23,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2A3833BB0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:23,611:INFO:Checking exceptions
2025-09-23 15:55:23,614:INFO:Importing libraries
2025-09-23 15:55:23,614:INFO:Copying training dataset
2025-09-23 15:55:23,616:INFO:Defining folds
2025-09-23 15:55:23,616:INFO:Declaring metric variables
2025-09-23 15:55:23,617:INFO:Importing untrained model
2025-09-23 15:55:23,617:INFO:Declaring custom model
2025-09-23 15:55:23,618:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:55:23,622:INFO:Cross validation set to False
2025-09-23 15:55:23,622:INFO:Fitting Model
2025-09-23 15:55:25,221:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:55:25,221:INFO:create_model() successfully completed......................................
2025-09-23 15:55:25,444:INFO:_master_model_container: 19
2025-09-23 15:55:25,444:INFO:_display_container: 5
2025-09-23 15:55:25,473:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:55:25,473:INFO:finalize_model() successfully completed......................................
2025-09-23 15:55:25,703:INFO:Initializing save_model()
2025-09-23 15:55:25,703:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), model_name=c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_A_todo, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-09-23 15:55:25,703:INFO:Adding model into prep_pipe
2025-09-23 15:55:25,703:WARNING:Only Model saved as it was a pipeline.
2025-09-23 15:55:25,732:INFO:c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_A_todo.pkl saved in current working directory
2025-09-23 15:55:25,770:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_score', 'cal_norm',
                                             'amenities_norm',
                                             'reputa...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:55:25,771:INFO:save_model() successfully completed......................................
2025-09-23 15:55:25,993:INFO:PyCaret ClassificationExperiment
2025-09-23 15:55:25,993:INFO:Logging name: clf-default-name
2025-09-23 15:55:25,993:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:55:25,993:INFO:version 3.3.2
2025-09-23 15:55:25,993:INFO:Initializing setup()
2025-09-23 15:55:25,993:INFO:self.USI: beb7
2025-09-23 15:55:25,993:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'y_test', 'fold_shuffle_param', 'X_train', 'X_test', 'fix_imbalance', 'exp_id', 'fold_generator', 'data', 'memory', 'USI', 'y_train', 'html_param', 'X', 'seed', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', 'y', 'n_jobs_param', 'pipeline', '_ml_usecase', 'idx', '_available_plots', 'is_multiclass', 'logging_param'}
2025-09-23 15:55:25,993:INFO:Checking environment
2025-09-23 15:55:25,993:INFO:python_version: 3.10.18
2025-09-23 15:55:25,993:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:55:25,993:INFO:machine: AMD64
2025-09-23 15:55:25,993:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:55:25,993:INFO:Memory: svmem(total=16486035456, available=5141168128, percent=68.8, used=11344867328, free=5141168128)
2025-09-23 15:55:25,993:INFO:Physical Core: 8
2025-09-23 15:55:25,993:INFO:Logical Core: 16
2025-09-23 15:55:25,993:INFO:Checking libraries
2025-09-23 15:55:25,995:INFO:System:
2025-09-23 15:55:25,995:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:55:25,995:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:55:25,995:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:55:25,995:INFO:PyCaret required dependencies:
2025-09-23 15:55:25,995:INFO:                 pip: 25.2
2025-09-23 15:55:25,995:INFO:          setuptools: 78.1.1
2025-09-23 15:55:25,995:INFO:             pycaret: 3.3.2
2025-09-23 15:55:25,995:INFO:             IPython: 8.37.0
2025-09-23 15:55:25,995:INFO:          ipywidgets: 8.1.7
2025-09-23 15:55:25,995:INFO:                tqdm: 4.67.1
2025-09-23 15:55:25,995:INFO:               numpy: 1.26.4
2025-09-23 15:55:25,995:INFO:              pandas: 2.1.4
2025-09-23 15:55:25,995:INFO:              jinja2: 3.1.6
2025-09-23 15:55:25,995:INFO:               scipy: 1.11.4
2025-09-23 15:55:25,995:INFO:              joblib: 1.3.2
2025-09-23 15:55:25,995:INFO:             sklearn: 1.4.2
2025-09-23 15:55:25,995:INFO:                pyod: 2.0.5
2025-09-23 15:55:25,995:INFO:            imblearn: 0.14.0
2025-09-23 15:55:25,996:INFO:   category_encoders: 2.7.0
2025-09-23 15:55:25,996:INFO:            lightgbm: 4.6.0
2025-09-23 15:55:25,996:INFO:               numba: 0.61.0
2025-09-23 15:55:25,996:INFO:            requests: 2.32.5
2025-09-23 15:55:25,996:INFO:          matplotlib: 3.7.5
2025-09-23 15:55:25,996:INFO:          scikitplot: 0.3.7
2025-09-23 15:55:25,996:INFO:         yellowbrick: 1.5
2025-09-23 15:55:25,996:INFO:              plotly: 5.24.1
2025-09-23 15:55:25,996:INFO:    plotly-resampler: Not installed
2025-09-23 15:55:25,996:INFO:             kaleido: 1.1.0
2025-09-23 15:55:25,996:INFO:           schemdraw: 0.15
2025-09-23 15:55:25,996:INFO:         statsmodels: 0.14.5
2025-09-23 15:55:25,996:INFO:              sktime: 0.26.0
2025-09-23 15:55:25,996:INFO:               tbats: 1.1.3
2025-09-23 15:55:25,996:INFO:            pmdarima: 2.0.4
2025-09-23 15:55:25,996:INFO:              psutil: 7.1.0
2025-09-23 15:55:25,996:INFO:          markupsafe: 3.0.2
2025-09-23 15:55:25,996:INFO:             pickle5: Not installed
2025-09-23 15:55:25,996:INFO:         cloudpickle: 3.1.1
2025-09-23 15:55:25,996:INFO:         deprecation: 2.1.0
2025-09-23 15:55:25,996:INFO:              xxhash: 3.5.0
2025-09-23 15:55:25,997:INFO:           wurlitzer: Not installed
2025-09-23 15:55:25,997:INFO:PyCaret optional dependencies:
2025-09-23 15:55:25,997:INFO:                shap: 0.44.1
2025-09-23 15:55:25,997:INFO:           interpret: 0.7.2
2025-09-23 15:55:25,997:INFO:                umap: 0.5.7
2025-09-23 15:55:25,997:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:55:25,997:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:55:25,997:INFO:             autoviz: Not installed
2025-09-23 15:55:25,997:INFO:           fairlearn: 0.7.0
2025-09-23 15:55:25,997:INFO:          deepchecks: Not installed
2025-09-23 15:55:25,997:INFO:             xgboost: 3.0.5
2025-09-23 15:55:25,997:INFO:            catboost: 1.2.8
2025-09-23 15:55:25,997:INFO:              kmodes: 0.12.2
2025-09-23 15:55:25,997:INFO:             mlxtend: 0.23.4
2025-09-23 15:55:25,997:INFO:       statsforecast: 1.5.0
2025-09-23 15:55:25,997:INFO:        tune_sklearn: Not installed
2025-09-23 15:55:25,997:INFO:                 ray: Not installed
2025-09-23 15:55:25,997:INFO:            hyperopt: 0.2.7
2025-09-23 15:55:25,997:INFO:              optuna: 4.5.0
2025-09-23 15:55:25,997:INFO:               skopt: 0.10.2
2025-09-23 15:55:25,997:INFO:              mlflow: 3.4.0
2025-09-23 15:55:25,997:INFO:              gradio: 5.46.1
2025-09-23 15:55:25,997:INFO:             fastapi: 0.117.1
2025-09-23 15:55:25,997:INFO:             uvicorn: 0.36.0
2025-09-23 15:55:25,997:INFO:              m2cgen: 0.10.0
2025-09-23 15:55:25,997:INFO:           evidently: 0.4.40
2025-09-23 15:55:25,997:INFO:               fugue: 0.8.7
2025-09-23 15:55:25,997:INFO:           streamlit: Not installed
2025-09-23 15:55:25,998:INFO:             prophet: Not installed
2025-09-23 15:55:25,998:INFO:None
2025-09-23 15:55:25,998:INFO:Set up data.
2025-09-23 15:55:26,070:INFO:Set up folding strategy.
2025-09-23 15:55:26,070:INFO:Set up train/test split.
2025-09-23 15:55:26,130:INFO:Set up index.
2025-09-23 15:55:26,131:INFO:Assigning column types.
2025-09-23 15:55:26,147:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:55:26,210:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:55:26,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:55:26,250:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:26,255:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:26,320:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:55:26,323:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:55:26,365:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:26,368:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:26,369:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:55:26,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:55:26,480:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:26,484:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:26,551:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:55:26,594:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:26,599:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:26,600:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:55:26,708:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:26,712:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:26,820:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:26,824:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:26,827:INFO:Preparing preprocessing pipeline...
2025-09-23 15:55:26,830:INFO:Set up label encoding.
2025-09-23 15:55:26,831:INFO:Set up simple imputation.
2025-09-23 15:55:26,845:INFO:Set up encoding of ordinal features.
2025-09-23 15:55:26,850:INFO:Set up encoding of categorical features.
2025-09-23 15:55:26,853:INFO:Set up column name cleaning.
2025-09-23 15:55:27,856:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:55:27,877:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_...
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:55:27,877:INFO:Creating final display dataframe.
2025-09-23 15:55:28,839:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                  (50000, 35)
5        Transformed data shape                                  (50000, 50)
6   Transformed train set shape                                  (35000, 50)
7    Transformed test set shape                                  (15000, 50)
8               Ignore features                                           10
9              Numeric features                                            4
10         Categorical features                                           10
11                   Preprocess                                         True
12              Imputation type                                       simple
13           Numeric imputation                                         mean
14       Categorical imputation                                         mode
15     Maximum one-hot encoding                                           25
16              Encoding method                                         None
17               Fold Generator                              StratifiedKFold
18                  Fold Number                                            5
19                     CPU Jobs                                           -1
20                      Use GPU                                        False
21               Log Experiment                                        False
22              Experiment Name                             clf-default-name
23                          USI                                         beb7
2025-09-23 15:55:28,948:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:28,952:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:29,065:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:55:29,069:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:55:29,071:INFO:setup() successfully completed in 3.09s...............
2025-09-23 15:55:29,072:INFO:Initializing compare_models()
2025-09-23 15:55:29,072:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:55:29,072:INFO:Checking exceptions
2025-09-23 15:55:29,087:INFO:Preparing display monitor
2025-09-23 15:55:29,131:INFO:Initializing Logistic Regression
2025-09-23 15:55:29,131:INFO:Total runtime is 0.0 minutes
2025-09-23 15:55:29,138:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:29,139:INFO:Initializing create_model()
2025-09-23 15:55:29,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:29,140:INFO:Checking exceptions
2025-09-23 15:55:29,140:INFO:Importing libraries
2025-09-23 15:55:29,141:INFO:Copying training dataset
2025-09-23 15:55:29,213:INFO:Defining folds
2025-09-23 15:55:29,213:INFO:Declaring metric variables
2025-09-23 15:55:29,220:INFO:Importing untrained model
2025-09-23 15:55:29,225:INFO:Logistic Regression Imported successfully
2025-09-23 15:55:29,234:INFO:Starting cross validation
2025-09-23 15:55:29,238:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:41,946:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:55:41,991:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:55:42,046:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:55:42,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:55:42,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:55:42,155:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:42,181:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,189:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:42,211:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,236:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:42,247:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:42,262:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,264:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,268:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,291:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,312:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,320:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:42,322:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,323:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,341:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,370:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,378:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,388:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,441:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:42,504:INFO:Calculating mean and std
2025-09-23 15:55:42,506:INFO:Creating metrics dataframe
2025-09-23 15:55:42,509:INFO:Uploading results into container
2025-09-23 15:55:42,511:INFO:Uploading model into container now
2025-09-23 15:55:42,512:INFO:_master_model_container: 1
2025-09-23 15:55:42,512:INFO:_display_container: 2
2025-09-23 15:55:42,512:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:55:42,512:INFO:create_model() successfully completed......................................
2025-09-23 15:55:42,702:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:42,702:INFO:Creating metrics dataframe
2025-09-23 15:55:42,711:INFO:Initializing K Neighbors Classifier
2025-09-23 15:55:42,711:INFO:Total runtime is 0.2263365427652995 minutes
2025-09-23 15:55:42,717:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:42,718:INFO:Initializing create_model()
2025-09-23 15:55:42,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:42,718:INFO:Checking exceptions
2025-09-23 15:55:42,718:INFO:Importing libraries
2025-09-23 15:55:42,718:INFO:Copying training dataset
2025-09-23 15:55:42,751:INFO:Defining folds
2025-09-23 15:55:42,751:INFO:Declaring metric variables
2025-09-23 15:55:42,758:INFO:Importing untrained model
2025-09-23 15:55:42,763:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:55:42,773:INFO:Starting cross validation
2025-09-23 15:55:42,780:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:47,473:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,566:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,574:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,588:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,611:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,622:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,644:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,652:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,653:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,665:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,688:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,696:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,731:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:47,822:INFO:Calculating mean and std
2025-09-23 15:55:47,823:INFO:Creating metrics dataframe
2025-09-23 15:55:47,827:INFO:Uploading results into container
2025-09-23 15:55:47,829:INFO:Uploading model into container now
2025-09-23 15:55:47,829:INFO:_master_model_container: 2
2025-09-23 15:55:47,829:INFO:_display_container: 2
2025-09-23 15:55:47,830:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 15:55:47,830:INFO:create_model() successfully completed......................................
2025-09-23 15:55:48,021:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:48,021:INFO:Creating metrics dataframe
2025-09-23 15:55:48,034:INFO:Initializing Naive Bayes
2025-09-23 15:55:48,034:INFO:Total runtime is 0.31504515806833905 minutes
2025-09-23 15:55:48,039:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:48,040:INFO:Initializing create_model()
2025-09-23 15:55:48,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:48,040:INFO:Checking exceptions
2025-09-23 15:55:48,040:INFO:Importing libraries
2025-09-23 15:55:48,040:INFO:Copying training dataset
2025-09-23 15:55:48,109:INFO:Defining folds
2025-09-23 15:55:48,110:INFO:Declaring metric variables
2025-09-23 15:55:48,124:INFO:Importing untrained model
2025-09-23 15:55:48,134:INFO:Naive Bayes Imported successfully
2025-09-23 15:55:48,146:INFO:Starting cross validation
2025-09-23 15:55:48,152:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:49,541:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,588:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,591:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,601:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,630:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,641:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,645:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,645:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,661:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,686:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,688:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,689:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,705:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:49,765:INFO:Calculating mean and std
2025-09-23 15:55:49,766:INFO:Creating metrics dataframe
2025-09-23 15:55:49,769:INFO:Uploading results into container
2025-09-23 15:55:49,769:INFO:Uploading model into container now
2025-09-23 15:55:49,770:INFO:_master_model_container: 3
2025-09-23 15:55:49,770:INFO:_display_container: 2
2025-09-23 15:55:49,770:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 15:55:49,770:INFO:create_model() successfully completed......................................
2025-09-23 15:55:49,954:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:49,954:INFO:Creating metrics dataframe
2025-09-23 15:55:49,964:INFO:Initializing Decision Tree Classifier
2025-09-23 15:55:49,965:INFO:Total runtime is 0.3472268541653951 minutes
2025-09-23 15:55:49,970:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:49,970:INFO:Initializing create_model()
2025-09-23 15:55:49,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:49,971:INFO:Checking exceptions
2025-09-23 15:55:49,971:INFO:Importing libraries
2025-09-23 15:55:49,971:INFO:Copying training dataset
2025-09-23 15:55:49,999:INFO:Defining folds
2025-09-23 15:55:49,999:INFO:Declaring metric variables
2025-09-23 15:55:50,006:INFO:Importing untrained model
2025-09-23 15:55:50,012:INFO:Decision Tree Classifier Imported successfully
2025-09-23 15:55:50,025:INFO:Starting cross validation
2025-09-23 15:55:50,029:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:51,414:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,471:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,492:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,500:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,504:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,515:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,516:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,543:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,545:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,556:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,577:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,588:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,595:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,610:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,624:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:51,709:INFO:Calculating mean and std
2025-09-23 15:55:51,711:INFO:Creating metrics dataframe
2025-09-23 15:55:51,714:INFO:Uploading results into container
2025-09-23 15:55:51,715:INFO:Uploading model into container now
2025-09-23 15:55:51,716:INFO:_master_model_container: 4
2025-09-23 15:55:51,717:INFO:_display_container: 2
2025-09-23 15:55:51,718:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 15:55:51,718:INFO:create_model() successfully completed......................................
2025-09-23 15:55:51,906:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:51,906:INFO:Creating metrics dataframe
2025-09-23 15:55:51,917:INFO:Initializing SVM - Linear Kernel
2025-09-23 15:55:51,917:INFO:Total runtime is 0.37977101405461633 minutes
2025-09-23 15:55:51,923:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:51,923:INFO:Initializing create_model()
2025-09-23 15:55:51,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:51,923:INFO:Checking exceptions
2025-09-23 15:55:51,923:INFO:Importing libraries
2025-09-23 15:55:51,925:INFO:Copying training dataset
2025-09-23 15:55:51,954:INFO:Defining folds
2025-09-23 15:55:51,955:INFO:Declaring metric variables
2025-09-23 15:55:51,963:INFO:Importing untrained model
2025-09-23 15:55:51,971:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 15:55:51,983:INFO:Starting cross validation
2025-09-23 15:55:51,988:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:56,112:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:56,134:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,227:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,449:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:56,474:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,516:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,545:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:56,564:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,566:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,604:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:56,616:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,616:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,661:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,661:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,731:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:56,748:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,798:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,837:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:56,905:INFO:Calculating mean and std
2025-09-23 15:55:56,905:INFO:Creating metrics dataframe
2025-09-23 15:55:56,905:INFO:Uploading results into container
2025-09-23 15:55:56,912:INFO:Uploading model into container now
2025-09-23 15:55:56,912:INFO:_master_model_container: 5
2025-09-23 15:55:56,914:INFO:_display_container: 2
2025-09-23 15:55:56,915:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 15:55:56,915:INFO:create_model() successfully completed......................................
2025-09-23 15:55:57,098:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:57,098:INFO:Creating metrics dataframe
2025-09-23 15:55:57,108:INFO:Initializing Ridge Classifier
2025-09-23 15:55:57,108:INFO:Total runtime is 0.4662887811660767 minutes
2025-09-23 15:55:57,115:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:57,116:INFO:Initializing create_model()
2025-09-23 15:55:57,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:57,117:INFO:Checking exceptions
2025-09-23 15:55:57,117:INFO:Importing libraries
2025-09-23 15:55:57,117:INFO:Copying training dataset
2025-09-23 15:55:57,147:INFO:Defining folds
2025-09-23 15:55:57,147:INFO:Declaring metric variables
2025-09-23 15:55:57,154:INFO:Importing untrained model
2025-09-23 15:55:57,162:INFO:Ridge Classifier Imported successfully
2025-09-23 15:55:57,173:INFO:Starting cross validation
2025-09-23 15:55:57,178:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:55:58,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:58,545:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:58,555:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,567:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,575:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:58,590:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:58,592:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,592:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:55:58,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,610:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,615:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,639:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,662:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,664:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,665:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,666:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,688:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,706:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,717:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:55:58,780:INFO:Calculating mean and std
2025-09-23 15:55:58,782:INFO:Creating metrics dataframe
2025-09-23 15:55:58,786:INFO:Uploading results into container
2025-09-23 15:55:58,787:INFO:Uploading model into container now
2025-09-23 15:55:58,787:INFO:_master_model_container: 6
2025-09-23 15:55:58,788:INFO:_display_container: 2
2025-09-23 15:55:58,789:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 15:55:58,789:INFO:create_model() successfully completed......................................
2025-09-23 15:55:58,970:INFO:SubProcess create_model() end ==================================
2025-09-23 15:55:58,970:INFO:Creating metrics dataframe
2025-09-23 15:55:58,980:INFO:Initializing Random Forest Classifier
2025-09-23 15:55:58,980:INFO:Total runtime is 0.49748490651448574 minutes
2025-09-23 15:55:58,986:INFO:SubProcess create_model() called ==================================
2025-09-23 15:55:58,987:INFO:Initializing create_model()
2025-09-23 15:55:58,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:55:58,987:INFO:Checking exceptions
2025-09-23 15:55:58,987:INFO:Importing libraries
2025-09-23 15:55:58,987:INFO:Copying training dataset
2025-09-23 15:55:59,018:INFO:Defining folds
2025-09-23 15:55:59,018:INFO:Declaring metric variables
2025-09-23 15:55:59,031:INFO:Importing untrained model
2025-09-23 15:55:59,039:INFO:Random Forest Classifier Imported successfully
2025-09-23 15:55:59,053:INFO:Starting cross validation
2025-09-23 15:55:59,059:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:02,751:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,765:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,779:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,796:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,810:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,827:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,849:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,863:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,886:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:02,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:03,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:03,013:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:03,052:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:03,052:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:03,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:03,159:INFO:Calculating mean and std
2025-09-23 15:56:03,162:INFO:Creating metrics dataframe
2025-09-23 15:56:03,163:INFO:Uploading results into container
2025-09-23 15:56:03,164:INFO:Uploading model into container now
2025-09-23 15:56:03,164:INFO:_master_model_container: 7
2025-09-23 15:56:03,164:INFO:_display_container: 2
2025-09-23 15:56:03,164:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 15:56:03,164:INFO:create_model() successfully completed......................................
2025-09-23 15:56:03,344:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:03,349:INFO:Creating metrics dataframe
2025-09-23 15:56:03,364:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 15:56:03,364:INFO:Total runtime is 0.5705578923225403 minutes
2025-09-23 15:56:03,368:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:03,371:INFO:Initializing create_model()
2025-09-23 15:56:03,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:03,371:INFO:Checking exceptions
2025-09-23 15:56:03,371:INFO:Importing libraries
2025-09-23 15:56:03,371:INFO:Copying training dataset
2025-09-23 15:56:03,429:INFO:Defining folds
2025-09-23 15:56:03,429:INFO:Declaring metric variables
2025-09-23 15:56:03,436:INFO:Importing untrained model
2025-09-23 15:56:03,444:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 15:56:03,453:INFO:Starting cross validation
2025-09-23 15:56:03,461:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:04,474:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:56:04,490:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:56:04,587:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:56:04,613:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:56:04,624:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 15:56:04,861:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:04,890:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:04,897:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:04,915:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:04,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:04,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:04,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:04,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:04,972:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:04,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:04,994:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:04,997:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,002:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,008:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,030:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,039:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,055:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,091:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,103:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:05,166:INFO:Calculating mean and std
2025-09-23 15:56:05,168:INFO:Creating metrics dataframe
2025-09-23 15:56:05,170:INFO:Uploading results into container
2025-09-23 15:56:05,172:INFO:Uploading model into container now
2025-09-23 15:56:05,173:INFO:_master_model_container: 8
2025-09-23 15:56:05,173:INFO:_display_container: 2
2025-09-23 15:56:05,173:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 15:56:05,173:INFO:create_model() successfully completed......................................
2025-09-23 15:56:05,366:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:05,366:INFO:Creating metrics dataframe
2025-09-23 15:56:05,381:INFO:Initializing Ada Boost Classifier
2025-09-23 15:56:05,381:INFO:Total runtime is 0.6041689236958822 minutes
2025-09-23 15:56:05,386:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:05,387:INFO:Initializing create_model()
2025-09-23 15:56:05,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:05,387:INFO:Checking exceptions
2025-09-23 15:56:05,387:INFO:Importing libraries
2025-09-23 15:56:05,387:INFO:Copying training dataset
2025-09-23 15:56:05,422:INFO:Defining folds
2025-09-23 15:56:05,422:INFO:Declaring metric variables
2025-09-23 15:56:05,428:INFO:Importing untrained model
2025-09-23 15:56:05,435:INFO:Ada Boost Classifier Imported successfully
2025-09-23 15:56:05,445:INFO:Starting cross validation
2025-09-23 15:56:05,452:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:06,481:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:56:06,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:56:06,513:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:56:06,522:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:56:06,538:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 15:56:09,349:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:09,377:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,378:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:09,395:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:09,396:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,417:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:09,419:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,424:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:09,429:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,436:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,447:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,448:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,470:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,475:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,476:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,493:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,504:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,551:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:09,612:INFO:Calculating mean and std
2025-09-23 15:56:09,614:INFO:Creating metrics dataframe
2025-09-23 15:56:09,617:INFO:Uploading results into container
2025-09-23 15:56:09,618:INFO:Uploading model into container now
2025-09-23 15:56:09,618:INFO:_master_model_container: 9
2025-09-23 15:56:09,619:INFO:_display_container: 2
2025-09-23 15:56:09,619:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 15:56:09,620:INFO:create_model() successfully completed......................................
2025-09-23 15:56:09,809:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:09,809:INFO:Creating metrics dataframe
2025-09-23 15:56:09,821:INFO:Initializing Gradient Boosting Classifier
2025-09-23 15:56:09,822:INFO:Total runtime is 0.6781898538271586 minutes
2025-09-23 15:56:09,829:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:09,829:INFO:Initializing create_model()
2025-09-23 15:56:09,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:09,830:INFO:Checking exceptions
2025-09-23 15:56:09,830:INFO:Importing libraries
2025-09-23 15:56:09,830:INFO:Copying training dataset
2025-09-23 15:56:09,860:INFO:Defining folds
2025-09-23 15:56:09,860:INFO:Declaring metric variables
2025-09-23 15:56:09,870:INFO:Importing untrained model
2025-09-23 15:56:09,876:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 15:56:09,888:INFO:Starting cross validation
2025-09-23 15:56:09,894:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:30,337:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:30,361:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,425:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,487:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,523:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:30,546:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,551:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:30,572:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,573:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:30,591:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:30,592:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,615:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,626:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,652:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,653:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,657:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,676:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,712:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:30,783:INFO:Calculating mean and std
2025-09-23 15:56:30,785:INFO:Creating metrics dataframe
2025-09-23 15:56:30,789:INFO:Uploading results into container
2025-09-23 15:56:30,789:INFO:Uploading model into container now
2025-09-23 15:56:30,791:INFO:_master_model_container: 10
2025-09-23 15:56:30,791:INFO:_display_container: 2
2025-09-23 15:56:30,792:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 15:56:30,793:INFO:create_model() successfully completed......................................
2025-09-23 15:56:30,976:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:30,976:INFO:Creating metrics dataframe
2025-09-23 15:56:30,990:INFO:Initializing Linear Discriminant Analysis
2025-09-23 15:56:30,990:INFO:Total runtime is 1.0309790968894958 minutes
2025-09-23 15:56:30,997:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:30,998:INFO:Initializing create_model()
2025-09-23 15:56:30,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:30,998:INFO:Checking exceptions
2025-09-23 15:56:30,998:INFO:Importing libraries
2025-09-23 15:56:30,998:INFO:Copying training dataset
2025-09-23 15:56:31,030:INFO:Defining folds
2025-09-23 15:56:31,030:INFO:Declaring metric variables
2025-09-23 15:56:31,040:INFO:Importing untrained model
2025-09-23 15:56:31,047:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 15:56:31,058:INFO:Starting cross validation
2025-09-23 15:56:31,064:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:32,797:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:32,822:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,832:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:32,845:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:32,856:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,856:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:32,863:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,863:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:56:32,863:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,878:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,891:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,909:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,911:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,945:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,987:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,987:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:32,987:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:33,070:INFO:Calculating mean and std
2025-09-23 15:56:33,071:INFO:Creating metrics dataframe
2025-09-23 15:56:33,074:INFO:Uploading results into container
2025-09-23 15:56:33,074:INFO:Uploading model into container now
2025-09-23 15:56:33,075:INFO:_master_model_container: 11
2025-09-23 15:56:33,075:INFO:_display_container: 2
2025-09-23 15:56:33,075:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 15:56:33,075:INFO:create_model() successfully completed......................................
2025-09-23 15:56:33,264:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:33,265:INFO:Creating metrics dataframe
2025-09-23 15:56:33,283:INFO:Initializing Extra Trees Classifier
2025-09-23 15:56:33,283:INFO:Total runtime is 1.0691988110542296 minutes
2025-09-23 15:56:33,288:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:33,289:INFO:Initializing create_model()
2025-09-23 15:56:33,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:33,289:INFO:Checking exceptions
2025-09-23 15:56:33,289:INFO:Importing libraries
2025-09-23 15:56:33,289:INFO:Copying training dataset
2025-09-23 15:56:33,321:INFO:Defining folds
2025-09-23 15:56:33,322:INFO:Declaring metric variables
2025-09-23 15:56:33,331:INFO:Importing untrained model
2025-09-23 15:56:33,337:INFO:Extra Trees Classifier Imported successfully
2025-09-23 15:56:33,348:INFO:Starting cross validation
2025-09-23 15:56:33,353:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:38,032:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,065:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,092:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,139:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,172:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,219:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,268:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,279:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,309:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,309:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,309:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,359:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,361:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,415:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:38,492:INFO:Calculating mean and std
2025-09-23 15:56:38,492:INFO:Creating metrics dataframe
2025-09-23 15:56:38,498:INFO:Uploading results into container
2025-09-23 15:56:38,498:INFO:Uploading model into container now
2025-09-23 15:56:38,498:INFO:_master_model_container: 12
2025-09-23 15:56:38,501:INFO:_display_container: 2
2025-09-23 15:56:38,501:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 15:56:38,502:INFO:create_model() successfully completed......................................
2025-09-23 15:56:38,678:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:38,678:INFO:Creating metrics dataframe
2025-09-23 15:56:38,702:INFO:Initializing Extreme Gradient Boosting
2025-09-23 15:56:38,702:INFO:Total runtime is 1.1595165689786275 minutes
2025-09-23 15:56:38,710:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:38,710:INFO:Initializing create_model()
2025-09-23 15:56:38,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:38,710:INFO:Checking exceptions
2025-09-23 15:56:38,710:INFO:Importing libraries
2025-09-23 15:56:38,710:INFO:Copying training dataset
2025-09-23 15:56:38,735:INFO:Defining folds
2025-09-23 15:56:38,735:INFO:Declaring metric variables
2025-09-23 15:56:38,752:INFO:Importing untrained model
2025-09-23 15:56:38,758:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:56:38,774:INFO:Starting cross validation
2025-09-23 15:56:38,778:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:42,863:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,873:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,913:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,915:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,922:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,951:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:42,974:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:43,001:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:43,012:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:43,019:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:43,055:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:43,065:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:43,131:INFO:Calculating mean and std
2025-09-23 15:56:43,134:INFO:Creating metrics dataframe
2025-09-23 15:56:43,136:INFO:Uploading results into container
2025-09-23 15:56:43,137:INFO:Uploading model into container now
2025-09-23 15:56:43,137:INFO:_master_model_container: 13
2025-09-23 15:56:43,139:INFO:_display_container: 2
2025-09-23 15:56:43,140:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:56:43,141:INFO:create_model() successfully completed......................................
2025-09-23 15:56:43,332:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:43,332:INFO:Creating metrics dataframe
2025-09-23 15:56:43,350:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 15:56:43,350:INFO:Total runtime is 1.2369900584220885 minutes
2025-09-23 15:56:43,357:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:43,358:INFO:Initializing create_model()
2025-09-23 15:56:43,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:43,358:INFO:Checking exceptions
2025-09-23 15:56:43,358:INFO:Importing libraries
2025-09-23 15:56:43,359:INFO:Copying training dataset
2025-09-23 15:56:43,395:INFO:Defining folds
2025-09-23 15:56:43,396:INFO:Declaring metric variables
2025-09-23 15:56:43,403:INFO:Importing untrained model
2025-09-23 15:56:43,409:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 15:56:43,422:INFO:Starting cross validation
2025-09-23 15:56:43,427:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:56:46,825:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:46,888:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:46,949:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,185:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,203:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,248:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,250:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,264:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,318:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,320:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,325:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,389:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,689:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,743:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:56:47,854:INFO:Calculating mean and std
2025-09-23 15:56:47,855:INFO:Creating metrics dataframe
2025-09-23 15:56:47,857:INFO:Uploading results into container
2025-09-23 15:56:47,860:INFO:Uploading model into container now
2025-09-23 15:56:47,860:INFO:_master_model_container: 14
2025-09-23 15:56:47,860:INFO:_display_container: 2
2025-09-23 15:56:47,862:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 15:56:47,862:INFO:create_model() successfully completed......................................
2025-09-23 15:56:48,047:INFO:SubProcess create_model() end ==================================
2025-09-23 15:56:48,047:INFO:Creating metrics dataframe
2025-09-23 15:56:48,063:INFO:Initializing CatBoost Classifier
2025-09-23 15:56:48,063:INFO:Total runtime is 1.3155430912971495 minutes
2025-09-23 15:56:48,070:INFO:SubProcess create_model() called ==================================
2025-09-23 15:56:48,071:INFO:Initializing create_model()
2025-09-23 15:56:48,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:56:48,072:INFO:Checking exceptions
2025-09-23 15:56:48,072:INFO:Importing libraries
2025-09-23 15:56:48,072:INFO:Copying training dataset
2025-09-23 15:56:48,106:INFO:Defining folds
2025-09-23 15:56:48,107:INFO:Declaring metric variables
2025-09-23 15:56:48,114:INFO:Importing untrained model
2025-09-23 15:56:48,120:INFO:CatBoost Classifier Imported successfully
2025-09-23 15:56:48,131:INFO:Starting cross validation
2025-09-23 15:56:48,136:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:57:11,837:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:11,917:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:11,993:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:12,709:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:12,781:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:12,858:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:13,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:13,925:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:13,985:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,205:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,252:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,302:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,436:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,478:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:14,576:INFO:Calculating mean and std
2025-09-23 15:57:14,578:INFO:Creating metrics dataframe
2025-09-23 15:57:14,581:INFO:Uploading results into container
2025-09-23 15:57:14,582:INFO:Uploading model into container now
2025-09-23 15:57:14,583:INFO:_master_model_container: 15
2025-09-23 15:57:14,583:INFO:_display_container: 2
2025-09-23 15:57:14,583:INFO:<catboost.core.CatBoostClassifier object at 0x000001D2A388C610>
2025-09-23 15:57:14,583:INFO:create_model() successfully completed......................................
2025-09-23 15:57:14,766:INFO:SubProcess create_model() end ==================================
2025-09-23 15:57:14,766:INFO:Creating metrics dataframe
2025-09-23 15:57:14,783:INFO:Initializing Dummy Classifier
2025-09-23 15:57:14,784:INFO:Total runtime is 1.7608879089355467 minutes
2025-09-23 15:57:14,789:INFO:SubProcess create_model() called ==================================
2025-09-23 15:57:14,791:INFO:Initializing create_model()
2025-09-23 15:57:14,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D292276500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:57:14,791:INFO:Checking exceptions
2025-09-23 15:57:14,791:INFO:Importing libraries
2025-09-23 15:57:14,791:INFO:Copying training dataset
2025-09-23 15:57:14,821:INFO:Defining folds
2025-09-23 15:57:14,830:INFO:Declaring metric variables
2025-09-23 15:57:14,837:INFO:Importing untrained model
2025-09-23 15:57:14,847:INFO:Dummy Classifier Imported successfully
2025-09-23 15:57:14,857:INFO:Starting cross validation
2025-09-23 15:57:14,864:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:57:15,980:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,036:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,052:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,056:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:57:16,067:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,085:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,099:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,099:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:57:16,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,141:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,156:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:57:16,160:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,170:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:57:16,178:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,184:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 15:57:16,186:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:16,280:INFO:Calculating mean and std
2025-09-23 15:57:16,280:INFO:Creating metrics dataframe
2025-09-23 15:57:16,286:INFO:Uploading results into container
2025-09-23 15:57:16,286:INFO:Uploading model into container now
2025-09-23 15:57:16,287:INFO:_master_model_container: 16
2025-09-23 15:57:16,288:INFO:_display_container: 2
2025-09-23 15:57:16,288:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 15:57:16,288:INFO:create_model() successfully completed......................................
2025-09-23 15:57:16,471:INFO:SubProcess create_model() end ==================================
2025-09-23 15:57:16,471:INFO:Creating metrics dataframe
2025-09-23 15:57:16,506:INFO:Initializing create_model()
2025-09-23 15:57:16,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:57:16,507:INFO:Checking exceptions
2025-09-23 15:57:16,509:INFO:Importing libraries
2025-09-23 15:57:16,509:INFO:Copying training dataset
2025-09-23 15:57:16,537:INFO:Defining folds
2025-09-23 15:57:16,537:INFO:Declaring metric variables
2025-09-23 15:57:16,537:INFO:Importing untrained model
2025-09-23 15:57:16,537:INFO:Declaring custom model
2025-09-23 15:57:16,537:INFO:Logistic Regression Imported successfully
2025-09-23 15:57:16,537:INFO:Cross validation set to False
2025-09-23 15:57:16,537:INFO:Fitting Model
2025-09-23 15:57:26,585:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:57:26,585:INFO:create_model() successfully completed......................................
2025-09-23 15:57:26,818:INFO:_master_model_container: 16
2025-09-23 15:57:26,818:INFO:_display_container: 2
2025-09-23 15:57:26,818:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:57:26,818:INFO:compare_models() successfully completed......................................
2025-09-23 15:57:26,828:INFO:Initializing create_model()
2025-09-23 15:57:26,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:57:26,828:INFO:Checking exceptions
2025-09-23 15:57:26,853:INFO:Importing libraries
2025-09-23 15:57:26,853:INFO:Copying training dataset
2025-09-23 15:57:26,896:INFO:Defining folds
2025-09-23 15:57:26,896:INFO:Declaring metric variables
2025-09-23 15:57:26,906:INFO:Importing untrained model
2025-09-23 15:57:26,914:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:57:26,923:INFO:Starting cross validation
2025-09-23 15:57:26,933:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:57:30,852:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,894:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,915:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,915:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,948:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,970:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,972:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:30,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,010:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,012:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,026:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,031:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,070:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,081:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:31,183:INFO:Calculating mean and std
2025-09-23 15:57:31,185:INFO:Creating metrics dataframe
2025-09-23 15:57:31,197:INFO:Finalizing model
2025-09-23 15:57:32,661:INFO:Uploading results into container
2025-09-23 15:57:32,662:INFO:Uploading model into container now
2025-09-23 15:57:32,676:INFO:_master_model_container: 17
2025-09-23 15:57:32,676:INFO:_display_container: 3
2025-09-23 15:57:32,678:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:57:32,678:INFO:create_model() successfully completed......................................
2025-09-23 15:57:32,882:INFO:Initializing tune_model()
2025-09-23 15:57:32,882:INFO:tune_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>)
2025-09-23 15:57:32,882:INFO:Checking exceptions
2025-09-23 15:57:32,915:INFO:Copying training dataset
2025-09-23 15:57:32,950:INFO:Checking base model
2025-09-23 15:57:32,950:INFO:Base model : Extreme Gradient Boosting
2025-09-23 15:57:32,958:INFO:Declaring metric variables
2025-09-23 15:57:32,966:INFO:Defining Hyperparameters
2025-09-23 15:57:33,148:INFO:Tuning with n_jobs=-1
2025-09-23 15:57:33,148:INFO:Initializing RandomizedSearchCV
2025-09-23 15:57:37,324:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:37,352:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:37,410:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:37,722:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:37,839:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:39,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:40,039:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:40,115:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:40,198:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:40,297:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:41,440:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:43,032:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:43,359:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:43,466:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:43,638:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:43,781:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:44,766:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:44,893:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,007:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,168:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,212:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,219:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,246:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,710:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,712:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:46,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:48,013:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:48,736:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:48,878:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:49,127:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:52,338:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:52,632:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:53,335:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:54,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:54,360:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:55,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:56,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:56,483:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:57,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:57,177:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:57,750:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,081:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,132:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,470:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,517:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,523:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,568:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,568:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,592:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,800:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:57:58,844:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 33.0, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 10, 'actual_estimator__n_estimators': 170, 'actual_estimator__min_child_weight': 2, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.3, 'actual_estimator__colsample_bytree': 0.7}
2025-09-23 15:57:58,848:INFO:Hyperparameter search completed
2025-09-23 15:57:58,848:INFO:SubProcess create_model() called ==================================
2025-09-23 15:57:58,851:INFO:Initializing create_model()
2025-09-23 15:57:58,852:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D2A239F490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'scale_pos_weight': 33.0, 'reg_lambda': 0.15, 'reg_alpha': 10, 'n_estimators': 170, 'min_child_weight': 2, 'max_depth': 8, 'learning_rate': 0.3, 'colsample_bytree': 0.7})
2025-09-23 15:57:58,852:INFO:Checking exceptions
2025-09-23 15:57:58,852:INFO:Importing libraries
2025-09-23 15:57:58,852:INFO:Copying training dataset
2025-09-23 15:57:58,879:INFO:Defining folds
2025-09-23 15:57:58,879:INFO:Declaring metric variables
2025-09-23 15:57:58,886:INFO:Importing untrained model
2025-09-23 15:57:58,886:INFO:Declaring custom model
2025-09-23 15:57:58,889:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:57:58,903:INFO:Starting cross validation
2025-09-23 15:57:58,909:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:58:04,559:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,594:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,646:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,651:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,690:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,712:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,713:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,722:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,739:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,765:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,771:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,817:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,817:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:04,886:INFO:Calculating mean and std
2025-09-23 15:58:04,888:INFO:Creating metrics dataframe
2025-09-23 15:58:04,895:INFO:Finalizing model
2025-09-23 15:58:06,745:INFO:Uploading results into container
2025-09-23 15:58:06,746:INFO:Uploading model into container now
2025-09-23 15:58:06,746:INFO:_master_model_container: 18
2025-09-23 15:58:06,746:INFO:_display_container: 4
2025-09-23 15:58:06,749:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.3, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=8,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=170,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:58:06,749:INFO:create_model() successfully completed......................................
2025-09-23 15:58:06,946:INFO:SubProcess create_model() end ==================================
2025-09-23 15:58:06,946:INFO:choose_better activated
2025-09-23 15:58:06,946:INFO:SubProcess create_model() called ==================================
2025-09-23 15:58:06,946:INFO:Initializing create_model()
2025-09-23 15:58:06,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:58:06,946:INFO:Checking exceptions
2025-09-23 15:58:06,946:INFO:Importing libraries
2025-09-23 15:58:06,946:INFO:Copying training dataset
2025-09-23 15:58:06,984:INFO:Defining folds
2025-09-23 15:58:06,984:INFO:Declaring metric variables
2025-09-23 15:58:06,984:INFO:Importing untrained model
2025-09-23 15:58:06,984:INFO:Declaring custom model
2025-09-23 15:58:06,984:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:58:06,984:INFO:Starting cross validation
2025-09-23 15:58:06,984:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:58:11,070:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,080:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,086:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,122:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,123:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,133:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,141:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,175:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,176:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,194:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,198:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,233:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,241:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,290:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:58:11,361:INFO:Calculating mean and std
2025-09-23 15:58:11,361:INFO:Creating metrics dataframe
2025-09-23 15:58:11,364:INFO:Finalizing model
2025-09-23 15:58:12,850:INFO:Uploading results into container
2025-09-23 15:58:12,851:INFO:Uploading model into container now
2025-09-23 15:58:12,852:INFO:_master_model_container: 19
2025-09-23 15:58:12,852:INFO:_display_container: 5
2025-09-23 15:58:12,853:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:58:12,853:INFO:create_model() successfully completed......................................
2025-09-23 15:58:13,051:INFO:SubProcess create_model() end ==================================
2025-09-23 15:58:13,053:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 0.9938
2025-09-23 15:58:13,054:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.3, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=8,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=170,
              n_jobs=-1, num_parallel_tree=None, ...) result for F1 is 0.9927
2025-09-23 15:58:13,055:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-09-23 15:58:13,055:INFO:choose_better completed
2025-09-23 15:58:13,055:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-09-23 15:58:13,071:INFO:_master_model_container: 19
2025-09-23 15:58:13,071:INFO:_display_container: 4
2025-09-23 15:58:13,073:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:58:13,073:INFO:tune_model() successfully completed......................................
2025-09-23 15:58:13,264:INFO:Initializing plot_model()
2025-09-23 15:58:13,264:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, system=True)
2025-09-23 15:58:13,264:INFO:Checking exceptions
2025-09-23 15:58:13,279:INFO:Preloading libraries
2025-09-23 15:58:13,299:INFO:Copying training dataset
2025-09-23 15:58:13,299:INFO:Plot type: confusion_matrix
2025-09-23 15:58:13,579:INFO:Fitting Model
2025-09-23 15:58:13,581:INFO:Scoring test/hold-out set
2025-09-23 15:58:13,677:INFO:Saving 'Confusion Matrix.png'
2025-09-23 15:58:13,838:INFO:Visual Rendered Successfully
2025-09-23 15:58:14,019:INFO:plot_model() successfully completed......................................
2025-09-23 15:58:14,020:INFO:Initializing plot_model()
2025-09-23 15:58:14,021:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, system=True)
2025-09-23 15:58:14,021:INFO:Checking exceptions
2025-09-23 15:58:14,036:INFO:Preloading libraries
2025-09-23 15:58:14,054:INFO:Copying training dataset
2025-09-23 15:58:14,054:INFO:Plot type: feature
2025-09-23 15:58:14,055:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 15:58:14,188:INFO:Saving 'Feature Importance.png'
2025-09-23 15:58:14,390:INFO:Visual Rendered Successfully
2025-09-23 15:58:14,574:INFO:plot_model() successfully completed......................................
2025-09-23 15:58:14,575:INFO:Initializing plot_model()
2025-09-23 15:58:14,575:INFO:plot_model(plot=class_report, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, system=True)
2025-09-23 15:58:14,576:INFO:Checking exceptions
2025-09-23 15:58:14,590:INFO:Preloading libraries
2025-09-23 15:58:14,607:INFO:Copying training dataset
2025-09-23 15:58:14,607:INFO:Plot type: class_report
2025-09-23 15:58:14,890:INFO:Fitting Model
2025-09-23 15:58:14,891:INFO:Scoring test/hold-out set
2025-09-23 15:58:15,019:INFO:Saving 'Class Report.png'
2025-09-23 15:58:15,266:INFO:Visual Rendered Successfully
2025-09-23 15:58:15,458:INFO:plot_model() successfully completed......................................
2025-09-23 15:58:15,460:INFO:Initializing interpret_model()
2025-09-23 15:58:15,460:INFO:interpret_model(estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=True, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>)
2025-09-23 15:58:15,460:INFO:Checking exceptions
2025-09-23 15:58:15,460:INFO:Soft dependency imported: shap: 0.44.1
2025-09-23 15:58:15,525:INFO:plot type: summary
2025-09-23 15:58:15,525:INFO:Creating TreeExplainer
2025-09-23 15:58:15,915:INFO:Compiling shap values
2025-09-23 15:58:20,671:INFO:Saving 'SHAP summary.png'
2025-09-23 15:58:20,993:INFO:Visual Rendered Successfully
2025-09-23 15:58:20,993:INFO:interpret_model() successfully completed......................................
2025-09-23 15:58:21,182:INFO:Initializing predict_model()
2025-09-23 15:58:21,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D2A425D750>)
2025-09-23 15:58:21,182:INFO:Checking exceptions
2025-09-23 15:58:21,182:INFO:Preloading libraries
2025-09-23 15:58:22,179:INFO:Initializing finalize_model()
2025-09-23 15:58:22,179:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-23 15:58:22,179:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 15:58:22,197:INFO:Initializing create_model()
2025-09-23 15:58:22,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D2961202B0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:58:22,197:INFO:Checking exceptions
2025-09-23 15:58:22,200:INFO:Importing libraries
2025-09-23 15:58:22,200:INFO:Copying training dataset
2025-09-23 15:58:22,203:INFO:Defining folds
2025-09-23 15:58:22,203:INFO:Declaring metric variables
2025-09-23 15:58:22,203:INFO:Importing untrained model
2025-09-23 15:58:22,203:INFO:Declaring custom model
2025-09-23 15:58:22,205:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 15:58:22,205:INFO:Cross validation set to False
2025-09-23 15:58:22,205:INFO:Fitting Model
2025-09-23 15:58:24,061:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:58:24,061:INFO:create_model() successfully completed......................................
2025-09-23 15:58:24,259:INFO:_master_model_container: 19
2025-09-23 15:58:24,259:INFO:_display_container: 5
2025-09-23 15:58:24,288:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:58:24,288:INFO:finalize_model() successfully completed......................................
2025-09-23 15:58:24,530:INFO:Initializing save_model()
2025-09-23 15:58:24,530:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), model_name=c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_B_antileak, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_...
                                                                    'Motivo_viaje',
                                                                    'Temporada',
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-09-23 15:58:24,530:INFO:Adding model into prep_pipe
2025-09-23 15:58:24,532:WARNING:Only Model saved as it was a pipeline.
2025-09-23 15:58:24,567:INFO:c:\Users\FABIO\Downloads\IAhotelera\resultados_segmento\modelo_xgb_B_antileak.pkl saved in current working directory
2025-09-23 15:58:24,604:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-09-23 15:58:24,604:INFO:save_model() successfully completed......................................
2025-09-23 15:59:47,039:INFO:PyCaret ClassificationExperiment
2025-09-23 15:59:47,039:INFO:Logging name: clf-default-name
2025-09-23 15:59:47,039:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 15:59:47,039:INFO:version 3.3.2
2025-09-23 15:59:47,039:INFO:Initializing setup()
2025-09-23 15:59:47,039:INFO:self.USI: 790d
2025-09-23 15:59:47,039:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'X_train', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_id', 'fix_imbalance', 'pipeline', 'memory', 'X', 'USI', 'idx', 'logging_param', 'y', 'html_param', 'fold_shuffle_param', 'data', '_ml_usecase', 'seed', 'fold_generator', 'gpu_param', 'y_test', 'X_test', 'target_param', '_available_plots', 'is_multiclass'}
2025-09-23 15:59:47,039:INFO:Checking environment
2025-09-23 15:59:47,039:INFO:python_version: 3.10.18
2025-09-23 15:59:47,039:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 15:59:47,039:INFO:machine: AMD64
2025-09-23 15:59:47,039:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 15:59:47,039:INFO:Memory: svmem(total=16486035456, available=4992286720, percent=69.7, used=11493748736, free=4992286720)
2025-09-23 15:59:47,039:INFO:Physical Core: 8
2025-09-23 15:59:47,039:INFO:Logical Core: 16
2025-09-23 15:59:47,039:INFO:Checking libraries
2025-09-23 15:59:47,039:INFO:System:
2025-09-23 15:59:47,039:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 15:59:47,039:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 15:59:47,039:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 15:59:47,039:INFO:PyCaret required dependencies:
2025-09-23 15:59:47,039:INFO:                 pip: 25.2
2025-09-23 15:59:47,039:INFO:          setuptools: 78.1.1
2025-09-23 15:59:47,039:INFO:             pycaret: 3.3.2
2025-09-23 15:59:47,044:INFO:             IPython: 8.37.0
2025-09-23 15:59:47,044:INFO:          ipywidgets: 8.1.7
2025-09-23 15:59:47,044:INFO:                tqdm: 4.67.1
2025-09-23 15:59:47,044:INFO:               numpy: 1.26.4
2025-09-23 15:59:47,044:INFO:              pandas: 2.1.4
2025-09-23 15:59:47,044:INFO:              jinja2: 3.1.6
2025-09-23 15:59:47,044:INFO:               scipy: 1.11.4
2025-09-23 15:59:47,044:INFO:              joblib: 1.3.2
2025-09-23 15:59:47,044:INFO:             sklearn: 1.4.2
2025-09-23 15:59:47,044:INFO:                pyod: 2.0.5
2025-09-23 15:59:47,044:INFO:            imblearn: 0.14.0
2025-09-23 15:59:47,044:INFO:   category_encoders: 2.7.0
2025-09-23 15:59:47,044:INFO:            lightgbm: 4.6.0
2025-09-23 15:59:47,044:INFO:               numba: 0.61.0
2025-09-23 15:59:47,044:INFO:            requests: 2.32.5
2025-09-23 15:59:47,044:INFO:          matplotlib: 3.7.5
2025-09-23 15:59:47,044:INFO:          scikitplot: 0.3.7
2025-09-23 15:59:47,044:INFO:         yellowbrick: 1.5
2025-09-23 15:59:47,044:INFO:              plotly: 5.24.1
2025-09-23 15:59:47,044:INFO:    plotly-resampler: Not installed
2025-09-23 15:59:47,044:INFO:             kaleido: 1.1.0
2025-09-23 15:59:47,044:INFO:           schemdraw: 0.15
2025-09-23 15:59:47,044:INFO:         statsmodels: 0.14.5
2025-09-23 15:59:47,044:INFO:              sktime: 0.26.0
2025-09-23 15:59:47,044:INFO:               tbats: 1.1.3
2025-09-23 15:59:47,044:INFO:            pmdarima: 2.0.4
2025-09-23 15:59:47,046:INFO:              psutil: 7.1.0
2025-09-23 15:59:47,046:INFO:          markupsafe: 3.0.2
2025-09-23 15:59:47,046:INFO:             pickle5: Not installed
2025-09-23 15:59:47,046:INFO:         cloudpickle: 3.1.1
2025-09-23 15:59:47,046:INFO:         deprecation: 2.1.0
2025-09-23 15:59:47,046:INFO:              xxhash: 3.5.0
2025-09-23 15:59:47,046:INFO:           wurlitzer: Not installed
2025-09-23 15:59:47,046:INFO:PyCaret optional dependencies:
2025-09-23 15:59:47,046:INFO:                shap: 0.44.1
2025-09-23 15:59:47,046:INFO:           interpret: 0.7.2
2025-09-23 15:59:47,046:INFO:                umap: 0.5.7
2025-09-23 15:59:47,046:INFO:     ydata_profiling: 4.16.1
2025-09-23 15:59:47,046:INFO:  explainerdashboard: 0.5.1
2025-09-23 15:59:47,046:INFO:             autoviz: Not installed
2025-09-23 15:59:47,046:INFO:           fairlearn: 0.7.0
2025-09-23 15:59:47,046:INFO:          deepchecks: Not installed
2025-09-23 15:59:47,046:INFO:             xgboost: 3.0.5
2025-09-23 15:59:47,046:INFO:            catboost: 1.2.8
2025-09-23 15:59:47,046:INFO:              kmodes: 0.12.2
2025-09-23 15:59:47,046:INFO:             mlxtend: 0.23.4
2025-09-23 15:59:47,046:INFO:       statsforecast: 1.5.0
2025-09-23 15:59:47,046:INFO:        tune_sklearn: Not installed
2025-09-23 15:59:47,046:INFO:                 ray: Not installed
2025-09-23 15:59:47,046:INFO:            hyperopt: 0.2.7
2025-09-23 15:59:47,046:INFO:              optuna: 4.5.0
2025-09-23 15:59:47,046:INFO:               skopt: 0.10.2
2025-09-23 15:59:47,046:INFO:              mlflow: 3.4.0
2025-09-23 15:59:47,046:INFO:              gradio: 5.46.1
2025-09-23 15:59:47,046:INFO:             fastapi: 0.117.1
2025-09-23 15:59:47,046:INFO:             uvicorn: 0.36.0
2025-09-23 15:59:47,046:INFO:              m2cgen: 0.10.0
2025-09-23 15:59:47,046:INFO:           evidently: 0.4.40
2025-09-23 15:59:47,046:INFO:               fugue: 0.8.7
2025-09-23 15:59:47,046:INFO:           streamlit: Not installed
2025-09-23 15:59:47,049:INFO:             prophet: Not installed
2025-09-23 15:59:47,049:INFO:None
2025-09-23 15:59:47,049:INFO:Set up data.
2025-09-23 15:59:47,072:INFO:Set up folding strategy.
2025-09-23 15:59:47,072:INFO:Set up train/test split.
2025-09-23 15:59:47,088:INFO:Set up index.
2025-09-23 15:59:47,088:INFO:Assigning column types.
2025-09-23 15:59:47,088:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 15:59:47,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:59:47,149:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:59:47,195:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:47,199:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:47,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 15:59:47,250:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:59:47,295:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:47,299:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:47,299:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 15:59:47,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:59:47,399:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:47,401:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:47,451:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 15:59:47,498:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:47,504:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:47,504:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 15:59:47,602:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:47,606:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:47,699:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:47,713:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:47,715:INFO:Preparing preprocessing pipeline...
2025-09-23 15:59:47,715:INFO:Set up label encoding.
2025-09-23 15:59:47,715:INFO:Set up simple imputation.
2025-09-23 15:59:47,715:INFO:Set up encoding of ordinal features.
2025-09-23 15:59:47,715:INFO:Set up encoding of categorical features.
2025-09-23 15:59:47,715:INFO:Set up column name cleaning.
2025-09-23 15:59:47,955:INFO:Finished creating preprocessing pipeline.
2025-09-23 15:59:47,982:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 15:59:47,982:INFO:Creating final display dataframe.
2025-09-23 15:59:48,222:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                   (1000, 35)
5        Transformed data shape                                   (1000, 62)
6   Transformed train set shape                                    (700, 62)
7    Transformed test set shape                                    (300, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         790d
2025-09-23 15:59:48,315:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:48,327:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:48,433:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 15:59:48,433:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 15:59:48,433:INFO:setup() successfully completed in 1.41s...............
2025-09-23 15:59:48,455:INFO:Initializing compare_models()
2025-09-23 15:59:48,455:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 15:59:48,455:INFO:Checking exceptions
2025-09-23 15:59:48,461:INFO:Preparing display monitor
2025-09-23 15:59:48,503:INFO:Initializing Logistic Regression
2025-09-23 15:59:48,506:INFO:Total runtime is 3.741184870402018e-05 minutes
2025-09-23 15:59:48,512:INFO:SubProcess create_model() called ==================================
2025-09-23 15:59:48,517:INFO:Initializing create_model()
2025-09-23 15:59:48,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:59:48,518:INFO:Checking exceptions
2025-09-23 15:59:48,518:INFO:Importing libraries
2025-09-23 15:59:48,518:INFO:Copying training dataset
2025-09-23 15:59:48,536:INFO:Defining folds
2025-09-23 15:59:48,536:INFO:Declaring metric variables
2025-09-23 15:59:48,543:INFO:Importing untrained model
2025-09-23 15:59:48,552:INFO:Logistic Regression Imported successfully
2025-09-23 15:59:48,566:INFO:Starting cross validation
2025-09-23 15:59:48,575:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 15:59:57,572:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:59:57,616:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:59:57,636:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:59:57,643:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:59:57,655:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 15:59:57,704:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:59:57,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,723:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,741:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:59:57,747:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,752:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,757:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:59:57,757:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,763:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,770:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:59:57,772:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 15:59:57,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,796:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,804:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 15:59:57,830:INFO:Calculating mean and std
2025-09-23 15:59:57,832:INFO:Creating metrics dataframe
2025-09-23 15:59:57,837:INFO:Uploading results into container
2025-09-23 15:59:57,839:INFO:Uploading model into container now
2025-09-23 15:59:57,839:INFO:_master_model_container: 1
2025-09-23 15:59:57,839:INFO:_display_container: 2
2025-09-23 15:59:57,844:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 15:59:57,844:INFO:create_model() successfully completed......................................
2025-09-23 15:59:58,066:INFO:SubProcess create_model() end ==================================
2025-09-23 15:59:58,066:INFO:Creating metrics dataframe
2025-09-23 15:59:58,076:INFO:Initializing K Neighbors Classifier
2025-09-23 15:59:58,076:INFO:Total runtime is 0.15954033533732095 minutes
2025-09-23 15:59:58,083:INFO:SubProcess create_model() called ==================================
2025-09-23 15:59:58,083:INFO:Initializing create_model()
2025-09-23 15:59:58,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 15:59:58,084:INFO:Checking exceptions
2025-09-23 15:59:58,084:INFO:Importing libraries
2025-09-23 15:59:58,084:INFO:Copying training dataset
2025-09-23 15:59:58,087:INFO:Defining folds
2025-09-23 15:59:58,087:INFO:Declaring metric variables
2025-09-23 15:59:58,102:INFO:Importing untrained model
2025-09-23 15:59:58,107:INFO:K Neighbors Classifier Imported successfully
2025-09-23 15:59:58,119:INFO:Starting cross validation
2025-09-23 15:59:58,123:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:05,925:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,925:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,929:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,929:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,949:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,949:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,955:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,955:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,955:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,965:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,965:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,965:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:05,994:INFO:Calculating mean and std
2025-09-23 16:00:05,994:INFO:Creating metrics dataframe
2025-09-23 16:00:06,003:INFO:Uploading results into container
2025-09-23 16:00:06,004:INFO:Uploading model into container now
2025-09-23 16:00:06,006:INFO:_master_model_container: 2
2025-09-23 16:00:06,006:INFO:_display_container: 2
2025-09-23 16:00:06,006:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 16:00:06,007:INFO:create_model() successfully completed......................................
2025-09-23 16:00:06,211:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:06,211:INFO:Creating metrics dataframe
2025-09-23 16:00:06,223:INFO:Initializing Naive Bayes
2025-09-23 16:00:06,226:INFO:Total runtime is 0.29537999629974365 minutes
2025-09-23 16:00:06,231:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:06,231:INFO:Initializing create_model()
2025-09-23 16:00:06,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:06,231:INFO:Checking exceptions
2025-09-23 16:00:06,231:INFO:Importing libraries
2025-09-23 16:00:06,233:INFO:Copying training dataset
2025-09-23 16:00:06,243:INFO:Defining folds
2025-09-23 16:00:06,244:INFO:Declaring metric variables
2025-09-23 16:00:06,249:INFO:Importing untrained model
2025-09-23 16:00:06,255:INFO:Naive Bayes Imported successfully
2025-09-23 16:00:06,265:INFO:Starting cross validation
2025-09-23 16:00:06,267:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:13,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,749:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,767:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,772:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,783:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,869:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,873:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,879:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,879:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,885:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,885:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,916:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,919:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,925:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:13,937:INFO:Calculating mean and std
2025-09-23 16:00:13,939:INFO:Creating metrics dataframe
2025-09-23 16:00:13,943:INFO:Uploading results into container
2025-09-23 16:00:13,944:INFO:Uploading model into container now
2025-09-23 16:00:13,946:INFO:_master_model_container: 3
2025-09-23 16:00:13,946:INFO:_display_container: 2
2025-09-23 16:00:13,946:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 16:00:13,948:INFO:create_model() successfully completed......................................
2025-09-23 16:00:14,140:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:14,140:INFO:Creating metrics dataframe
2025-09-23 16:00:14,151:INFO:Initializing Decision Tree Classifier
2025-09-23 16:00:14,151:INFO:Total runtime is 0.42745826244354246 minutes
2025-09-23 16:00:14,157:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:14,157:INFO:Initializing create_model()
2025-09-23 16:00:14,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:14,158:INFO:Checking exceptions
2025-09-23 16:00:14,158:INFO:Importing libraries
2025-09-23 16:00:14,158:INFO:Copying training dataset
2025-09-23 16:00:14,168:INFO:Defining folds
2025-09-23 16:00:14,168:INFO:Declaring metric variables
2025-09-23 16:00:14,174:INFO:Importing untrained model
2025-09-23 16:00:14,182:INFO:Decision Tree Classifier Imported successfully
2025-09-23 16:00:14,193:INFO:Starting cross validation
2025-09-23 16:00:14,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:14,671:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,673:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,675:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,676:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,679:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,682:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,682:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,683:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,687:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,695:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:14,704:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:20,632:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:20,637:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:20,641:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:20,649:INFO:Calculating mean and std
2025-09-23 16:00:20,652:INFO:Creating metrics dataframe
2025-09-23 16:00:20,658:INFO:Uploading results into container
2025-09-23 16:00:20,659:INFO:Uploading model into container now
2025-09-23 16:00:20,660:INFO:_master_model_container: 4
2025-09-23 16:00:20,660:INFO:_display_container: 2
2025-09-23 16:00:20,660:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 16:00:20,661:INFO:create_model() successfully completed......................................
2025-09-23 16:00:20,849:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:20,850:INFO:Creating metrics dataframe
2025-09-23 16:00:20,861:INFO:Initializing SVM - Linear Kernel
2025-09-23 16:00:20,862:INFO:Total runtime is 0.5393103957176208 minutes
2025-09-23 16:00:20,869:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:20,869:INFO:Initializing create_model()
2025-09-23 16:00:20,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:20,871:INFO:Checking exceptions
2025-09-23 16:00:20,871:INFO:Importing libraries
2025-09-23 16:00:20,871:INFO:Copying training dataset
2025-09-23 16:00:20,881:INFO:Defining folds
2025-09-23 16:00:20,882:INFO:Declaring metric variables
2025-09-23 16:00:20,890:INFO:Importing untrained model
2025-09-23 16:00:20,896:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 16:00:20,907:INFO:Starting cross validation
2025-09-23 16:00:20,912:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:21,365:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:21,368:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,372:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:21,373:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,375:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,377:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,381:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,387:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,396:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:21,399:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,403:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:21,403:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:21,405:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,406:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,406:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,408:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,410:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,412:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,413:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:21,423:INFO:Calculating mean and std
2025-09-23 16:00:21,424:INFO:Creating metrics dataframe
2025-09-23 16:00:21,427:INFO:Uploading results into container
2025-09-23 16:00:21,427:INFO:Uploading model into container now
2025-09-23 16:00:21,428:INFO:_master_model_container: 5
2025-09-23 16:00:21,428:INFO:_display_container: 2
2025-09-23 16:00:21,429:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 16:00:21,430:INFO:create_model() successfully completed......................................
2025-09-23 16:00:21,598:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:21,598:INFO:Creating metrics dataframe
2025-09-23 16:00:21,608:INFO:Initializing Ridge Classifier
2025-09-23 16:00:21,608:INFO:Total runtime is 0.5517470121383667 minutes
2025-09-23 16:00:21,614:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:21,615:INFO:Initializing create_model()
2025-09-23 16:00:21,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:21,615:INFO:Checking exceptions
2025-09-23 16:00:21,616:INFO:Importing libraries
2025-09-23 16:00:21,616:INFO:Copying training dataset
2025-09-23 16:00:21,626:INFO:Defining folds
2025-09-23 16:00:21,627:INFO:Declaring metric variables
2025-09-23 16:00:21,634:INFO:Importing untrained model
2025-09-23 16:00:21,641:INFO:Ridge Classifier Imported successfully
2025-09-23 16:00:21,654:INFO:Starting cross validation
2025-09-23 16:00:21,660:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:22,075:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:22,078:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,082:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,087:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,103:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:22,105:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,110:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,110:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:22,112:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,116:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,121:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,127:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:22,130:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,134:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,138:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:22,146:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,150:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,153:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:22,172:INFO:Calculating mean and std
2025-09-23 16:00:22,174:INFO:Creating metrics dataframe
2025-09-23 16:00:22,177:INFO:Uploading results into container
2025-09-23 16:00:22,178:INFO:Uploading model into container now
2025-09-23 16:00:22,178:INFO:_master_model_container: 6
2025-09-23 16:00:22,178:INFO:_display_container: 2
2025-09-23 16:00:22,178:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 16:00:22,179:INFO:create_model() successfully completed......................................
2025-09-23 16:00:22,348:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:22,348:INFO:Creating metrics dataframe
2025-09-23 16:00:22,362:INFO:Initializing Random Forest Classifier
2025-09-23 16:00:22,363:INFO:Total runtime is 0.5643071055412293 minutes
2025-09-23 16:00:22,368:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:22,369:INFO:Initializing create_model()
2025-09-23 16:00:22,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:22,369:INFO:Checking exceptions
2025-09-23 16:00:22,369:INFO:Importing libraries
2025-09-23 16:00:22,369:INFO:Copying training dataset
2025-09-23 16:00:22,382:INFO:Defining folds
2025-09-23 16:00:22,383:INFO:Declaring metric variables
2025-09-23 16:00:22,389:INFO:Importing untrained model
2025-09-23 16:00:22,396:INFO:Random Forest Classifier Imported successfully
2025-09-23 16:00:22,408:INFO:Starting cross validation
2025-09-23 16:00:22,413:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:23,230:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,235:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,243:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,249:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,256:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,264:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,290:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,293:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,297:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,308:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,308:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,312:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,313:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,316:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,317:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:23,325:INFO:Calculating mean and std
2025-09-23 16:00:23,328:INFO:Creating metrics dataframe
2025-09-23 16:00:23,333:INFO:Uploading results into container
2025-09-23 16:00:23,334:INFO:Uploading model into container now
2025-09-23 16:00:23,335:INFO:_master_model_container: 7
2025-09-23 16:00:23,335:INFO:_display_container: 2
2025-09-23 16:00:23,336:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 16:00:23,336:INFO:create_model() successfully completed......................................
2025-09-23 16:00:23,506:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:23,507:INFO:Creating metrics dataframe
2025-09-23 16:00:23,518:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 16:00:23,518:INFO:Total runtime is 0.5835783600807191 minutes
2025-09-23 16:00:23,523:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:23,525:INFO:Initializing create_model()
2025-09-23 16:00:23,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:23,526:INFO:Checking exceptions
2025-09-23 16:00:23,526:INFO:Importing libraries
2025-09-23 16:00:23,526:INFO:Copying training dataset
2025-09-23 16:00:23,543:INFO:Defining folds
2025-09-23 16:00:23,543:INFO:Declaring metric variables
2025-09-23 16:00:23,550:INFO:Importing untrained model
2025-09-23 16:00:23,557:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 16:00:23,569:INFO:Starting cross validation
2025-09-23 16:00:23,574:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:23,892:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:00:23,895:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:00:23,898:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:00:23,899:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:00:23,924:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:00:24,002:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,008:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,013:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,016:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,019:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,021:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,023:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,024:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,027:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,028:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,029:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,031:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,033:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,038:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,052:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,054:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,058:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,061:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,083:INFO:Calculating mean and std
2025-09-23 16:00:24,084:INFO:Creating metrics dataframe
2025-09-23 16:00:24,087:INFO:Uploading results into container
2025-09-23 16:00:24,089:INFO:Uploading model into container now
2025-09-23 16:00:24,089:INFO:_master_model_container: 8
2025-09-23 16:00:24,090:INFO:_display_container: 2
2025-09-23 16:00:24,090:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 16:00:24,090:INFO:create_model() successfully completed......................................
2025-09-23 16:00:24,259:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:24,260:INFO:Creating metrics dataframe
2025-09-23 16:00:24,271:INFO:Initializing Ada Boost Classifier
2025-09-23 16:00:24,272:INFO:Total runtime is 0.5961362361907959 minutes
2025-09-23 16:00:24,276:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:24,277:INFO:Initializing create_model()
2025-09-23 16:00:24,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:24,278:INFO:Checking exceptions
2025-09-23 16:00:24,278:INFO:Importing libraries
2025-09-23 16:00:24,278:INFO:Copying training dataset
2025-09-23 16:00:24,289:INFO:Defining folds
2025-09-23 16:00:24,289:INFO:Declaring metric variables
2025-09-23 16:00:24,300:INFO:Importing untrained model
2025-09-23 16:00:24,308:INFO:Ada Boost Classifier Imported successfully
2025-09-23 16:00:24,321:INFO:Starting cross validation
2025-09-23 16:00:24,327:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:24,643:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:00:24,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:00:24,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:00:24,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:00:24,705:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:00:24,953:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,956:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,960:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,965:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,978:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,983:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,989:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,993:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:24,995:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:24,999:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:25,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:25,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,016:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,020:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:25,032:INFO:Calculating mean and std
2025-09-23 16:00:25,033:INFO:Creating metrics dataframe
2025-09-23 16:00:25,038:INFO:Uploading results into container
2025-09-23 16:00:25,038:INFO:Uploading model into container now
2025-09-23 16:00:25,038:INFO:_master_model_container: 9
2025-09-23 16:00:25,038:INFO:_display_container: 2
2025-09-23 16:00:25,038:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 16:00:25,038:INFO:create_model() successfully completed......................................
2025-09-23 16:00:25,209:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:25,209:INFO:Creating metrics dataframe
2025-09-23 16:00:25,220:INFO:Initializing Gradient Boosting Classifier
2025-09-23 16:00:25,220:INFO:Total runtime is 0.611935571829478 minutes
2025-09-23 16:00:25,220:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:25,220:INFO:Initializing create_model()
2025-09-23 16:00:25,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:25,220:INFO:Checking exceptions
2025-09-23 16:00:25,220:INFO:Importing libraries
2025-09-23 16:00:25,220:INFO:Copying training dataset
2025-09-23 16:00:25,241:INFO:Defining folds
2025-09-23 16:00:25,241:INFO:Declaring metric variables
2025-09-23 16:00:25,250:INFO:Importing untrained model
2025-09-23 16:00:25,268:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 16:00:25,286:INFO:Starting cross validation
2025-09-23 16:00:25,286:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:26,582:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:26,589:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,590:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,597:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,600:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:26,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,611:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,611:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:26,616:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,616:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,618:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,618:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:26,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,643:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,649:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:26,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,667:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,669:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:26,699:INFO:Calculating mean and std
2025-09-23 16:00:26,699:INFO:Creating metrics dataframe
2025-09-23 16:00:26,708:INFO:Uploading results into container
2025-09-23 16:00:26,708:INFO:Uploading model into container now
2025-09-23 16:00:26,708:INFO:_master_model_container: 10
2025-09-23 16:00:26,708:INFO:_display_container: 2
2025-09-23 16:00:26,708:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 16:00:26,708:INFO:create_model() successfully completed......................................
2025-09-23 16:00:26,882:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:26,882:INFO:Creating metrics dataframe
2025-09-23 16:00:26,891:INFO:Initializing Linear Discriminant Analysis
2025-09-23 16:00:26,891:INFO:Total runtime is 0.6397990266482035 minutes
2025-09-23 16:00:26,939:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:26,939:INFO:Initializing create_model()
2025-09-23 16:00:26,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:26,941:INFO:Checking exceptions
2025-09-23 16:00:26,941:INFO:Importing libraries
2025-09-23 16:00:26,941:INFO:Copying training dataset
2025-09-23 16:00:26,956:INFO:Defining folds
2025-09-23 16:00:26,956:INFO:Declaring metric variables
2025-09-23 16:00:26,960:INFO:Importing untrained model
2025-09-23 16:00:26,972:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 16:00:26,985:INFO:Starting cross validation
2025-09-23 16:00:26,988:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:27,391:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:27,393:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,394:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:27,397:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,398:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,403:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,403:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,410:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,422:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:27,425:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,432:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,448:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:27,450:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,454:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,456:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:00:27,458:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,461:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,466:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:27,480:INFO:Calculating mean and std
2025-09-23 16:00:27,482:INFO:Creating metrics dataframe
2025-09-23 16:00:27,485:INFO:Uploading results into container
2025-09-23 16:00:27,486:INFO:Uploading model into container now
2025-09-23 16:00:27,488:INFO:_master_model_container: 11
2025-09-23 16:00:27,488:INFO:_display_container: 2
2025-09-23 16:00:27,489:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 16:00:27,489:INFO:create_model() successfully completed......................................
2025-09-23 16:00:27,661:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:27,661:INFO:Creating metrics dataframe
2025-09-23 16:00:27,673:INFO:Initializing Extra Trees Classifier
2025-09-23 16:00:27,675:INFO:Total runtime is 0.6528553366661072 minutes
2025-09-23 16:00:27,680:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:27,681:INFO:Initializing create_model()
2025-09-23 16:00:27,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:27,681:INFO:Checking exceptions
2025-09-23 16:00:27,681:INFO:Importing libraries
2025-09-23 16:00:27,681:INFO:Copying training dataset
2025-09-23 16:00:27,693:INFO:Defining folds
2025-09-23 16:00:27,693:INFO:Declaring metric variables
2025-09-23 16:00:27,704:INFO:Importing untrained model
2025-09-23 16:00:27,709:INFO:Extra Trees Classifier Imported successfully
2025-09-23 16:00:27,724:INFO:Starting cross validation
2025-09-23 16:00:27,730:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:28,459:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,463:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,468:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,488:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,492:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,498:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,504:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,508:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,508:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,511:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,512:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,518:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,521:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,525:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:28,539:INFO:Calculating mean and std
2025-09-23 16:00:28,542:INFO:Creating metrics dataframe
2025-09-23 16:00:28,545:INFO:Uploading results into container
2025-09-23 16:00:28,546:INFO:Uploading model into container now
2025-09-23 16:00:28,550:INFO:_master_model_container: 12
2025-09-23 16:00:28,550:INFO:_display_container: 2
2025-09-23 16:00:28,552:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 16:00:28,553:INFO:create_model() successfully completed......................................
2025-09-23 16:00:28,728:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:28,728:INFO:Creating metrics dataframe
2025-09-23 16:00:28,741:INFO:Initializing Extreme Gradient Boosting
2025-09-23 16:00:28,741:INFO:Total runtime is 0.6706331968307495 minutes
2025-09-23 16:00:28,747:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:28,747:INFO:Initializing create_model()
2025-09-23 16:00:28,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:28,748:INFO:Checking exceptions
2025-09-23 16:00:28,748:INFO:Importing libraries
2025-09-23 16:00:28,748:INFO:Copying training dataset
2025-09-23 16:00:28,770:INFO:Defining folds
2025-09-23 16:00:28,770:INFO:Declaring metric variables
2025-09-23 16:00:28,778:INFO:Importing untrained model
2025-09-23 16:00:28,786:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 16:00:28,796:INFO:Starting cross validation
2025-09-23 16:00:28,804:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:29,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,411:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,415:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,416:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,419:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,419:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,437:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,444:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,444:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,459:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,466:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,470:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:29,492:INFO:Calculating mean and std
2025-09-23 16:00:29,492:INFO:Creating metrics dataframe
2025-09-23 16:00:29,497:INFO:Uploading results into container
2025-09-23 16:00:29,498:INFO:Uploading model into container now
2025-09-23 16:00:29,499:INFO:_master_model_container: 13
2025-09-23 16:00:29,499:INFO:_display_container: 2
2025-09-23 16:00:29,501:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 16:00:29,501:INFO:create_model() successfully completed......................................
2025-09-23 16:00:29,675:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:29,675:INFO:Creating metrics dataframe
2025-09-23 16:00:29,692:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 16:00:29,692:INFO:Total runtime is 0.6864707350730896 minutes
2025-09-23 16:00:29,699:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:29,699:INFO:Initializing create_model()
2025-09-23 16:00:29,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:29,699:INFO:Checking exceptions
2025-09-23 16:00:29,699:INFO:Importing libraries
2025-09-23 16:00:29,699:INFO:Copying training dataset
2025-09-23 16:00:29,701:INFO:Defining folds
2025-09-23 16:00:29,701:INFO:Declaring metric variables
2025-09-23 16:00:29,717:INFO:Importing untrained model
2025-09-23 16:00:29,717:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 16:00:29,736:INFO:Starting cross validation
2025-09-23 16:00:29,746:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:30,931:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:30,936:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:30,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,015:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,016:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,021:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,022:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,027:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,027:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,044:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,049:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,054:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,094:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,099:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:31,122:INFO:Calculating mean and std
2025-09-23 16:00:31,124:INFO:Creating metrics dataframe
2025-09-23 16:00:31,128:INFO:Uploading results into container
2025-09-23 16:00:31,129:INFO:Uploading model into container now
2025-09-23 16:00:31,130:INFO:_master_model_container: 14
2025-09-23 16:00:31,130:INFO:_display_container: 2
2025-09-23 16:00:31,131:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 16:00:31,131:INFO:create_model() successfully completed......................................
2025-09-23 16:00:31,308:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:31,308:INFO:Creating metrics dataframe
2025-09-23 16:00:31,326:INFO:Initializing CatBoost Classifier
2025-09-23 16:00:31,327:INFO:Total runtime is 0.7137279868125916 minutes
2025-09-23 16:00:31,333:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:31,333:INFO:Initializing create_model()
2025-09-23 16:00:31,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:31,334:INFO:Checking exceptions
2025-09-23 16:00:31,334:INFO:Importing libraries
2025-09-23 16:00:31,334:INFO:Copying training dataset
2025-09-23 16:00:31,346:INFO:Defining folds
2025-09-23 16:00:31,346:INFO:Declaring metric variables
2025-09-23 16:00:31,358:INFO:Importing untrained model
2025-09-23 16:00:31,362:INFO:CatBoost Classifier Imported successfully
2025-09-23 16:00:31,375:INFO:Starting cross validation
2025-09-23 16:00:31,382:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:42,177:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,181:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,185:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,185:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,189:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,203:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,208:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,212:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,217:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,221:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,225:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,250:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,254:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,257:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,266:INFO:Calculating mean and std
2025-09-23 16:00:42,268:INFO:Creating metrics dataframe
2025-09-23 16:00:42,271:INFO:Uploading results into container
2025-09-23 16:00:42,271:INFO:Uploading model into container now
2025-09-23 16:00:42,272:INFO:_master_model_container: 15
2025-09-23 16:00:42,272:INFO:_display_container: 2
2025-09-23 16:00:42,273:INFO:<catboost.core.CatBoostClassifier object at 0x0000025683144490>
2025-09-23 16:00:42,273:INFO:create_model() successfully completed......................................
2025-09-23 16:00:42,459:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:42,459:INFO:Creating metrics dataframe
2025-09-23 16:00:42,475:INFO:Initializing Dummy Classifier
2025-09-23 16:00:42,475:INFO:Total runtime is 0.8995286941528321 minutes
2025-09-23 16:00:42,480:INFO:SubProcess create_model() called ==================================
2025-09-23 16:00:42,480:INFO:Initializing create_model()
2025-09-23 16:00:42,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000256817F7640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:42,480:INFO:Checking exceptions
2025-09-23 16:00:42,480:INFO:Importing libraries
2025-09-23 16:00:42,480:INFO:Copying training dataset
2025-09-23 16:00:42,492:INFO:Defining folds
2025-09-23 16:00:42,492:INFO:Declaring metric variables
2025-09-23 16:00:42,498:INFO:Importing untrained model
2025-09-23 16:00:42,505:INFO:Dummy Classifier Imported successfully
2025-09-23 16:00:42,517:INFO:Starting cross validation
2025-09-23 16:00:42,523:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:00:42,817:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,821:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,823:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:00:42,826:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,844:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,847:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,849:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:00:42,851:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,855:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,860:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:00:42,863:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,864:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,868:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,870:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:00:42,872:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,873:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,876:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,878:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:00:42,880:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:00:42,889:INFO:Calculating mean and std
2025-09-23 16:00:42,890:INFO:Creating metrics dataframe
2025-09-23 16:00:42,892:INFO:Uploading results into container
2025-09-23 16:00:42,894:INFO:Uploading model into container now
2025-09-23 16:00:42,895:INFO:_master_model_container: 16
2025-09-23 16:00:42,896:INFO:_display_container: 2
2025-09-23 16:00:42,896:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 16:00:42,897:INFO:create_model() successfully completed......................................
2025-09-23 16:00:43,068:INFO:SubProcess create_model() end ==================================
2025-09-23 16:00:43,068:INFO:Creating metrics dataframe
2025-09-23 16:00:43,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-23 16:00:43,100:INFO:Initializing create_model()
2025-09-23 16:00:43,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:00:43,100:INFO:Checking exceptions
2025-09-23 16:00:43,105:INFO:Importing libraries
2025-09-23 16:00:43,106:INFO:Copying training dataset
2025-09-23 16:00:43,116:INFO:Defining folds
2025-09-23 16:00:43,121:INFO:Declaring metric variables
2025-09-23 16:00:43,121:INFO:Importing untrained model
2025-09-23 16:00:43,121:INFO:Declaring custom model
2025-09-23 16:00:43,128:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 16:00:43,132:INFO:Cross validation set to False
2025-09-23 16:00:43,132:INFO:Fitting Model
2025-09-23 16:00:43,455:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 16:00:43,455:INFO:create_model() successfully completed......................................
2025-09-23 16:00:43,686:INFO:_master_model_container: 16
2025-09-23 16:00:43,688:INFO:_display_container: 2
2025-09-23 16:00:43,688:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 16:00:43,688:INFO:compare_models() successfully completed......................................
2025-09-23 16:00:43,691:INFO:Initializing plot_model()
2025-09-23 16:00:43,691:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, system=True)
2025-09-23 16:00:43,691:INFO:Checking exceptions
2025-09-23 16:00:43,704:INFO:Preloading libraries
2025-09-23 16:00:43,720:INFO:Copying training dataset
2025-09-23 16:00:43,720:INFO:Plot type: confusion_matrix
2025-09-23 16:00:43,949:INFO:Fitting Model
2025-09-23 16:00:43,950:INFO:Scoring test/hold-out set
2025-09-23 16:00:44,118:INFO:Visual Rendered Successfully
2025-09-23 16:00:44,301:INFO:plot_model() successfully completed......................................
2025-09-23 16:00:44,301:INFO:Initializing plot_model()
2025-09-23 16:00:44,301:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, system=True)
2025-09-23 16:00:44,301:INFO:Checking exceptions
2025-09-23 16:00:44,309:INFO:Preloading libraries
2025-09-23 16:00:44,327:INFO:Copying training dataset
2025-09-23 16:00:44,327:INFO:Plot type: feature
2025-09-23 16:00:44,327:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 16:00:44,600:INFO:Visual Rendered Successfully
2025-09-23 16:00:44,766:INFO:plot_model() successfully completed......................................
2025-09-23 16:00:44,766:INFO:Initializing predict_model()
2025-09-23 16:00:44,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025683148CD0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025680360790>)
2025-09-23 16:00:44,766:INFO:Checking exceptions
2025-09-23 16:00:44,766:INFO:Preloading libraries
2025-09-23 16:00:44,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 16:00:44,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 16:00:44,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 16:46:52,378:INFO:PyCaret ClassificationExperiment
2025-09-23 16:46:52,379:INFO:Logging name: clf-default-name
2025-09-23 16:46:52,379:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-23 16:46:52,379:INFO:version 3.3.2
2025-09-23 16:46:52,379:INFO:Initializing setup()
2025-09-23 16:46:52,380:INFO:self.USI: 9e49
2025-09-23 16:46:52,380:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'X_train', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_id', 'fix_imbalance', 'pipeline', 'memory', 'X', 'USI', 'idx', 'logging_param', 'y', 'html_param', 'fold_shuffle_param', 'data', '_ml_usecase', 'seed', 'fold_generator', 'gpu_param', 'y_test', 'X_test', 'target_param', '_available_plots', 'is_multiclass'}
2025-09-23 16:46:52,380:INFO:Checking environment
2025-09-23 16:46:52,380:INFO:python_version: 3.10.18
2025-09-23 16:46:52,380:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-23 16:46:52,381:INFO:machine: AMD64
2025-09-23 16:46:52,381:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-23 16:46:52,381:INFO:Memory: svmem(total=16486035456, available=8059342848, percent=51.1, used=8426692608, free=8059342848)
2025-09-23 16:46:52,382:INFO:Physical Core: 8
2025-09-23 16:46:52,382:INFO:Logical Core: 16
2025-09-23 16:46:52,383:INFO:Checking libraries
2025-09-23 16:46:52,383:INFO:System:
2025-09-23 16:46:52,383:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-23 16:46:52,383:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-23 16:46:52,383:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-23 16:46:52,384:INFO:PyCaret required dependencies:
2025-09-23 16:46:52,384:INFO:                 pip: 25.2
2025-09-23 16:46:52,384:INFO:          setuptools: 78.1.1
2025-09-23 16:46:52,384:INFO:             pycaret: 3.3.2
2025-09-23 16:46:52,386:INFO:             IPython: 8.37.0
2025-09-23 16:46:52,386:INFO:          ipywidgets: 8.1.7
2025-09-23 16:46:52,386:INFO:                tqdm: 4.67.1
2025-09-23 16:46:52,386:INFO:               numpy: 1.26.4
2025-09-23 16:46:52,386:INFO:              pandas: 2.1.4
2025-09-23 16:46:52,386:INFO:              jinja2: 3.1.6
2025-09-23 16:46:52,386:INFO:               scipy: 1.11.4
2025-09-23 16:46:52,386:INFO:              joblib: 1.3.2
2025-09-23 16:46:52,387:INFO:             sklearn: 1.4.2
2025-09-23 16:46:52,387:INFO:                pyod: 2.0.5
2025-09-23 16:46:52,387:INFO:            imblearn: 0.14.0
2025-09-23 16:46:52,387:INFO:   category_encoders: 2.7.0
2025-09-23 16:46:52,387:INFO:            lightgbm: 4.6.0
2025-09-23 16:46:52,387:INFO:               numba: 0.61.0
2025-09-23 16:46:52,387:INFO:            requests: 2.32.5
2025-09-23 16:46:52,387:INFO:          matplotlib: 3.7.5
2025-09-23 16:46:52,388:INFO:          scikitplot: 0.3.7
2025-09-23 16:46:52,388:INFO:         yellowbrick: 1.5
2025-09-23 16:46:52,388:INFO:              plotly: 5.24.1
2025-09-23 16:46:52,388:INFO:    plotly-resampler: Not installed
2025-09-23 16:46:52,388:INFO:             kaleido: 1.1.0
2025-09-23 16:46:52,388:INFO:           schemdraw: 0.15
2025-09-23 16:46:52,388:INFO:         statsmodels: 0.14.5
2025-09-23 16:46:52,388:INFO:              sktime: 0.26.0
2025-09-23 16:46:52,389:INFO:               tbats: 1.1.3
2025-09-23 16:46:52,389:INFO:            pmdarima: 2.0.4
2025-09-23 16:46:52,389:INFO:              psutil: 7.1.0
2025-09-23 16:46:52,389:INFO:          markupsafe: 3.0.2
2025-09-23 16:46:52,389:INFO:             pickle5: Not installed
2025-09-23 16:46:52,389:INFO:         cloudpickle: 3.1.1
2025-09-23 16:46:52,389:INFO:         deprecation: 2.1.0
2025-09-23 16:46:52,390:INFO:              xxhash: 3.5.0
2025-09-23 16:46:52,390:INFO:           wurlitzer: Not installed
2025-09-23 16:46:52,390:INFO:PyCaret optional dependencies:
2025-09-23 16:46:52,390:INFO:                shap: 0.44.1
2025-09-23 16:46:52,390:INFO:           interpret: 0.7.2
2025-09-23 16:46:52,390:INFO:                umap: 0.5.7
2025-09-23 16:46:52,390:INFO:     ydata_profiling: 4.16.1
2025-09-23 16:46:52,391:INFO:  explainerdashboard: 0.5.1
2025-09-23 16:46:52,391:INFO:             autoviz: Not installed
2025-09-23 16:46:52,391:INFO:           fairlearn: 0.7.0
2025-09-23 16:46:52,391:INFO:          deepchecks: Not installed
2025-09-23 16:46:52,391:INFO:             xgboost: 3.0.5
2025-09-23 16:46:52,391:INFO:            catboost: 1.2.8
2025-09-23 16:46:52,391:INFO:              kmodes: 0.12.2
2025-09-23 16:46:52,391:INFO:             mlxtend: 0.23.4
2025-09-23 16:46:52,391:INFO:       statsforecast: 1.5.0
2025-09-23 16:46:52,392:INFO:        tune_sklearn: Not installed
2025-09-23 16:46:52,392:INFO:                 ray: Not installed
2025-09-23 16:46:52,392:INFO:            hyperopt: 0.2.7
2025-09-23 16:46:52,392:INFO:              optuna: 4.5.0
2025-09-23 16:46:52,392:INFO:               skopt: 0.10.2
2025-09-23 16:46:52,392:INFO:              mlflow: 3.4.0
2025-09-23 16:46:52,392:INFO:              gradio: 5.46.1
2025-09-23 16:46:52,393:INFO:             fastapi: 0.117.1
2025-09-23 16:46:52,393:INFO:             uvicorn: 0.36.0
2025-09-23 16:46:52,393:INFO:              m2cgen: 0.10.0
2025-09-23 16:46:52,393:INFO:           evidently: 0.4.40
2025-09-23 16:46:52,393:INFO:               fugue: 0.8.7
2025-09-23 16:46:52,393:INFO:           streamlit: Not installed
2025-09-23 16:46:52,393:INFO:             prophet: Not installed
2025-09-23 16:46:52,394:INFO:None
2025-09-23 16:46:52,394:INFO:Set up data.
2025-09-23 16:46:52,595:INFO:Set up folding strategy.
2025-09-23 16:46:52,595:INFO:Set up train/test split.
2025-09-23 16:46:52,768:INFO:Set up index.
2025-09-23 16:46:52,770:INFO:Assigning column types.
2025-09-23 16:46:52,837:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-23 16:46:53,010:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 16:46:53,012:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 16:46:53,110:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:53,119:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:53,270:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-23 16:46:53,272:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 16:46:53,366:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:53,374:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:53,377:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-23 16:46:53,540:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 16:46:53,649:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:53,659:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:53,825:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-23 16:46:53,934:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:53,942:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:53,942:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-23 16:46:54,198:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:54,209:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:54,454:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:54,464:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:54,464:INFO:Preparing preprocessing pipeline...
2025-09-23 16:46:54,477:INFO:Set up label encoding.
2025-09-23 16:46:54,477:INFO:Set up simple imputation.
2025-09-23 16:46:54,524:INFO:Set up encoding of ordinal features.
2025-09-23 16:46:54,542:INFO:Set up encoding of categorical features.
2025-09-23 16:46:54,553:INFO:Set up column name cleaning.
2025-09-23 16:46:55,678:INFO:Finished creating preprocessing pipeline.
2025-09-23 16:46:55,738:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'DuraciÃ³n_estadÃ­a',
                                             'AnticipaciÃ³n_reserva_dÃ­as',
                                             'CalificaciÃ³n', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'OcupaciÃ³n',
                                                                    'ReseÃ±a',
                                                                    'ReputaciÃ³n_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-23 16:46:55,738:INFO:Creating final display dataframe.
2025-09-23 16:46:56,509:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  econÃ³mico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                  (50000, 35)
5        Transformed data shape                                  (50000, 62)
6   Transformed train set shape                                  (35000, 62)
7    Transformed test set shape                                  (15000, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         9e49
2025-09-23 16:46:56,764:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:56,772:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:57,025:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-23 16:46:57,033:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-23 16:46:57,037:INFO:setup() successfully completed in 4.7s...............
2025-09-23 16:46:57,069:INFO:Initializing compare_models()
2025-09-23 16:46:57,069:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-23 16:46:57,069:INFO:Checking exceptions
2025-09-23 16:46:57,119:INFO:Preparing display monitor
2025-09-23 16:46:57,217:INFO:Initializing Logistic Regression
2025-09-23 16:46:57,218:INFO:Total runtime is 1.6415119171142577e-05 minutes
2025-09-23 16:46:57,233:INFO:SubProcess create_model() called ==================================
2025-09-23 16:46:57,236:INFO:Initializing create_model()
2025-09-23 16:46:57,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:46:57,237:INFO:Checking exceptions
2025-09-23 16:46:57,237:INFO:Importing libraries
2025-09-23 16:46:57,237:INFO:Copying training dataset
2025-09-23 16:46:57,340:INFO:Defining folds
2025-09-23 16:46:57,340:INFO:Declaring metric variables
2025-09-23 16:46:57,349:INFO:Importing untrained model
2025-09-23 16:46:57,362:INFO:Logistic Regression Imported successfully
2025-09-23 16:46:57,398:INFO:Starting cross validation
2025-09-23 16:46:57,414:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:47:37,908:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 16:47:37,928:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 16:47:37,937:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 16:47:38,148:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 16:47:38,212:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-23 16:47:38,334:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:47:38,357:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:47:38,370:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:47:38,387:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,416:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,430:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,521:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,567:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,569:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,582:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:47:38,621:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:47:38,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,647:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,670:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,691:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,699:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,755:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,884:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:38,893:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:47:39,046:INFO:Calculating mean and std
2025-09-23 16:47:39,050:INFO:Creating metrics dataframe
2025-09-23 16:47:39,057:INFO:Uploading results into container
2025-09-23 16:47:39,059:INFO:Uploading model into container now
2025-09-23 16:47:39,061:INFO:_master_model_container: 1
2025-09-23 16:47:39,062:INFO:_display_container: 2
2025-09-23 16:47:39,064:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-23 16:47:39,065:INFO:create_model() successfully completed......................................
2025-09-23 16:47:39,343:INFO:SubProcess create_model() end ==================================
2025-09-23 16:47:39,343:INFO:Creating metrics dataframe
2025-09-23 16:47:39,360:INFO:Initializing K Neighbors Classifier
2025-09-23 16:47:39,360:INFO:Total runtime is 0.7023850202560425 minutes
2025-09-23 16:47:39,371:INFO:SubProcess create_model() called ==================================
2025-09-23 16:47:39,372:INFO:Initializing create_model()
2025-09-23 16:47:39,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:47:39,372:INFO:Checking exceptions
2025-09-23 16:47:39,373:INFO:Importing libraries
2025-09-23 16:47:39,373:INFO:Copying training dataset
2025-09-23 16:47:39,459:INFO:Defining folds
2025-09-23 16:47:39,459:INFO:Declaring metric variables
2025-09-23 16:47:39,473:INFO:Importing untrained model
2025-09-23 16:47:39,485:INFO:K Neighbors Classifier Imported successfully
2025-09-23 16:47:39,510:INFO:Starting cross validation
2025-09-23 16:47:39,520:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:05,044:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,173:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,193:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,244:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,265:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,282:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,307:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,327:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,388:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,390:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,411:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,460:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,510:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,512:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,526:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:05,702:INFO:Calculating mean and std
2025-09-23 16:48:05,706:INFO:Creating metrics dataframe
2025-09-23 16:48:05,715:INFO:Uploading results into container
2025-09-23 16:48:05,718:INFO:Uploading model into container now
2025-09-23 16:48:05,720:INFO:_master_model_container: 2
2025-09-23 16:48:05,722:INFO:_display_container: 2
2025-09-23 16:48:05,723:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-23 16:48:05,724:INFO:create_model() successfully completed......................................
2025-09-23 16:48:05,993:INFO:SubProcess create_model() end ==================================
2025-09-23 16:48:05,993:INFO:Creating metrics dataframe
2025-09-23 16:48:06,012:INFO:Initializing Naive Bayes
2025-09-23 16:48:06,013:INFO:Total runtime is 1.1465888778368631 minutes
2025-09-23 16:48:06,025:INFO:SubProcess create_model() called ==================================
2025-09-23 16:48:06,026:INFO:Initializing create_model()
2025-09-23 16:48:06,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:48:06,027:INFO:Checking exceptions
2025-09-23 16:48:06,027:INFO:Importing libraries
2025-09-23 16:48:06,028:INFO:Copying training dataset
2025-09-23 16:48:06,129:INFO:Defining folds
2025-09-23 16:48:06,129:INFO:Declaring metric variables
2025-09-23 16:48:06,148:INFO:Importing untrained model
2025-09-23 16:48:06,162:INFO:Naive Bayes Imported successfully
2025-09-23 16:48:06,185:INFO:Starting cross validation
2025-09-23 16:48:06,196:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:22,500:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,636:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,724:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,790:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,811:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,850:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,853:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,913:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,925:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,971:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:22,998:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:23,039:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:23,047:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:23,086:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:23,256:INFO:Calculating mean and std
2025-09-23 16:48:23,261:INFO:Creating metrics dataframe
2025-09-23 16:48:23,270:INFO:Uploading results into container
2025-09-23 16:48:23,272:INFO:Uploading model into container now
2025-09-23 16:48:23,274:INFO:_master_model_container: 3
2025-09-23 16:48:23,274:INFO:_display_container: 2
2025-09-23 16:48:23,276:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-23 16:48:23,277:INFO:create_model() successfully completed......................................
2025-09-23 16:48:23,543:INFO:SubProcess create_model() end ==================================
2025-09-23 16:48:23,544:INFO:Creating metrics dataframe
2025-09-23 16:48:23,564:INFO:Initializing Decision Tree Classifier
2025-09-23 16:48:23,564:INFO:Total runtime is 1.4391135136286417 minutes
2025-09-23 16:48:23,573:INFO:SubProcess create_model() called ==================================
2025-09-23 16:48:23,575:INFO:Initializing create_model()
2025-09-23 16:48:23,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:48:23,576:INFO:Checking exceptions
2025-09-23 16:48:23,576:INFO:Importing libraries
2025-09-23 16:48:23,576:INFO:Copying training dataset
2025-09-23 16:48:23,657:INFO:Defining folds
2025-09-23 16:48:23,658:INFO:Declaring metric variables
2025-09-23 16:48:23,670:INFO:Importing untrained model
2025-09-23 16:48:23,684:INFO:Decision Tree Classifier Imported successfully
2025-09-23 16:48:23,719:INFO:Starting cross validation
2025-09-23 16:48:23,732:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:26,006:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,034:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,042:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,056:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,120:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,139:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,151:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,169:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,234:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,254:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,285:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:26,293:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:39,119:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:39,225:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:39,334:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:39,497:INFO:Calculating mean and std
2025-09-23 16:48:39,501:INFO:Creating metrics dataframe
2025-09-23 16:48:39,506:INFO:Uploading results into container
2025-09-23 16:48:39,508:INFO:Uploading model into container now
2025-09-23 16:48:39,510:INFO:_master_model_container: 4
2025-09-23 16:48:39,510:INFO:_display_container: 2
2025-09-23 16:48:39,512:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 16:48:39,513:INFO:create_model() successfully completed......................................
2025-09-23 16:48:39,783:INFO:SubProcess create_model() end ==================================
2025-09-23 16:48:39,783:INFO:Creating metrics dataframe
2025-09-23 16:48:39,812:INFO:Initializing SVM - Linear Kernel
2025-09-23 16:48:39,814:INFO:Total runtime is 1.7099364042282104 minutes
2025-09-23 16:48:39,825:INFO:SubProcess create_model() called ==================================
2025-09-23 16:48:39,825:INFO:Initializing create_model()
2025-09-23 16:48:39,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:48:39,828:INFO:Checking exceptions
2025-09-23 16:48:39,828:INFO:Importing libraries
2025-09-23 16:48:39,829:INFO:Copying training dataset
2025-09-23 16:48:39,908:INFO:Defining folds
2025-09-23 16:48:39,908:INFO:Declaring metric variables
2025-09-23 16:48:39,927:INFO:Importing untrained model
2025-09-23 16:48:39,944:INFO:SVM - Linear Kernel Imported successfully
2025-09-23 16:48:39,969:INFO:Starting cross validation
2025-09-23 16:48:39,982:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:45,896:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:45,935:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:46,040:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:46,158:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,144:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:47,199:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,315:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,434:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,445:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:47,484:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,549:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:47,594:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,665:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:47,693:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,710:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,720:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,810:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,833:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:47,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:48,108:INFO:Calculating mean and std
2025-09-23 16:48:48,110:INFO:Creating metrics dataframe
2025-09-23 16:48:48,115:INFO:Uploading results into container
2025-09-23 16:48:48,115:INFO:Uploading model into container now
2025-09-23 16:48:48,115:INFO:_master_model_container: 5
2025-09-23 16:48:48,119:INFO:_display_container: 2
2025-09-23 16:48:48,122:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-23 16:48:48,124:INFO:create_model() successfully completed......................................
2025-09-23 16:48:48,378:INFO:SubProcess create_model() end ==================================
2025-09-23 16:48:48,378:INFO:Creating metrics dataframe
2025-09-23 16:48:48,402:INFO:Initializing Ridge Classifier
2025-09-23 16:48:48,402:INFO:Total runtime is 1.8530735572179158 minutes
2025-09-23 16:48:48,416:INFO:SubProcess create_model() called ==================================
2025-09-23 16:48:48,416:INFO:Initializing create_model()
2025-09-23 16:48:48,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:48:48,417:INFO:Checking exceptions
2025-09-23 16:48:48,417:INFO:Importing libraries
2025-09-23 16:48:48,417:INFO:Copying training dataset
2025-09-23 16:48:48,511:INFO:Defining folds
2025-09-23 16:48:48,511:INFO:Declaring metric variables
2025-09-23 16:48:48,536:INFO:Importing untrained model
2025-09-23 16:48:48,551:INFO:Ridge Classifier Imported successfully
2025-09-23 16:48:48,575:INFO:Starting cross validation
2025-09-23 16:48:48,585:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:50,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:50,959:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:50,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:50,986:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:51,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,004:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:48:51,019:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,025:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,056:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,105:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,121:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,136:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,178:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,219:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,227:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,247:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,265:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,303:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:51,464:INFO:Calculating mean and std
2025-09-23 16:48:51,467:INFO:Creating metrics dataframe
2025-09-23 16:48:51,472:INFO:Uploading results into container
2025-09-23 16:48:51,473:INFO:Uploading model into container now
2025-09-23 16:48:51,477:INFO:_master_model_container: 6
2025-09-23 16:48:51,477:INFO:_display_container: 2
2025-09-23 16:48:51,481:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-23 16:48:51,481:INFO:create_model() successfully completed......................................
2025-09-23 16:48:51,744:INFO:SubProcess create_model() end ==================================
2025-09-23 16:48:51,746:INFO:Creating metrics dataframe
2025-09-23 16:48:51,769:INFO:Initializing Random Forest Classifier
2025-09-23 16:48:51,770:INFO:Total runtime is 1.9092135945955913 minutes
2025-09-23 16:48:51,783:INFO:SubProcess create_model() called ==================================
2025-09-23 16:48:51,784:INFO:Initializing create_model()
2025-09-23 16:48:51,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:48:51,784:INFO:Checking exceptions
2025-09-23 16:48:51,784:INFO:Importing libraries
2025-09-23 16:48:51,785:INFO:Copying training dataset
2025-09-23 16:48:51,877:INFO:Defining folds
2025-09-23 16:48:51,878:INFO:Declaring metric variables
2025-09-23 16:48:51,893:INFO:Importing untrained model
2025-09-23 16:48:51,905:INFO:Random Forest Classifier Imported successfully
2025-09-23 16:48:51,931:INFO:Starting cross validation
2025-09-23 16:48:51,944:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:56,554:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,563:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,588:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,638:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,677:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,715:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,762:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,778:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,811:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,817:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,822:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:56,903:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:48:57,056:INFO:Calculating mean and std
2025-09-23 16:48:57,056:INFO:Creating metrics dataframe
2025-09-23 16:48:57,056:INFO:Uploading results into container
2025-09-23 16:48:57,056:INFO:Uploading model into container now
2025-09-23 16:48:57,056:INFO:_master_model_container: 7
2025-09-23 16:48:57,056:INFO:_display_container: 2
2025-09-23 16:48:57,068:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-23 16:48:57,068:INFO:create_model() successfully completed......................................
2025-09-23 16:48:57,316:INFO:SubProcess create_model() end ==================================
2025-09-23 16:48:57,316:INFO:Creating metrics dataframe
2025-09-23 16:48:57,344:INFO:Initializing Quadratic Discriminant Analysis
2025-09-23 16:48:57,346:INFO:Total runtime is 2.0021494388580323 minutes
2025-09-23 16:48:57,356:INFO:SubProcess create_model() called ==================================
2025-09-23 16:48:57,358:INFO:Initializing create_model()
2025-09-23 16:48:57,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:48:57,359:INFO:Checking exceptions
2025-09-23 16:48:57,359:INFO:Importing libraries
2025-09-23 16:48:57,359:INFO:Copying training dataset
2025-09-23 16:48:57,445:INFO:Defining folds
2025-09-23 16:48:57,445:INFO:Declaring metric variables
2025-09-23 16:48:57,467:INFO:Importing untrained model
2025-09-23 16:48:57,480:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-23 16:48:57,501:INFO:Starting cross validation
2025-09-23 16:48:57,514:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:48:59,451:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:48:59,465:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:48:59,529:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:48:59,602:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:48:59,738:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-23 16:49:00,271:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:00,293:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:00,319:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,343:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,371:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:00,411:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:00,415:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,422:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:00,453:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,455:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,456:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,466:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,540:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,572:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,578:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,581:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,598:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,666:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,712:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,723:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:00,892:INFO:Calculating mean and std
2025-09-23 16:49:00,896:INFO:Creating metrics dataframe
2025-09-23 16:49:00,902:INFO:Uploading results into container
2025-09-23 16:49:00,902:INFO:Uploading model into container now
2025-09-23 16:49:00,904:INFO:_master_model_container: 8
2025-09-23 16:49:00,904:INFO:_display_container: 2
2025-09-23 16:49:00,905:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-23 16:49:00,908:INFO:create_model() successfully completed......................................
2025-09-23 16:49:01,165:INFO:SubProcess create_model() end ==================================
2025-09-23 16:49:01,165:INFO:Creating metrics dataframe
2025-09-23 16:49:01,192:INFO:Initializing Ada Boost Classifier
2025-09-23 16:49:01,193:INFO:Total runtime is 2.066256574789683 minutes
2025-09-23 16:49:01,205:INFO:SubProcess create_model() called ==================================
2025-09-23 16:49:01,206:INFO:Initializing create_model()
2025-09-23 16:49:01,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:49:01,206:INFO:Checking exceptions
2025-09-23 16:49:01,207:INFO:Importing libraries
2025-09-23 16:49:01,207:INFO:Copying training dataset
2025-09-23 16:49:01,309:INFO:Defining folds
2025-09-23 16:49:01,309:INFO:Declaring metric variables
2025-09-23 16:49:01,324:INFO:Importing untrained model
2025-09-23 16:49:01,335:INFO:Ada Boost Classifier Imported successfully
2025-09-23 16:49:01,358:INFO:Starting cross validation
2025-09-23 16:49:01,370:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:49:03,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:49:03,122:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:49:03,153:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:49:03,202:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:49:03,223:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-23 16:49:09,299:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:09,300:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:09,352:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,353:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,466:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,473:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:09,515:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,525:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,536:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:09,577:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,599:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,620:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:09,642:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,696:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,741:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,825:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:09,895:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:10,059:INFO:Calculating mean and std
2025-09-23 16:49:10,059:INFO:Creating metrics dataframe
2025-09-23 16:49:10,069:INFO:Uploading results into container
2025-09-23 16:49:10,070:INFO:Uploading model into container now
2025-09-23 16:49:10,073:INFO:_master_model_container: 9
2025-09-23 16:49:10,073:INFO:_display_container: 2
2025-09-23 16:49:10,075:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-23 16:49:10,077:INFO:create_model() successfully completed......................................
2025-09-23 16:49:10,329:INFO:SubProcess create_model() end ==================================
2025-09-23 16:49:10,329:INFO:Creating metrics dataframe
2025-09-23 16:49:10,370:INFO:Initializing Gradient Boosting Classifier
2025-09-23 16:49:10,370:INFO:Total runtime is 2.2192073106765746 minutes
2025-09-23 16:49:10,380:INFO:SubProcess create_model() called ==================================
2025-09-23 16:49:10,380:INFO:Initializing create_model()
2025-09-23 16:49:10,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:49:10,385:INFO:Checking exceptions
2025-09-23 16:49:10,385:INFO:Importing libraries
2025-09-23 16:49:10,385:INFO:Copying training dataset
2025-09-23 16:49:10,478:INFO:Defining folds
2025-09-23 16:49:10,478:INFO:Declaring metric variables
2025-09-23 16:49:10,497:INFO:Importing untrained model
2025-09-23 16:49:10,511:INFO:Gradient Boosting Classifier Imported successfully
2025-09-23 16:49:10,535:INFO:Starting cross validation
2025-09-23 16:49:10,548:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:49:44,591:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:44,648:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:44,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:44,882:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:44,893:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:44,941:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:44,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:44,990:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,080:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,120:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,191:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:45,191:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,243:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,252:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,334:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:45,348:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,379:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,455:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,494:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,622:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:45,771:INFO:Calculating mean and std
2025-09-23 16:49:45,774:INFO:Creating metrics dataframe
2025-09-23 16:49:45,780:INFO:Uploading results into container
2025-09-23 16:49:45,782:INFO:Uploading model into container now
2025-09-23 16:49:45,789:INFO:_master_model_container: 10
2025-09-23 16:49:45,790:INFO:_display_container: 2
2025-09-23 16:49:45,794:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-23 16:49:45,794:INFO:create_model() successfully completed......................................
2025-09-23 16:49:46,049:INFO:SubProcess create_model() end ==================================
2025-09-23 16:49:46,049:INFO:Creating metrics dataframe
2025-09-23 16:49:46,077:INFO:Initializing Linear Discriminant Analysis
2025-09-23 16:49:46,077:INFO:Total runtime is 2.814334460099538 minutes
2025-09-23 16:49:46,088:INFO:SubProcess create_model() called ==================================
2025-09-23 16:49:46,089:INFO:Initializing create_model()
2025-09-23 16:49:46,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:49:46,090:INFO:Checking exceptions
2025-09-23 16:49:46,090:INFO:Importing libraries
2025-09-23 16:49:46,090:INFO:Copying training dataset
2025-09-23 16:49:46,186:INFO:Defining folds
2025-09-23 16:49:46,187:INFO:Declaring metric variables
2025-09-23 16:49:46,202:INFO:Importing untrained model
2025-09-23 16:49:46,216:INFO:Linear Discriminant Analysis Imported successfully
2025-09-23 16:49:46,240:INFO:Starting cross validation
2025-09-23 16:49:46,251:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:49:49,357:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:49,362:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:49,374:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:49,402:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,402:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,405:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:49,413:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-23 16:49:49,413:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,447:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,451:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,503:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,513:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,522:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,563:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,571:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,614:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,640:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,687:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,692:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:49,864:INFO:Calculating mean and std
2025-09-23 16:49:49,869:INFO:Creating metrics dataframe
2025-09-23 16:49:49,875:INFO:Uploading results into container
2025-09-23 16:49:49,877:INFO:Uploading model into container now
2025-09-23 16:49:49,878:INFO:_master_model_container: 11
2025-09-23 16:49:49,879:INFO:_display_container: 2
2025-09-23 16:49:49,879:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-23 16:49:49,880:INFO:create_model() successfully completed......................................
2025-09-23 16:49:50,133:INFO:SubProcess create_model() end ==================================
2025-09-23 16:49:50,133:INFO:Creating metrics dataframe
2025-09-23 16:49:50,167:INFO:Initializing Extra Trees Classifier
2025-09-23 16:49:50,167:INFO:Total runtime is 2.8824938774108886 minutes
2025-09-23 16:49:50,178:INFO:SubProcess create_model() called ==================================
2025-09-23 16:49:50,179:INFO:Initializing create_model()
2025-09-23 16:49:50,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:49:50,180:INFO:Checking exceptions
2025-09-23 16:49:50,181:INFO:Importing libraries
2025-09-23 16:49:50,181:INFO:Copying training dataset
2025-09-23 16:49:50,329:INFO:Defining folds
2025-09-23 16:49:50,330:INFO:Declaring metric variables
2025-09-23 16:49:50,349:INFO:Importing untrained model
2025-09-23 16:49:50,365:INFO:Extra Trees Classifier Imported successfully
2025-09-23 16:49:50,388:INFO:Starting cross validation
2025-09-23 16:49:50,398:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:49:55,775:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:55,926:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:55,975:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,002:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,003:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,003:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,032:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,077:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,191:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,223:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,223:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,228:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:49:56,412:INFO:Calculating mean and std
2025-09-23 16:49:56,416:INFO:Creating metrics dataframe
2025-09-23 16:49:56,421:INFO:Uploading results into container
2025-09-23 16:49:56,422:INFO:Uploading model into container now
2025-09-23 16:49:56,424:INFO:_master_model_container: 12
2025-09-23 16:49:56,424:INFO:_display_container: 2
2025-09-23 16:49:56,427:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-23 16:49:56,429:INFO:create_model() successfully completed......................................
2025-09-23 16:49:56,683:INFO:SubProcess create_model() end ==================================
2025-09-23 16:49:56,683:INFO:Creating metrics dataframe
2025-09-23 16:49:56,713:INFO:Initializing Extreme Gradient Boosting
2025-09-23 16:49:56,714:INFO:Total runtime is 2.991618037223816 minutes
2025-09-23 16:49:56,725:INFO:SubProcess create_model() called ==================================
2025-09-23 16:49:56,726:INFO:Initializing create_model()
2025-09-23 16:49:56,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:49:56,727:INFO:Checking exceptions
2025-09-23 16:49:56,727:INFO:Importing libraries
2025-09-23 16:49:56,727:INFO:Copying training dataset
2025-09-23 16:49:56,817:INFO:Defining folds
2025-09-23 16:49:56,817:INFO:Declaring metric variables
2025-09-23 16:49:56,826:INFO:Importing untrained model
2025-09-23 16:49:56,842:INFO:Extreme Gradient Boosting Imported successfully
2025-09-23 16:49:56,865:INFO:Starting cross validation
2025-09-23 16:49:56,879:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:50:02,898:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:02,900:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:02,912:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:02,916:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,011:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,026:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,040:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,151:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,162:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,177:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,178:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,269:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,393:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,496:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:03,648:INFO:Calculating mean and std
2025-09-23 16:50:03,651:INFO:Creating metrics dataframe
2025-09-23 16:50:03,658:INFO:Uploading results into container
2025-09-23 16:50:03,660:INFO:Uploading model into container now
2025-09-23 16:50:03,661:INFO:_master_model_container: 13
2025-09-23 16:50:03,662:INFO:_display_container: 2
2025-09-23 16:50:03,665:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-23 16:50:03,667:INFO:create_model() successfully completed......................................
2025-09-23 16:50:03,919:INFO:SubProcess create_model() end ==================================
2025-09-23 16:50:03,920:INFO:Creating metrics dataframe
2025-09-23 16:50:03,950:INFO:Initializing Light Gradient Boosting Machine
2025-09-23 16:50:03,951:INFO:Total runtime is 3.112226100762685 minutes
2025-09-23 16:50:03,963:INFO:SubProcess create_model() called ==================================
2025-09-23 16:50:03,963:INFO:Initializing create_model()
2025-09-23 16:50:03,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:50:03,964:INFO:Checking exceptions
2025-09-23 16:50:03,964:INFO:Importing libraries
2025-09-23 16:50:03,964:INFO:Copying training dataset
2025-09-23 16:50:04,062:INFO:Defining folds
2025-09-23 16:50:04,063:INFO:Declaring metric variables
2025-09-23 16:50:04,074:INFO:Importing untrained model
2025-09-23 16:50:04,091:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-23 16:50:04,123:INFO:Starting cross validation
2025-09-23 16:50:04,136:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:50:09,263:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,297:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,338:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,398:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,440:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,485:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,490:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,522:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,542:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,554:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,597:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,600:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,648:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:09,859:INFO:Calculating mean and std
2025-09-23 16:50:09,862:INFO:Creating metrics dataframe
2025-09-23 16:50:09,871:INFO:Uploading results into container
2025-09-23 16:50:09,873:INFO:Uploading model into container now
2025-09-23 16:50:09,874:INFO:_master_model_container: 14
2025-09-23 16:50:09,876:INFO:_display_container: 2
2025-09-23 16:50:09,884:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-23 16:50:09,884:INFO:create_model() successfully completed......................................
2025-09-23 16:50:10,143:INFO:SubProcess create_model() end ==================================
2025-09-23 16:50:10,143:INFO:Creating metrics dataframe
2025-09-23 16:50:10,178:INFO:Initializing CatBoost Classifier
2025-09-23 16:50:10,178:INFO:Total runtime is 3.216009453932444 minutes
2025-09-23 16:50:10,188:INFO:SubProcess create_model() called ==================================
2025-09-23 16:50:10,190:INFO:Initializing create_model()
2025-09-23 16:50:10,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:50:10,192:INFO:Checking exceptions
2025-09-23 16:50:10,193:INFO:Importing libraries
2025-09-23 16:50:10,193:INFO:Copying training dataset
2025-09-23 16:50:10,288:INFO:Defining folds
2025-09-23 16:50:10,288:INFO:Declaring metric variables
2025-09-23 16:50:10,300:INFO:Importing untrained model
2025-09-23 16:50:10,316:INFO:CatBoost Classifier Imported successfully
2025-09-23 16:50:10,333:INFO:Starting cross validation
2025-09-23 16:50:10,348:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:50:53,480:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:53,633:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:53,785:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:54,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:54,637:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:54,788:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,421:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,523:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,635:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,730:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,831:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,839:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:55,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:56,036:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:56,203:INFO:Calculating mean and std
2025-09-23 16:50:56,206:INFO:Creating metrics dataframe
2025-09-23 16:50:56,214:INFO:Uploading results into container
2025-09-23 16:50:56,216:INFO:Uploading model into container now
2025-09-23 16:50:56,218:INFO:_master_model_container: 15
2025-09-23 16:50:56,223:INFO:_display_container: 2
2025-09-23 16:50:56,223:INFO:<catboost.core.CatBoostClassifier object at 0x0000025683A3BEE0>
2025-09-23 16:50:56,223:INFO:create_model() successfully completed......................................
2025-09-23 16:50:56,481:INFO:SubProcess create_model() end ==================================
2025-09-23 16:50:56,481:INFO:Creating metrics dataframe
2025-09-23 16:50:56,517:INFO:Initializing Dummy Classifier
2025-09-23 16:50:56,517:INFO:Total runtime is 3.988334369659424 minutes
2025-09-23 16:50:56,531:INFO:SubProcess create_model() called ==================================
2025-09-23 16:50:56,532:INFO:Initializing create_model()
2025-09-23 16:50:56,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025683A39240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:50:56,533:INFO:Checking exceptions
2025-09-23 16:50:56,534:INFO:Importing libraries
2025-09-23 16:50:56,534:INFO:Copying training dataset
2025-09-23 16:50:56,630:INFO:Defining folds
2025-09-23 16:50:56,630:INFO:Declaring metric variables
2025-09-23 16:50:56,641:INFO:Importing untrained model
2025-09-23 16:50:56,655:INFO:Dummy Classifier Imported successfully
2025-09-23 16:50:56,679:INFO:Starting cross validation
2025-09-23 16:50:56,692:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-23 16:50:58,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:58,963:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:58,976:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,025:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,026:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,069:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,074:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,088:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,136:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:50:59,145:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:50:59,161:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,167:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,173:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:50:59,178:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,182:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,229:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:50:59,230:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,245:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-23 16:50:59,287:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,301:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-23 16:50:59,460:INFO:Calculating mean and std
2025-09-23 16:50:59,465:INFO:Creating metrics dataframe
2025-09-23 16:50:59,470:INFO:Uploading results into container
2025-09-23 16:50:59,473:INFO:Uploading model into container now
2025-09-23 16:50:59,474:INFO:_master_model_container: 16
2025-09-23 16:50:59,474:INFO:_display_container: 2
2025-09-23 16:50:59,477:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-23 16:50:59,477:INFO:create_model() successfully completed......................................
2025-09-23 16:50:59,731:INFO:SubProcess create_model() end ==================================
2025-09-23 16:50:59,731:INFO:Creating metrics dataframe
2025-09-23 16:50:59,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-23 16:50:59,808:INFO:Initializing create_model()
2025-09-23 16:50:59,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-23 16:50:59,808:INFO:Checking exceptions
2025-09-23 16:50:59,814:INFO:Importing libraries
2025-09-23 16:50:59,814:INFO:Copying training dataset
2025-09-23 16:50:59,900:INFO:Defining folds
2025-09-23 16:50:59,900:INFO:Declaring metric variables
2025-09-23 16:50:59,901:INFO:Importing untrained model
2025-09-23 16:50:59,901:INFO:Declaring custom model
2025-09-23 16:50:59,903:INFO:Decision Tree Classifier Imported successfully
2025-09-23 16:50:59,910:INFO:Cross validation set to False
2025-09-23 16:50:59,910:INFO:Fitting Model
2025-09-23 16:51:01,455:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 16:51:01,455:INFO:create_model() successfully completed......................................
2025-09-23 16:51:01,832:INFO:_master_model_container: 16
2025-09-23 16:51:01,833:INFO:_display_container: 2
2025-09-23 16:51:01,834:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-23 16:51:01,835:INFO:compare_models() successfully completed......................................
2025-09-23 16:51:01,838:INFO:Initializing plot_model()
2025-09-23 16:51:01,838:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, system=True)
2025-09-23 16:51:01,838:INFO:Checking exceptions
2025-09-23 16:51:01,887:INFO:Preloading libraries
2025-09-23 16:51:01,888:INFO:Copying training dataset
2025-09-23 16:51:01,888:INFO:Plot type: confusion_matrix
2025-09-23 16:51:02,618:INFO:Fitting Model
2025-09-23 16:51:02,618:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names

2025-09-23 16:51:02,620:INFO:Scoring test/hold-out set
2025-09-23 16:51:03,137:INFO:Visual Rendered Successfully
2025-09-23 16:51:03,400:INFO:plot_model() successfully completed......................................
2025-09-23 16:51:03,402:INFO:Initializing plot_model()
2025-09-23 16:51:03,402:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, system=True)
2025-09-23 16:51:03,402:INFO:Checking exceptions
2025-09-23 16:51:03,436:INFO:Preloading libraries
2025-09-23 16:51:03,437:INFO:Copying training dataset
2025-09-23 16:51:03,437:INFO:Plot type: feature
2025-09-23 16:51:03,438:WARNING:No coef_ found. Trying feature_importances_
2025-09-23 16:51:04,130:INFO:Visual Rendered Successfully
2025-09-23 16:51:04,382:INFO:plot_model() successfully completed......................................
2025-09-23 16:51:04,384:INFO:Initializing predict_model()
2025-09-23 16:51:04,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025681D62740>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000256819FBF40>)
2025-09-23 16:51:04,385:INFO:Checking exceptions
2025-09-23 16:51:04,385:INFO:Preloading libraries
2025-09-23 16:51:05,013:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 16:51:05,242:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-23 16:51:05,473:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-24 09:35:12,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-24 09:35:12,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-24 09:35:12,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-24 09:35:12,906:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-24 09:35:19,391:INFO:PyCaret ClassificationExperiment
2025-09-24 09:35:19,391:INFO:Logging name: clf-default-name
2025-09-24 09:35:19,391:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-09-24 09:35:19,391:INFO:version 3.3.2
2025-09-24 09:35:19,391:INFO:Initializing setup()
2025-09-24 09:35:19,391:INFO:self.USI: c383
2025-09-24 09:35:19,391:INFO:self._variable_keys: {'seed', 'y', 'y_test', 'USI', 'logging_param', 'X', 'target_param', 'gpu_param', 'fold_shuffle_param', 'fold_generator', 'y_train', 'gpu_n_jobs_param', 'pipeline', 'exp_name_log', 'data', 'memory', 'fold_groups_param', 'html_param', '_ml_usecase', 'X_train', 'is_multiclass', 'exp_id', 'n_jobs_param', '_available_plots', 'X_test', 'log_plots_param', 'fix_imbalance', 'idx'}
2025-09-24 09:35:19,391:INFO:Checking environment
2025-09-24 09:35:19,391:INFO:python_version: 3.10.18
2025-09-24 09:35:19,391:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-24 09:35:19,391:INFO:machine: AMD64
2025-09-24 09:35:19,391:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-24 09:35:19,391:INFO:Memory: svmem(total=16486035456, available=9198415872, percent=44.2, used=7287619584, free=9198415872)
2025-09-24 09:35:19,391:INFO:Physical Core: 8
2025-09-24 09:35:19,391:INFO:Logical Core: 16
2025-09-24 09:35:19,391:INFO:Checking libraries
2025-09-24 09:35:19,391:INFO:System:
2025-09-24 09:35:19,391:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-24 09:35:19,391:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-24 09:35:19,391:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-24 09:35:19,391:INFO:PyCaret required dependencies:
2025-09-24 09:35:22,057:INFO:                 pip: 25.2
2025-09-24 09:35:22,057:INFO:          setuptools: 78.1.1
2025-09-24 09:35:22,057:INFO:             pycaret: 3.3.2
2025-09-24 09:35:22,057:INFO:             IPython: 8.37.0
2025-09-24 09:35:22,057:INFO:          ipywidgets: 8.1.7
2025-09-24 09:35:22,057:INFO:                tqdm: 4.67.1
2025-09-24 09:35:22,057:INFO:               numpy: 1.26.4
2025-09-24 09:35:22,057:INFO:              pandas: 2.1.4
2025-09-24 09:35:22,057:INFO:              jinja2: 3.1.6
2025-09-24 09:35:22,057:INFO:               scipy: 1.11.4
2025-09-24 09:35:22,057:INFO:              joblib: 1.3.2
2025-09-24 09:35:22,057:INFO:             sklearn: 1.4.2
2025-09-24 09:35:22,057:INFO:                pyod: 2.0.5
2025-09-24 09:35:22,057:INFO:            imblearn: 0.14.0
2025-09-24 09:35:22,057:INFO:   category_encoders: 2.7.0
2025-09-24 09:35:22,057:INFO:            lightgbm: 4.6.0
2025-09-24 09:35:22,057:INFO:               numba: 0.61.0
2025-09-24 09:35:22,057:INFO:            requests: 2.32.5
2025-09-24 09:35:22,057:INFO:          matplotlib: 3.7.5
2025-09-24 09:35:22,057:INFO:          scikitplot: 0.3.7
2025-09-24 09:35:22,057:INFO:         yellowbrick: 1.5
2025-09-24 09:35:22,057:INFO:              plotly: 5.24.1
2025-09-24 09:35:22,057:INFO:    plotly-resampler: Not installed
2025-09-24 09:35:22,057:INFO:             kaleido: 1.1.0
2025-09-24 09:35:22,057:INFO:           schemdraw: 0.15
2025-09-24 09:35:22,057:INFO:         statsmodels: 0.14.5
2025-09-24 09:35:22,057:INFO:              sktime: 0.26.0
2025-09-24 09:35:22,057:INFO:               tbats: 1.1.3
2025-09-24 09:35:22,057:INFO:            pmdarima: 2.0.4
2025-09-24 09:35:22,057:INFO:              psutil: 7.1.0
2025-09-24 09:35:22,057:INFO:          markupsafe: 3.0.2
2025-09-24 09:35:22,057:INFO:             pickle5: Not installed
2025-09-24 09:35:22,057:INFO:         cloudpickle: 3.1.1
2025-09-24 09:35:22,057:INFO:         deprecation: 2.1.0
2025-09-24 09:35:22,057:INFO:              xxhash: 3.5.0
2025-09-24 09:35:22,057:INFO:           wurlitzer: Not installed
2025-09-24 09:35:22,057:INFO:PyCaret optional dependencies:
2025-09-24 09:35:36,336:INFO:                shap: 0.44.1
2025-09-24 09:35:36,344:INFO:           interpret: 0.7.2
2025-09-24 09:35:36,344:INFO:                umap: 0.5.7
2025-09-24 09:35:36,344:INFO:     ydata_profiling: 4.16.1
2025-09-24 09:35:36,344:INFO:  explainerdashboard: 0.5.1
2025-09-24 09:35:36,344:INFO:             autoviz: Not installed
2025-09-24 09:35:36,344:INFO:           fairlearn: 0.7.0
2025-09-24 09:35:36,344:INFO:          deepchecks: Not installed
2025-09-24 09:35:36,344:INFO:             xgboost: 3.0.5
2025-09-24 09:35:36,344:INFO:            catboost: 1.2.8
2025-09-24 09:35:36,344:INFO:              kmodes: 0.12.2
2025-09-24 09:35:36,344:INFO:             mlxtend: 0.23.4
2025-09-24 09:35:36,344:INFO:       statsforecast: 1.5.0
2025-09-24 09:35:36,344:INFO:        tune_sklearn: Not installed
2025-09-24 09:35:36,344:INFO:                 ray: Not installed
2025-09-24 09:35:36,344:INFO:            hyperopt: 0.2.7
2025-09-24 09:35:36,344:INFO:              optuna: 4.5.0
2025-09-24 09:35:36,344:INFO:               skopt: 0.10.2
2025-09-24 09:35:36,344:INFO:              mlflow: 3.4.0
2025-09-24 09:35:36,344:INFO:              gradio: 5.46.1
2025-09-24 09:35:36,344:INFO:             fastapi: 0.117.1
2025-09-24 09:35:36,344:INFO:             uvicorn: 0.36.0
2025-09-24 09:35:36,344:INFO:              m2cgen: 0.10.0
2025-09-24 09:35:36,344:INFO:           evidently: 0.4.40
2025-09-24 09:35:36,344:INFO:               fugue: 0.8.7
2025-09-24 09:35:36,344:INFO:           streamlit: Not installed
2025-09-24 09:35:36,344:INFO:             prophet: Not installed
2025-09-24 09:35:36,344:INFO:None
2025-09-24 09:35:36,344:INFO:Set up data.
2025-09-24 09:35:36,486:INFO:Set up folding strategy.
2025-09-24 09:35:36,486:INFO:Set up train/test split.
2025-09-24 09:35:36,589:INFO:Set up index.
2025-09-24 09:35:36,589:INFO:Assigning column types.
2025-09-24 09:35:36,638:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-24 09:35:36,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-24 09:35:36,757:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-24 09:35:36,845:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:36,845:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:37,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-24 09:35:37,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-24 09:35:37,220:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:37,220:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:37,220:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-24 09:35:37,347:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-24 09:35:37,407:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:37,419:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:37,535:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-09-24 09:35:37,603:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:37,603:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:37,603:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-09-24 09:35:37,794:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:37,794:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:37,972:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:37,988:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:37,988:INFO:Preparing preprocessing pipeline...
2025-09-24 09:35:37,988:INFO:Set up label encoding.
2025-09-24 09:35:37,988:INFO:Set up simple imputation.
2025-09-24 09:35:38,020:INFO:Set up encoding of ordinal features.
2025-09-24 09:35:38,048:INFO:Set up encoding of categorical features.
2025-09-24 09:35:38,052:INFO:Set up column name cleaning.
2025-09-24 09:35:38,778:INFO:Finished creating preprocessing pipeline.
2025-09-24 09:35:38,827:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Edad', 'Duración_estadía',
                                             'Anticipación_reserva_días',
                                             'Calificación', 'reputacion_score',
                                             'limpieza_sc...
                                                                    'Canal_reserva',
                                                                    'Ocupación',
                                                                    'Reseña',
                                                                    'Reputación_online',
                                                                    'Limpieza',
                                                                    'nivel_servicios'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-09-24 09:35:38,827:INFO:Creating final display dataframe.
2025-09-24 09:35:39,405:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                     segmento
2                   Target type                                   Multiclass
3                Target mapping  económico: 0, precio-calidad: 1, premium: 2
4           Original data shape                                  (50000, 35)
5        Transformed data shape                                  (50000, 62)
6   Transformed train set shape                                  (35000, 62)
7    Transformed test set shape                                  (15000, 62)
8              Numeric features                                           13
9          Categorical features                                           11
10                   Preprocess                                         True
11              Imputation type                                       simple
12           Numeric imputation                                         mean
13       Categorical imputation                                         mode
14     Maximum one-hot encoding                                           25
15              Encoding method                                         None
16               Fold Generator                              StratifiedKFold
17                  Fold Number                                            5
18                     CPU Jobs                                           -1
19                      Use GPU                                        False
20               Log Experiment                                        False
21              Experiment Name                             clf-default-name
22                          USI                                         c383
2025-09-24 09:35:39,588:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:39,588:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:39,773:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-24 09:35:39,773:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-24 09:35:39,773:INFO:setup() successfully completed in 20.45s...............
2025-09-24 09:35:39,789:INFO:Initializing compare_models()
2025-09-24 09:35:39,789:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-09-24 09:35:39,789:INFO:Checking exceptions
2025-09-24 09:35:39,825:INFO:Preparing display monitor
2025-09-24 09:35:39,883:INFO:Initializing Logistic Regression
2025-09-24 09:35:39,883:INFO:Total runtime is 0.0 minutes
2025-09-24 09:35:39,892:INFO:SubProcess create_model() called ==================================
2025-09-24 09:35:39,892:INFO:Initializing create_model()
2025-09-24 09:35:39,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:35:39,892:INFO:Checking exceptions
2025-09-24 09:35:39,892:INFO:Importing libraries
2025-09-24 09:35:39,892:INFO:Copying training dataset
2025-09-24 09:35:39,968:INFO:Defining folds
2025-09-24 09:35:39,968:INFO:Declaring metric variables
2025-09-24 09:35:39,976:INFO:Importing untrained model
2025-09-24 09:35:39,985:INFO:Logistic Regression Imported successfully
2025-09-24 09:35:40,009:INFO:Starting cross validation
2025-09-24 09:35:40,009:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:36:19,988:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-24 09:36:20,183:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-24 09:36:20,253:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-24 09:36:20,324:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-24 09:36:20,387:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:36:20,432:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,447:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-09-24 09:36:20,566:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:36:20,577:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,633:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,644:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:36:20,690:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,709:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,717:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:36:20,761:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,771:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,808:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:36:20,810:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,862:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,882:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,889:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:20,979:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:21,019:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:21,101:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:21,276:INFO:Calculating mean and std
2025-09-24 09:36:21,278:INFO:Creating metrics dataframe
2025-09-24 09:36:21,286:INFO:Uploading results into container
2025-09-24 09:36:21,286:INFO:Uploading model into container now
2025-09-24 09:36:21,289:INFO:_master_model_container: 1
2025-09-24 09:36:21,289:INFO:_display_container: 2
2025-09-24 09:36:21,290:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-09-24 09:36:21,291:INFO:create_model() successfully completed......................................
2025-09-24 09:36:21,538:INFO:SubProcess create_model() end ==================================
2025-09-24 09:36:21,538:INFO:Creating metrics dataframe
2025-09-24 09:36:21,570:INFO:Initializing K Neighbors Classifier
2025-09-24 09:36:21,570:INFO:Total runtime is 0.694776443640391 minutes
2025-09-24 09:36:21,583:INFO:SubProcess create_model() called ==================================
2025-09-24 09:36:21,583:INFO:Initializing create_model()
2025-09-24 09:36:21,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:36:21,583:INFO:Checking exceptions
2025-09-24 09:36:21,586:INFO:Importing libraries
2025-09-24 09:36:21,586:INFO:Copying training dataset
2025-09-24 09:36:21,675:INFO:Defining folds
2025-09-24 09:36:21,675:INFO:Declaring metric variables
2025-09-24 09:36:21,687:INFO:Importing untrained model
2025-09-24 09:36:21,699:INFO:K Neighbors Classifier Imported successfully
2025-09-24 09:36:21,717:INFO:Starting cross validation
2025-09-24 09:36:21,732:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:36:46,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,411:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,486:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,520:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,535:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,560:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,577:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,609:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,652:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,663:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,671:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,736:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,795:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:46,821:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:36:47,010:INFO:Calculating mean and std
2025-09-24 09:36:47,010:INFO:Creating metrics dataframe
2025-09-24 09:36:47,010:INFO:Uploading results into container
2025-09-24 09:36:47,026:INFO:Uploading model into container now
2025-09-24 09:36:47,028:INFO:_master_model_container: 2
2025-09-24 09:36:47,030:INFO:_display_container: 2
2025-09-24 09:36:47,030:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-09-24 09:36:47,032:INFO:create_model() successfully completed......................................
2025-09-24 09:36:47,298:INFO:SubProcess create_model() end ==================================
2025-09-24 09:36:47,298:INFO:Creating metrics dataframe
2025-09-24 09:36:47,322:INFO:Initializing Naive Bayes
2025-09-24 09:36:47,322:INFO:Total runtime is 1.1239748915036518 minutes
2025-09-24 09:36:47,328:INFO:SubProcess create_model() called ==================================
2025-09-24 09:36:47,328:INFO:Initializing create_model()
2025-09-24 09:36:47,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:36:47,336:INFO:Checking exceptions
2025-09-24 09:36:47,337:INFO:Importing libraries
2025-09-24 09:36:47,337:INFO:Copying training dataset
2025-09-24 09:36:47,425:INFO:Defining folds
2025-09-24 09:36:47,425:INFO:Declaring metric variables
2025-09-24 09:36:47,452:INFO:Importing untrained model
2025-09-24 09:36:47,462:INFO:Naive Bayes Imported successfully
2025-09-24 09:36:47,492:INFO:Starting cross validation
2025-09-24 09:36:47,504:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:03,692:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,720:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,748:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,748:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,758:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,812:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,835:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,874:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,880:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,890:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,939:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,973:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:03,997:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:04,003:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:04,014:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:04,190:INFO:Calculating mean and std
2025-09-24 09:37:04,198:INFO:Creating metrics dataframe
2025-09-24 09:37:04,210:INFO:Uploading results into container
2025-09-24 09:37:04,212:INFO:Uploading model into container now
2025-09-24 09:37:04,214:INFO:_master_model_container: 3
2025-09-24 09:37:04,216:INFO:_display_container: 2
2025-09-24 09:37:04,217:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-09-24 09:37:04,217:INFO:create_model() successfully completed......................................
2025-09-24 09:37:04,487:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:04,487:INFO:Creating metrics dataframe
2025-09-24 09:37:04,504:INFO:Initializing Decision Tree Classifier
2025-09-24 09:37:04,519:INFO:Total runtime is 1.4106036742528278 minutes
2025-09-24 09:37:04,530:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:04,530:INFO:Initializing create_model()
2025-09-24 09:37:04,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:04,530:INFO:Checking exceptions
2025-09-24 09:37:04,530:INFO:Importing libraries
2025-09-24 09:37:04,530:INFO:Copying training dataset
2025-09-24 09:37:04,611:INFO:Defining folds
2025-09-24 09:37:04,624:INFO:Declaring metric variables
2025-09-24 09:37:04,638:INFO:Importing untrained model
2025-09-24 09:37:04,651:INFO:Decision Tree Classifier Imported successfully
2025-09-24 09:37:04,678:INFO:Starting cross validation
2025-09-24 09:37:04,688:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:07,102:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,109:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,149:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,173:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,224:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,227:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,284:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,299:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,345:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,354:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,403:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:07,420:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:19,445:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:19,547:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:19,652:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:19,805:INFO:Calculating mean and std
2025-09-24 09:37:19,810:INFO:Creating metrics dataframe
2025-09-24 09:37:19,831:INFO:Uploading results into container
2025-09-24 09:37:19,833:INFO:Uploading model into container now
2025-09-24 09:37:19,833:INFO:_master_model_container: 4
2025-09-24 09:37:19,833:INFO:_display_container: 2
2025-09-24 09:37:19,835:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-24 09:37:19,835:INFO:create_model() successfully completed......................................
2025-09-24 09:37:20,096:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:20,096:INFO:Creating metrics dataframe
2025-09-24 09:37:20,122:INFO:Initializing SVM - Linear Kernel
2025-09-24 09:37:20,122:INFO:Total runtime is 1.670645546913147 minutes
2025-09-24 09:37:20,134:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:20,136:INFO:Initializing create_model()
2025-09-24 09:37:20,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:20,136:INFO:Checking exceptions
2025-09-24 09:37:20,136:INFO:Importing libraries
2025-09-24 09:37:20,138:INFO:Copying training dataset
2025-09-24 09:37:20,228:INFO:Defining folds
2025-09-24 09:37:20,231:INFO:Declaring metric variables
2025-09-24 09:37:20,245:INFO:Importing untrained model
2025-09-24 09:37:20,258:INFO:SVM - Linear Kernel Imported successfully
2025-09-24 09:37:20,285:INFO:Starting cross validation
2025-09-24 09:37:20,297:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:26,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:26,272:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:26,375:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:26,493:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:27,561:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:27,608:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:27,680:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:27,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:27,734:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:27,840:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:27,854:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:27,972:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,028:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:28,061:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:28,091:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,109:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,194:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,210:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,299:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,329:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:28,488:INFO:Calculating mean and std
2025-09-24 09:37:28,488:INFO:Creating metrics dataframe
2025-09-24 09:37:28,497:INFO:Uploading results into container
2025-09-24 09:37:28,499:INFO:Uploading model into container now
2025-09-24 09:37:28,500:INFO:_master_model_container: 5
2025-09-24 09:37:28,500:INFO:_display_container: 2
2025-09-24 09:37:28,503:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-09-24 09:37:28,505:INFO:create_model() successfully completed......................................
2025-09-24 09:37:28,751:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:28,751:INFO:Creating metrics dataframe
2025-09-24 09:37:28,780:INFO:Initializing Ridge Classifier
2025-09-24 09:37:28,780:INFO:Total runtime is 1.8149425824483236 minutes
2025-09-24 09:37:28,792:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:28,793:INFO:Initializing create_model()
2025-09-24 09:37:28,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:28,793:INFO:Checking exceptions
2025-09-24 09:37:28,793:INFO:Importing libraries
2025-09-24 09:37:28,793:INFO:Copying training dataset
2025-09-24 09:37:28,890:INFO:Defining folds
2025-09-24 09:37:28,890:INFO:Declaring metric variables
2025-09-24 09:37:28,906:INFO:Importing untrained model
2025-09-24 09:37:28,924:INFO:Ridge Classifier Imported successfully
2025-09-24 09:37:28,950:INFO:Starting cross validation
2025-09-24 09:37:28,965:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:31,274:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:31,278:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:31,296:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:31,321:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,332:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,332:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:31,338:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,353:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:31,373:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,398:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,432:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,441:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,443:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,490:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,506:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,544:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,560:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,603:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,607:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,631:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:31,791:INFO:Calculating mean and std
2025-09-24 09:37:31,794:INFO:Creating metrics dataframe
2025-09-24 09:37:31,801:INFO:Uploading results into container
2025-09-24 09:37:31,804:INFO:Uploading model into container now
2025-09-24 09:37:31,804:INFO:_master_model_container: 6
2025-09-24 09:37:31,804:INFO:_display_container: 2
2025-09-24 09:37:31,804:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-09-24 09:37:31,808:INFO:create_model() successfully completed......................................
2025-09-24 09:37:32,054:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:32,054:INFO:Creating metrics dataframe
2025-09-24 09:37:32,078:INFO:Initializing Random Forest Classifier
2025-09-24 09:37:32,078:INFO:Total runtime is 1.8699068546295166 minutes
2025-09-24 09:37:32,090:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:32,095:INFO:Initializing create_model()
2025-09-24 09:37:32,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:32,095:INFO:Checking exceptions
2025-09-24 09:37:32,096:INFO:Importing libraries
2025-09-24 09:37:32,096:INFO:Copying training dataset
2025-09-24 09:37:32,195:INFO:Defining folds
2025-09-24 09:37:32,195:INFO:Declaring metric variables
2025-09-24 09:37:32,209:INFO:Importing untrained model
2025-09-24 09:37:32,222:INFO:Random Forest Classifier Imported successfully
2025-09-24 09:37:32,247:INFO:Starting cross validation
2025-09-24 09:37:32,266:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:36,687:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,805:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,821:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,845:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,914:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,924:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,924:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:36,956:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,028:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,028:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,044:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,061:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,132:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,163:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:37,322:INFO:Calculating mean and std
2025-09-24 09:37:37,328:INFO:Creating metrics dataframe
2025-09-24 09:37:37,335:INFO:Uploading results into container
2025-09-24 09:37:37,335:INFO:Uploading model into container now
2025-09-24 09:37:37,338:INFO:_master_model_container: 7
2025-09-24 09:37:37,338:INFO:_display_container: 2
2025-09-24 09:37:37,342:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-09-24 09:37:37,347:INFO:create_model() successfully completed......................................
2025-09-24 09:37:37,604:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:37,604:INFO:Creating metrics dataframe
2025-09-24 09:37:37,630:INFO:Initializing Quadratic Discriminant Analysis
2025-09-24 09:37:37,630:INFO:Total runtime is 1.9624435226122539 minutes
2025-09-24 09:37:37,643:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:37,643:INFO:Initializing create_model()
2025-09-24 09:37:37,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:37,643:INFO:Checking exceptions
2025-09-24 09:37:37,643:INFO:Importing libraries
2025-09-24 09:37:37,643:INFO:Copying training dataset
2025-09-24 09:37:37,743:INFO:Defining folds
2025-09-24 09:37:37,743:INFO:Declaring metric variables
2025-09-24 09:37:37,759:INFO:Importing untrained model
2025-09-24 09:37:37,775:INFO:Quadratic Discriminant Analysis Imported successfully
2025-09-24 09:37:37,800:INFO:Starting cross validation
2025-09-24 09:37:37,811:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:39,723:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-24 09:37:39,723:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-24 09:37:39,735:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-24 09:37:39,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-24 09:37:39,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-09-24 09:37:40,510:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:40,558:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,558:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:40,578:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:40,588:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:40,611:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,622:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:40,627:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,640:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,680:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,685:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,729:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,778:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,798:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,802:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,850:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,896:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,909:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:40,922:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:41,109:INFO:Calculating mean and std
2025-09-24 09:37:41,113:INFO:Creating metrics dataframe
2025-09-24 09:37:41,119:INFO:Uploading results into container
2025-09-24 09:37:41,121:INFO:Uploading model into container now
2025-09-24 09:37:41,121:INFO:_master_model_container: 8
2025-09-24 09:37:41,121:INFO:_display_container: 2
2025-09-24 09:37:41,121:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-09-24 09:37:41,126:INFO:create_model() successfully completed......................................
2025-09-24 09:37:41,362:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:41,362:INFO:Creating metrics dataframe
2025-09-24 09:37:41,399:INFO:Initializing Ada Boost Classifier
2025-09-24 09:37:41,399:INFO:Total runtime is 2.0252578457196555 minutes
2025-09-24 09:37:41,410:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:41,413:INFO:Initializing create_model()
2025-09-24 09:37:41,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:41,413:INFO:Checking exceptions
2025-09-24 09:37:41,413:INFO:Importing libraries
2025-09-24 09:37:41,413:INFO:Copying training dataset
2025-09-24 09:37:41,495:INFO:Defining folds
2025-09-24 09:37:41,495:INFO:Declaring metric variables
2025-09-24 09:37:41,521:INFO:Importing untrained model
2025-09-24 09:37:41,533:INFO:Ada Boost Classifier Imported successfully
2025-09-24 09:37:41,558:INFO:Starting cross validation
2025-09-24 09:37:41,572:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:37:43,372:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-24 09:37:43,432:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-24 09:37:43,432:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-24 09:37:43,445:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-24 09:37:43,514:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-09-24 09:37:49,293:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:49,344:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,344:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:49,347:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:49,391:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,393:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,433:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:49,472:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:37:49,475:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,489:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,515:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,519:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,524:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,621:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,625:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,626:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,631:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,631:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,748:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,761:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:37:49,910:INFO:Calculating mean and std
2025-09-24 09:37:49,912:INFO:Creating metrics dataframe
2025-09-24 09:37:49,918:INFO:Uploading results into container
2025-09-24 09:37:49,918:INFO:Uploading model into container now
2025-09-24 09:37:49,918:INFO:_master_model_container: 9
2025-09-24 09:37:49,922:INFO:_display_container: 2
2025-09-24 09:37:49,922:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-09-24 09:37:49,922:INFO:create_model() successfully completed......................................
2025-09-24 09:37:50,167:INFO:SubProcess create_model() end ==================================
2025-09-24 09:37:50,168:INFO:Creating metrics dataframe
2025-09-24 09:37:50,199:INFO:Initializing Gradient Boosting Classifier
2025-09-24 09:37:50,199:INFO:Total runtime is 2.1719378789265953 minutes
2025-09-24 09:37:50,210:INFO:SubProcess create_model() called ==================================
2025-09-24 09:37:50,213:INFO:Initializing create_model()
2025-09-24 09:37:50,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:37:50,213:INFO:Checking exceptions
2025-09-24 09:37:50,213:INFO:Importing libraries
2025-09-24 09:37:50,213:INFO:Copying training dataset
2025-09-24 09:37:50,300:INFO:Defining folds
2025-09-24 09:37:50,300:INFO:Declaring metric variables
2025-09-24 09:37:50,315:INFO:Importing untrained model
2025-09-24 09:37:50,328:INFO:Gradient Boosting Classifier Imported successfully
2025-09-24 09:37:50,353:INFO:Starting cross validation
2025-09-24 09:37:50,364:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:38:39,483:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:39,527:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,660:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,691:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:39,727:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,742:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:39,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:39,784:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,809:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,829:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,843:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,910:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,943:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,974:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:39,977:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:40,017:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:40,046:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:40,062:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:40,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:40,243:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:40,391:INFO:Calculating mean and std
2025-09-24 09:38:40,393:INFO:Creating metrics dataframe
2025-09-24 09:38:40,402:INFO:Uploading results into container
2025-09-24 09:38:40,404:INFO:Uploading model into container now
2025-09-24 09:38:40,405:INFO:_master_model_container: 10
2025-09-24 09:38:40,405:INFO:_display_container: 2
2025-09-24 09:38:40,405:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-09-24 09:38:40,409:INFO:create_model() successfully completed......................................
2025-09-24 09:38:40,664:INFO:SubProcess create_model() end ==================================
2025-09-24 09:38:40,664:INFO:Creating metrics dataframe
2025-09-24 09:38:40,693:INFO:Initializing Linear Discriminant Analysis
2025-09-24 09:38:40,693:INFO:Total runtime is 3.0135026772816977 minutes
2025-09-24 09:38:40,704:INFO:SubProcess create_model() called ==================================
2025-09-24 09:38:40,706:INFO:Initializing create_model()
2025-09-24 09:38:40,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:38:40,706:INFO:Checking exceptions
2025-09-24 09:38:40,706:INFO:Importing libraries
2025-09-24 09:38:40,706:INFO:Copying training dataset
2025-09-24 09:38:40,794:INFO:Defining folds
2025-09-24 09:38:40,804:INFO:Declaring metric variables
2025-09-24 09:38:40,817:INFO:Importing untrained model
2025-09-24 09:38:40,829:INFO:Linear Discriminant Analysis Imported successfully
2025-09-24 09:38:40,854:INFO:Starting cross validation
2025-09-24 09:38:40,867:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:38:43,887:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:43,887:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:43,910:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:43,927:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:43,940:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:43,959:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:43,960:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:43,988:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-09-24 09:38:43,996:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,036:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,038:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,043:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,073:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,113:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,143:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,160:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,163:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,200:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,227:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,260:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:44,416:INFO:Calculating mean and std
2025-09-24 09:38:44,419:INFO:Creating metrics dataframe
2025-09-24 09:38:44,428:INFO:Uploading results into container
2025-09-24 09:38:44,432:INFO:Uploading model into container now
2025-09-24 09:38:44,433:INFO:_master_model_container: 11
2025-09-24 09:38:44,433:INFO:_display_container: 2
2025-09-24 09:38:44,433:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-09-24 09:38:44,433:INFO:create_model() successfully completed......................................
2025-09-24 09:38:44,685:INFO:SubProcess create_model() end ==================================
2025-09-24 09:38:44,685:INFO:Creating metrics dataframe
2025-09-24 09:38:44,717:INFO:Initializing Extra Trees Classifier
2025-09-24 09:38:44,718:INFO:Total runtime is 3.0805762012799582 minutes
2025-09-24 09:38:44,729:INFO:SubProcess create_model() called ==================================
2025-09-24 09:38:44,732:INFO:Initializing create_model()
2025-09-24 09:38:44,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:38:44,734:INFO:Checking exceptions
2025-09-24 09:38:44,734:INFO:Importing libraries
2025-09-24 09:38:44,734:INFO:Copying training dataset
2025-09-24 09:38:44,827:INFO:Defining folds
2025-09-24 09:38:44,827:INFO:Declaring metric variables
2025-09-24 09:38:44,844:INFO:Importing untrained model
2025-09-24 09:38:44,856:INFO:Extra Trees Classifier Imported successfully
2025-09-24 09:38:44,881:INFO:Starting cross validation
2025-09-24 09:38:44,895:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:38:50,227:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,235:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,340:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,356:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,451:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,463:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,477:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,541:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,560:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,627:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,643:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,673:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,732:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,746:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:50,846:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:51,006:INFO:Calculating mean and std
2025-09-24 09:38:51,010:INFO:Creating metrics dataframe
2025-09-24 09:38:51,015:INFO:Uploading results into container
2025-09-24 09:38:51,017:INFO:Uploading model into container now
2025-09-24 09:38:51,019:INFO:_master_model_container: 12
2025-09-24 09:38:51,019:INFO:_display_container: 2
2025-09-24 09:38:51,022:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-09-24 09:38:51,023:INFO:create_model() successfully completed......................................
2025-09-24 09:38:51,286:INFO:SubProcess create_model() end ==================================
2025-09-24 09:38:51,286:INFO:Creating metrics dataframe
2025-09-24 09:38:51,317:INFO:Initializing Extreme Gradient Boosting
2025-09-24 09:38:51,317:INFO:Total runtime is 3.1905703345934553 minutes
2025-09-24 09:38:51,331:INFO:SubProcess create_model() called ==================================
2025-09-24 09:38:51,334:INFO:Initializing create_model()
2025-09-24 09:38:51,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:38:51,336:INFO:Checking exceptions
2025-09-24 09:38:51,336:INFO:Importing libraries
2025-09-24 09:38:51,336:INFO:Copying training dataset
2025-09-24 09:38:51,448:INFO:Defining folds
2025-09-24 09:38:51,448:INFO:Declaring metric variables
2025-09-24 09:38:51,463:INFO:Importing untrained model
2025-09-24 09:38:51,479:INFO:Extreme Gradient Boosting Imported successfully
2025-09-24 09:38:51,509:INFO:Starting cross validation
2025-09-24 09:38:51,523:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:38:57,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,413:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,523:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,530:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,537:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,581:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,630:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,644:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,656:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,664:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,701:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,738:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,761:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,825:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:57,882:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:38:58,025:INFO:Calculating mean and std
2025-09-24 09:38:58,027:INFO:Creating metrics dataframe
2025-09-24 09:38:58,036:INFO:Uploading results into container
2025-09-24 09:38:58,037:INFO:Uploading model into container now
2025-09-24 09:38:58,038:INFO:_master_model_container: 13
2025-09-24 09:38:58,038:INFO:_display_container: 2
2025-09-24 09:38:58,043:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-09-24 09:38:58,043:INFO:create_model() successfully completed......................................
2025-09-24 09:38:58,296:INFO:SubProcess create_model() end ==================================
2025-09-24 09:38:58,296:INFO:Creating metrics dataframe
2025-09-24 09:38:58,330:INFO:Initializing Light Gradient Boosting Machine
2025-09-24 09:38:58,330:INFO:Total runtime is 3.3074446280797325 minutes
2025-09-24 09:38:58,342:INFO:SubProcess create_model() called ==================================
2025-09-24 09:38:58,343:INFO:Initializing create_model()
2025-09-24 09:38:58,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:38:58,344:INFO:Checking exceptions
2025-09-24 09:38:58,344:INFO:Importing libraries
2025-09-24 09:38:58,344:INFO:Copying training dataset
2025-09-24 09:38:58,452:INFO:Defining folds
2025-09-24 09:38:58,454:INFO:Declaring metric variables
2025-09-24 09:38:58,466:INFO:Importing untrained model
2025-09-24 09:38:58,480:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-24 09:38:58,508:INFO:Starting cross validation
2025-09-24 09:38:58,521:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:39:03,589:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,655:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,730:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,761:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,800:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,876:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,935:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,944:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:03,971:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,002:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,064:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,080:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,116:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,179:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,215:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:04,358:INFO:Calculating mean and std
2025-09-24 09:39:04,361:INFO:Creating metrics dataframe
2025-09-24 09:39:04,367:INFO:Uploading results into container
2025-09-24 09:39:04,367:INFO:Uploading model into container now
2025-09-24 09:39:04,367:INFO:_master_model_container: 14
2025-09-24 09:39:04,367:INFO:_display_container: 2
2025-09-24 09:39:04,371:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-09-24 09:39:04,372:INFO:create_model() successfully completed......................................
2025-09-24 09:39:04,619:INFO:SubProcess create_model() end ==================================
2025-09-24 09:39:04,619:INFO:Creating metrics dataframe
2025-09-24 09:39:04,657:INFO:Initializing CatBoost Classifier
2025-09-24 09:39:04,657:INFO:Total runtime is 3.412891002496084 minutes
2025-09-24 09:39:04,668:INFO:SubProcess create_model() called ==================================
2025-09-24 09:39:04,668:INFO:Initializing create_model()
2025-09-24 09:39:04,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:39:04,668:INFO:Checking exceptions
2025-09-24 09:39:04,670:INFO:Importing libraries
2025-09-24 09:39:04,670:INFO:Copying training dataset
2025-09-24 09:39:04,760:INFO:Defining folds
2025-09-24 09:39:04,760:INFO:Declaring metric variables
2025-09-24 09:39:04,773:INFO:Importing untrained model
2025-09-24 09:39:04,789:INFO:CatBoost Classifier Imported successfully
2025-09-24 09:39:04,814:INFO:Starting cross validation
2025-09-24 09:39:04,827:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:39:49,083:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:49,253:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:49,409:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:49,868:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:49,934:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,011:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,045:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,127:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,139:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,178:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,241:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,356:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,410:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,511:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,614:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:50,775:INFO:Calculating mean and std
2025-09-24 09:39:50,780:INFO:Creating metrics dataframe
2025-09-24 09:39:50,789:INFO:Uploading results into container
2025-09-24 09:39:50,790:INFO:Uploading model into container now
2025-09-24 09:39:50,792:INFO:_master_model_container: 15
2025-09-24 09:39:50,792:INFO:_display_container: 2
2025-09-24 09:39:50,792:INFO:<catboost.core.CatBoostClassifier object at 0x00000258987E97B0>
2025-09-24 09:39:50,792:INFO:create_model() successfully completed......................................
2025-09-24 09:39:51,067:INFO:SubProcess create_model() end ==================================
2025-09-24 09:39:51,069:INFO:Creating metrics dataframe
2025-09-24 09:39:51,105:INFO:Initializing Dummy Classifier
2025-09-24 09:39:51,105:INFO:Total runtime is 4.187023707230886 minutes
2025-09-24 09:39:51,119:INFO:SubProcess create_model() called ==================================
2025-09-24 09:39:51,119:INFO:Initializing create_model()
2025-09-24 09:39:51,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000258A7086F20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:39:51,121:INFO:Checking exceptions
2025-09-24 09:39:51,121:INFO:Importing libraries
2025-09-24 09:39:51,121:INFO:Copying training dataset
2025-09-24 09:39:51,278:INFO:Defining folds
2025-09-24 09:39:51,284:INFO:Declaring metric variables
2025-09-24 09:39:51,299:INFO:Importing untrained model
2025-09-24 09:39:51,310:INFO:Dummy Classifier Imported successfully
2025-09-24 09:39:51,338:INFO:Starting cross validation
2025-09-24 09:39:51,352:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-09-24 09:39:53,583:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,589:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,597:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,617:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,701:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,711:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,714:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,742:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,742:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,772:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-24 09:39:53,800:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-24 09:39:53,816:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-24 09:39:53,816:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-24 09:39:53,828:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,839:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,847:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,864:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,864:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:53,936:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-09-24 09:39:53,977:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-09-24 09:39:54,127:INFO:Calculating mean and std
2025-09-24 09:39:54,128:INFO:Creating metrics dataframe
2025-09-24 09:39:54,134:INFO:Uploading results into container
2025-09-24 09:39:54,136:INFO:Uploading model into container now
2025-09-24 09:39:54,136:INFO:_master_model_container: 16
2025-09-24 09:39:54,139:INFO:_display_container: 2
2025-09-24 09:39:54,139:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-09-24 09:39:54,140:INFO:create_model() successfully completed......................................
2025-09-24 09:39:54,393:INFO:SubProcess create_model() end ==================================
2025-09-24 09:39:54,393:INFO:Creating metrics dataframe
2025-09-24 09:39:54,433:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-24 09:39:54,473:INFO:Initializing create_model()
2025-09-24 09:39:54,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-24 09:39:54,475:INFO:Checking exceptions
2025-09-24 09:39:54,480:INFO:Importing libraries
2025-09-24 09:39:54,480:INFO:Copying training dataset
2025-09-24 09:39:54,588:INFO:Defining folds
2025-09-24 09:39:54,588:INFO:Declaring metric variables
2025-09-24 09:39:54,588:INFO:Importing untrained model
2025-09-24 09:39:54,590:INFO:Declaring custom model
2025-09-24 09:39:54,591:INFO:Decision Tree Classifier Imported successfully
2025-09-24 09:39:54,597:INFO:Cross validation set to False
2025-09-24 09:39:54,597:INFO:Fitting Model
2025-09-24 09:39:56,178:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-24 09:39:56,178:INFO:create_model() successfully completed......................................
2025-09-24 09:39:56,561:INFO:_master_model_container: 16
2025-09-24 09:39:56,561:INFO:_display_container: 2
2025-09-24 09:39:56,563:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-09-24 09:39:56,563:INFO:compare_models() successfully completed......................................
2025-09-24 09:39:56,567:INFO:Initializing plot_model()
2025-09-24 09:39:56,567:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, system=True)
2025-09-24 09:39:56,567:INFO:Checking exceptions
2025-09-24 09:39:56,613:INFO:Preloading libraries
2025-09-24 09:39:56,616:INFO:Copying training dataset
2025-09-24 09:39:56,616:INFO:Plot type: confusion_matrix
2025-09-24 09:39:57,348:INFO:Fitting Model
2025-09-24 09:39:57,348:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names

2025-09-24 09:39:57,348:INFO:Scoring test/hold-out set
2025-09-24 09:39:57,868:INFO:Visual Rendered Successfully
2025-09-24 09:39:58,114:INFO:plot_model() successfully completed......................................
2025-09-24 09:39:58,114:INFO:Initializing plot_model()
2025-09-24 09:39:58,114:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, system=True)
2025-09-24 09:39:58,114:INFO:Checking exceptions
2025-09-24 09:39:58,155:INFO:Preloading libraries
2025-09-24 09:39:58,155:INFO:Copying training dataset
2025-09-24 09:39:58,155:INFO:Plot type: feature
2025-09-24 09:39:58,161:WARNING:No coef_ found. Trying feature_importances_
2025-09-24 09:39:58,862:INFO:Visual Rendered Successfully
2025-09-24 09:39:59,122:INFO:plot_model() successfully completed......................................
2025-09-24 09:39:59,127:INFO:Initializing predict_model()
2025-09-24 09:39:59,128:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000258F6037EB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000258A6F836D0>)
2025-09-24 09:39:59,128:INFO:Checking exceptions
2025-09-24 09:39:59,128:INFO:Preloading libraries
2025-09-24 09:39:59,768:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-24 09:40:00,051:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-24 09:40:00,285:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'premium') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-09-27 18:51:15,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 18:51:15,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 18:51:15,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 18:51:15,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 18:51:16,089:INFO:PyCaret RegressionExperiment
2025-09-27 18:51:16,089:INFO:Logging name: reg-default-name
2025-09-27 18:51:16,089:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-27 18:51:16,089:INFO:version 3.3.2
2025-09-27 18:51:16,089:INFO:Initializing setup()
2025-09-27 18:51:16,089:INFO:self.USI: 267e
2025-09-27 18:51:16,089:INFO:self._variable_keys: {'exp_name_log', 'target_param', 'seed', 'y_test', 'gpu_param', 'idx', 'X_test', 'html_param', 'transform_target_param', 'n_jobs_param', 'pipeline', 'logging_param', '_ml_usecase', 'log_plots_param', '_available_plots', 'fold_generator', 'X', 'data', 'gpu_n_jobs_param', 'X_train', 'fold_shuffle_param', 'y', 'fold_groups_param', 'USI', 'memory', 'exp_id', 'y_train'}
2025-09-27 18:51:16,089:INFO:Checking environment
2025-09-27 18:51:16,089:INFO:python_version: 3.10.18
2025-09-27 18:51:16,089:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-27 18:51:16,089:INFO:machine: AMD64
2025-09-27 18:51:16,089:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-27 18:51:16,091:INFO:Memory: svmem(total=16486035456, available=7667650560, percent=53.5, used=8818384896, free=7667650560)
2025-09-27 18:51:16,091:INFO:Physical Core: 8
2025-09-27 18:51:16,091:INFO:Logical Core: 16
2025-09-27 18:51:16,091:INFO:Checking libraries
2025-09-27 18:51:16,091:INFO:System:
2025-09-27 18:51:16,091:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-27 18:51:16,091:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-27 18:51:16,091:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-27 18:51:16,091:INFO:PyCaret required dependencies:
2025-09-27 18:51:17,921:INFO:                 pip: 25.2
2025-09-27 18:51:17,921:INFO:          setuptools: 78.1.1
2025-09-27 18:51:17,922:INFO:             pycaret: 3.3.2
2025-09-27 18:51:17,922:INFO:             IPython: 8.37.0
2025-09-27 18:51:17,922:INFO:          ipywidgets: 8.1.7
2025-09-27 18:51:17,922:INFO:                tqdm: 4.67.1
2025-09-27 18:51:17,922:INFO:               numpy: 1.26.4
2025-09-27 18:51:17,922:INFO:              pandas: 2.1.4
2025-09-27 18:51:17,922:INFO:              jinja2: 3.1.6
2025-09-27 18:51:17,922:INFO:               scipy: 1.11.4
2025-09-27 18:51:17,922:INFO:              joblib: 1.3.2
2025-09-27 18:51:17,922:INFO:             sklearn: 1.4.2
2025-09-27 18:51:17,922:INFO:                pyod: 2.0.5
2025-09-27 18:51:17,922:INFO:            imblearn: 0.14.0
2025-09-27 18:51:17,922:INFO:   category_encoders: 2.7.0
2025-09-27 18:51:17,923:INFO:            lightgbm: 4.6.0
2025-09-27 18:51:17,923:INFO:               numba: 0.61.0
2025-09-27 18:51:17,923:INFO:            requests: 2.32.5
2025-09-27 18:51:17,923:INFO:          matplotlib: 3.7.5
2025-09-27 18:51:17,923:INFO:          scikitplot: 0.3.7
2025-09-27 18:51:17,923:INFO:         yellowbrick: 1.5
2025-09-27 18:51:17,923:INFO:              plotly: 5.24.1
2025-09-27 18:51:17,923:INFO:    plotly-resampler: Not installed
2025-09-27 18:51:17,923:INFO:             kaleido: 1.1.0
2025-09-27 18:51:17,923:INFO:           schemdraw: 0.15
2025-09-27 18:51:17,923:INFO:         statsmodels: 0.14.5
2025-09-27 18:51:17,923:INFO:              sktime: 0.26.0
2025-09-27 18:51:17,923:INFO:               tbats: 1.1.3
2025-09-27 18:51:17,923:INFO:            pmdarima: 2.0.4
2025-09-27 18:51:17,923:INFO:              psutil: 7.1.0
2025-09-27 18:51:17,924:INFO:          markupsafe: 3.0.2
2025-09-27 18:51:17,924:INFO:             pickle5: Not installed
2025-09-27 18:51:17,924:INFO:         cloudpickle: 3.1.1
2025-09-27 18:51:17,924:INFO:         deprecation: 2.1.0
2025-09-27 18:51:17,924:INFO:              xxhash: 3.5.0
2025-09-27 18:51:17,924:INFO:           wurlitzer: Not installed
2025-09-27 18:51:17,924:INFO:PyCaret optional dependencies:
2025-09-27 18:51:27,834:INFO:                shap: 0.44.1
2025-09-27 18:51:27,834:INFO:           interpret: 0.7.2
2025-09-27 18:51:27,834:INFO:                umap: 0.5.7
2025-09-27 18:51:27,834:INFO:     ydata_profiling: 4.16.1
2025-09-27 18:51:27,834:INFO:  explainerdashboard: 0.5.1
2025-09-27 18:51:27,834:INFO:             autoviz: Not installed
2025-09-27 18:51:27,834:INFO:           fairlearn: 0.7.0
2025-09-27 18:51:27,834:INFO:          deepchecks: Not installed
2025-09-27 18:51:27,834:INFO:             xgboost: 3.0.5
2025-09-27 18:51:27,835:INFO:            catboost: 1.2.8
2025-09-27 18:51:27,835:INFO:              kmodes: 0.12.2
2025-09-27 18:51:27,835:INFO:             mlxtend: 0.23.4
2025-09-27 18:51:27,835:INFO:       statsforecast: 1.5.0
2025-09-27 18:51:27,835:INFO:        tune_sklearn: Not installed
2025-09-27 18:51:27,835:INFO:                 ray: Not installed
2025-09-27 18:51:27,835:INFO:            hyperopt: 0.2.7
2025-09-27 18:51:27,835:INFO:              optuna: 4.5.0
2025-09-27 18:51:27,835:INFO:               skopt: 0.10.2
2025-09-27 18:51:27,835:INFO:              mlflow: 3.4.0
2025-09-27 18:51:27,835:INFO:              gradio: 5.46.1
2025-09-27 18:51:27,835:INFO:             fastapi: 0.117.1
2025-09-27 18:51:27,835:INFO:             uvicorn: 0.36.0
2025-09-27 18:51:27,835:INFO:              m2cgen: 0.10.0
2025-09-27 18:51:27,835:INFO:           evidently: 0.4.40
2025-09-27 18:51:27,835:INFO:               fugue: 0.8.7
2025-09-27 18:51:27,835:INFO:           streamlit: Not installed
2025-09-27 18:51:27,835:INFO:             prophet: Not installed
2025-09-27 18:51:27,835:INFO:None
2025-09-27 18:51:27,835:INFO:Set up data.
2025-09-27 18:51:27,871:INFO:Set up folding strategy.
2025-09-27 18:51:27,872:INFO:Set up train/test split.
2025-09-27 18:51:27,888:INFO:Set up index.
2025-09-27 18:51:27,891:INFO:Assigning column types.
2025-09-27 18:51:27,897:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-27 18:51:27,898:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 18:51:27,904:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 18:51:27,912:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,018:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,081:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,083:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:28,086:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:28,244:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,250:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,256:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,343:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,403:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:28,408:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:28,409:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-27 18:51:28,415:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,423:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,509:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,575:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:28,578:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:28,585:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,592:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,684:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,747:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:28,751:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:28,752:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-27 18:51:28,765:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:28,917:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:28,921:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:28,935:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,023:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,085:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:29,089:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:29,090:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-27 18:51:29,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,251:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:29,254:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:29,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,416:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,417:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:29,420:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:29,421:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-27 18:51:29,521:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,586:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:29,590:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:29,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 18:51:29,768:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:29,772:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:29,774:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-27 18:51:29,963:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:29,968:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:30,145:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:30,149:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:30,157:INFO:Preparing preprocessing pipeline...
2025-09-27 18:51:30,158:INFO:Set up simple imputation.
2025-09-27 18:51:30,167:INFO:Set up encoding of categorical features.
2025-09-27 18:51:30,464:INFO:Finished creating preprocessing pipeline.
2025-09-27 18:51:30,473:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-09-27 18:51:30,473:INFO:Creating final display dataframe.
2025-09-27 18:51:31,030:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          personas
2                   Target type        Regression
3           Original data shape       (50000, 11)
4        Transformed data shape       (50000, 29)
5   Transformed train set shape       (35000, 29)
6    Transformed test set shape       (15000, 29)
7              Numeric features                 7
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator        GroupKFold
16                  Fold Number                 5
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              267e
2025-09-27 18:51:31,192:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:31,200:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:31,361:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 18:51:31,372:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 18:51:31,373:INFO:setup() successfully completed in 15.32s...............
2025-09-27 18:51:31,373:INFO:Initializing compare_models()
2025-09-27 18:51:31,373:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-09-27 18:51:31,373:INFO:Checking exceptions
2025-09-27 18:51:31,387:INFO:Preparing display monitor
2025-09-27 18:51:31,441:INFO:Initializing Linear Regression
2025-09-27 18:51:31,441:INFO:Total runtime is 0.0 minutes
2025-09-27 18:51:31,452:INFO:SubProcess create_model() called ==================================
2025-09-27 18:51:31,456:INFO:Initializing create_model()
2025-09-27 18:51:31,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=lr, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:51:31,456:INFO:Checking exceptions
2025-09-27 18:51:31,456:INFO:Importing libraries
2025-09-27 18:51:31,456:INFO:Copying training dataset
2025-09-27 18:51:31,497:INFO:Defining folds
2025-09-27 18:51:31,497:INFO:Declaring metric variables
2025-09-27 18:51:31,507:INFO:Importing untrained model
2025-09-27 18:51:31,514:INFO:Linear Regression Imported successfully
2025-09-27 18:51:31,534:INFO:Starting cross validation
2025-09-27 18:51:31,549:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:51:40,454:INFO:Calculating mean and std
2025-09-27 18:51:40,457:INFO:Creating metrics dataframe
2025-09-27 18:51:40,462:INFO:Uploading results into container
2025-09-27 18:51:40,465:INFO:Uploading model into container now
2025-09-27 18:51:40,467:INFO:_master_model_container: 1
2025-09-27 18:51:40,467:INFO:_display_container: 2
2025-09-27 18:51:40,468:INFO:LinearRegression(n_jobs=-1)
2025-09-27 18:51:40,468:INFO:create_model() successfully completed......................................
2025-09-27 18:51:40,748:INFO:SubProcess create_model() end ==================================
2025-09-27 18:51:40,748:INFO:Creating metrics dataframe
2025-09-27 18:51:40,764:INFO:Initializing Lasso Regression
2025-09-27 18:51:40,764:INFO:Total runtime is 0.15538841088612873 minutes
2025-09-27 18:51:40,764:INFO:SubProcess create_model() called ==================================
2025-09-27 18:51:40,764:INFO:Initializing create_model()
2025-09-27 18:51:40,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=lasso, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:51:40,764:INFO:Checking exceptions
2025-09-27 18:51:40,764:INFO:Importing libraries
2025-09-27 18:51:40,764:INFO:Copying training dataset
2025-09-27 18:51:40,796:INFO:Defining folds
2025-09-27 18:51:40,796:INFO:Declaring metric variables
2025-09-27 18:51:40,796:INFO:Importing untrained model
2025-09-27 18:51:40,810:INFO:Lasso Regression Imported successfully
2025-09-27 18:51:40,826:INFO:Starting cross validation
2025-09-27 18:51:40,830:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:51:48,178:INFO:Calculating mean and std
2025-09-27 18:51:48,181:INFO:Creating metrics dataframe
2025-09-27 18:51:48,183:INFO:Uploading results into container
2025-09-27 18:51:48,185:INFO:Uploading model into container now
2025-09-27 18:51:48,185:INFO:_master_model_container: 2
2025-09-27 18:51:48,185:INFO:_display_container: 2
2025-09-27 18:51:48,185:INFO:Lasso(random_state=42)
2025-09-27 18:51:48,185:INFO:create_model() successfully completed......................................
2025-09-27 18:51:48,399:INFO:SubProcess create_model() end ==================================
2025-09-27 18:51:48,399:INFO:Creating metrics dataframe
2025-09-27 18:51:48,406:INFO:Initializing Ridge Regression
2025-09-27 18:51:48,406:INFO:Total runtime is 0.28274720509847007 minutes
2025-09-27 18:51:48,416:INFO:SubProcess create_model() called ==================================
2025-09-27 18:51:48,417:INFO:Initializing create_model()
2025-09-27 18:51:48,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=ridge, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:51:48,417:INFO:Checking exceptions
2025-09-27 18:51:48,417:INFO:Importing libraries
2025-09-27 18:51:48,417:INFO:Copying training dataset
2025-09-27 18:51:48,435:INFO:Defining folds
2025-09-27 18:51:48,436:INFO:Declaring metric variables
2025-09-27 18:51:48,445:INFO:Importing untrained model
2025-09-27 18:51:48,453:INFO:Ridge Regression Imported successfully
2025-09-27 18:51:48,469:INFO:Starting cross validation
2025-09-27 18:51:48,473:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:51:55,705:INFO:Calculating mean and std
2025-09-27 18:51:55,706:INFO:Creating metrics dataframe
2025-09-27 18:51:55,708:INFO:Uploading results into container
2025-09-27 18:51:55,708:INFO:Uploading model into container now
2025-09-27 18:51:55,713:INFO:_master_model_container: 3
2025-09-27 18:51:55,713:INFO:_display_container: 2
2025-09-27 18:51:55,713:INFO:Ridge(random_state=42)
2025-09-27 18:51:55,713:INFO:create_model() successfully completed......................................
2025-09-27 18:51:55,910:INFO:SubProcess create_model() end ==================================
2025-09-27 18:51:55,910:INFO:Creating metrics dataframe
2025-09-27 18:51:55,912:INFO:Initializing Elastic Net
2025-09-27 18:51:55,920:INFO:Total runtime is 0.40798631906509397 minutes
2025-09-27 18:51:55,924:INFO:SubProcess create_model() called ==================================
2025-09-27 18:51:55,927:INFO:Initializing create_model()
2025-09-27 18:51:55,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=en, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:51:55,927:INFO:Checking exceptions
2025-09-27 18:51:55,927:INFO:Importing libraries
2025-09-27 18:51:55,928:INFO:Copying training dataset
2025-09-27 18:51:55,945:INFO:Defining folds
2025-09-27 18:51:55,945:INFO:Declaring metric variables
2025-09-27 18:51:55,956:INFO:Importing untrained model
2025-09-27 18:51:55,959:INFO:Elastic Net Imported successfully
2025-09-27 18:51:55,978:INFO:Starting cross validation
2025-09-27 18:51:55,981:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:02,049:INFO:Calculating mean and std
2025-09-27 18:52:02,051:INFO:Creating metrics dataframe
2025-09-27 18:52:02,055:INFO:Uploading results into container
2025-09-27 18:52:02,056:INFO:Uploading model into container now
2025-09-27 18:52:02,057:INFO:_master_model_container: 4
2025-09-27 18:52:02,058:INFO:_display_container: 2
2025-09-27 18:52:02,058:INFO:ElasticNet(random_state=42)
2025-09-27 18:52:02,059:INFO:create_model() successfully completed......................................
2025-09-27 18:52:02,234:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:02,235:INFO:Creating metrics dataframe
2025-09-27 18:52:02,245:INFO:Initializing Least Angle Regression
2025-09-27 18:52:02,246:INFO:Total runtime is 0.5134125590324402 minutes
2025-09-27 18:52:02,251:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:02,253:INFO:Initializing create_model()
2025-09-27 18:52:02,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=lar, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:02,253:INFO:Checking exceptions
2025-09-27 18:52:02,254:INFO:Importing libraries
2025-09-27 18:52:02,254:INFO:Copying training dataset
2025-09-27 18:52:02,271:INFO:Defining folds
2025-09-27 18:52:02,272:INFO:Declaring metric variables
2025-09-27 18:52:02,279:INFO:Importing untrained model
2025-09-27 18:52:02,286:INFO:Least Angle Regression Imported successfully
2025-09-27 18:52:02,299:INFO:Starting cross validation
2025-09-27 18:52:02,304:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:02,713:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.551e-03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,715:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=6.311e-03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,717:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=1.923e-03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,722:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=1.025e-02, with an active set of 27 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,735:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=2.301e-03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,735:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=1.377e-03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,737:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=9.567e-04, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,737:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.699e-03, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,738:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=1.413e-03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,739:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=6.290e-03, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,740:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.311e-03, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,740:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=4.241e-03, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,740:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=6.510e-04, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,741:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=5.479e-04, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,744:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=5.175e-04, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,745:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=3.298e-04, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,746:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=5.604e-06, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,746:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=4.845e-06, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 18:52:02,847:INFO:Calculating mean and std
2025-09-27 18:52:02,849:INFO:Creating metrics dataframe
2025-09-27 18:52:02,851:INFO:Uploading results into container
2025-09-27 18:52:02,852:INFO:Uploading model into container now
2025-09-27 18:52:02,853:INFO:_master_model_container: 5
2025-09-27 18:52:02,853:INFO:_display_container: 2
2025-09-27 18:52:02,854:INFO:Lars(random_state=42)
2025-09-27 18:52:02,854:INFO:create_model() successfully completed......................................
2025-09-27 18:52:03,019:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:03,020:INFO:Creating metrics dataframe
2025-09-27 18:52:03,031:INFO:Initializing Lasso Least Angle Regression
2025-09-27 18:52:03,031:INFO:Total runtime is 0.5264980912208558 minutes
2025-09-27 18:52:03,037:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:03,037:INFO:Initializing create_model()
2025-09-27 18:52:03,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=llar, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:03,038:INFO:Checking exceptions
2025-09-27 18:52:03,038:INFO:Importing libraries
2025-09-27 18:52:03,038:INFO:Copying training dataset
2025-09-27 18:52:03,061:INFO:Defining folds
2025-09-27 18:52:03,061:INFO:Declaring metric variables
2025-09-27 18:52:03,067:INFO:Importing untrained model
2025-09-27 18:52:03,074:INFO:Lasso Least Angle Regression Imported successfully
2025-09-27 18:52:03,086:INFO:Starting cross validation
2025-09-27 18:52:03,089:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:03,598:INFO:Calculating mean and std
2025-09-27 18:52:03,600:INFO:Creating metrics dataframe
2025-09-27 18:52:03,606:INFO:Uploading results into container
2025-09-27 18:52:03,606:INFO:Uploading model into container now
2025-09-27 18:52:03,607:INFO:_master_model_container: 6
2025-09-27 18:52:03,607:INFO:_display_container: 2
2025-09-27 18:52:03,608:INFO:LassoLars(random_state=42)
2025-09-27 18:52:03,609:INFO:create_model() successfully completed......................................
2025-09-27 18:52:03,775:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:03,775:INFO:Creating metrics dataframe
2025-09-27 18:52:03,786:INFO:Initializing Orthogonal Matching Pursuit
2025-09-27 18:52:03,786:INFO:Total runtime is 0.5390878995259604 minutes
2025-09-27 18:52:03,792:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:03,793:INFO:Initializing create_model()
2025-09-27 18:52:03,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=omp, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:03,794:INFO:Checking exceptions
2025-09-27 18:52:03,794:INFO:Importing libraries
2025-09-27 18:52:03,794:INFO:Copying training dataset
2025-09-27 18:52:03,815:INFO:Defining folds
2025-09-27 18:52:03,815:INFO:Declaring metric variables
2025-09-27 18:52:03,822:INFO:Importing untrained model
2025-09-27 18:52:03,828:INFO:Orthogonal Matching Pursuit Imported successfully
2025-09-27 18:52:03,841:INFO:Starting cross validation
2025-09-27 18:52:03,846:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:04,363:INFO:Calculating mean and std
2025-09-27 18:52:04,364:INFO:Creating metrics dataframe
2025-09-27 18:52:04,366:INFO:Uploading results into container
2025-09-27 18:52:04,367:INFO:Uploading model into container now
2025-09-27 18:52:04,368:INFO:_master_model_container: 7
2025-09-27 18:52:04,369:INFO:_display_container: 2
2025-09-27 18:52:04,369:INFO:OrthogonalMatchingPursuit()
2025-09-27 18:52:04,370:INFO:create_model() successfully completed......................................
2025-09-27 18:52:04,536:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:04,536:INFO:Creating metrics dataframe
2025-09-27 18:52:04,547:INFO:Initializing Bayesian Ridge
2025-09-27 18:52:04,548:INFO:Total runtime is 0.5517866810162863 minutes
2025-09-27 18:52:04,554:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:04,555:INFO:Initializing create_model()
2025-09-27 18:52:04,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=br, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:04,556:INFO:Checking exceptions
2025-09-27 18:52:04,556:INFO:Importing libraries
2025-09-27 18:52:04,556:INFO:Copying training dataset
2025-09-27 18:52:04,575:INFO:Defining folds
2025-09-27 18:52:04,577:INFO:Declaring metric variables
2025-09-27 18:52:04,591:INFO:Importing untrained model
2025-09-27 18:52:04,602:INFO:Bayesian Ridge Imported successfully
2025-09-27 18:52:04,614:INFO:Starting cross validation
2025-09-27 18:52:04,616:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:05,195:INFO:Calculating mean and std
2025-09-27 18:52:05,196:INFO:Creating metrics dataframe
2025-09-27 18:52:05,199:INFO:Uploading results into container
2025-09-27 18:52:05,200:INFO:Uploading model into container now
2025-09-27 18:52:05,201:INFO:_master_model_container: 8
2025-09-27 18:52:05,201:INFO:_display_container: 2
2025-09-27 18:52:05,201:INFO:BayesianRidge()
2025-09-27 18:52:05,201:INFO:create_model() successfully completed......................................
2025-09-27 18:52:05,373:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:05,373:INFO:Creating metrics dataframe
2025-09-27 18:52:05,384:INFO:Initializing Passive Aggressive Regressor
2025-09-27 18:52:05,385:INFO:Total runtime is 0.5657362898190816 minutes
2025-09-27 18:52:05,389:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:05,392:INFO:Initializing create_model()
2025-09-27 18:52:05,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=par, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:05,392:INFO:Checking exceptions
2025-09-27 18:52:05,392:INFO:Importing libraries
2025-09-27 18:52:05,392:INFO:Copying training dataset
2025-09-27 18:52:05,410:INFO:Defining folds
2025-09-27 18:52:05,411:INFO:Declaring metric variables
2025-09-27 18:52:05,422:INFO:Importing untrained model
2025-09-27 18:52:05,432:INFO:Passive Aggressive Regressor Imported successfully
2025-09-27 18:52:05,447:INFO:Starting cross validation
2025-09-27 18:52:05,450:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:05,992:INFO:Calculating mean and std
2025-09-27 18:52:05,993:INFO:Creating metrics dataframe
2025-09-27 18:52:05,996:INFO:Uploading results into container
2025-09-27 18:52:05,997:INFO:Uploading model into container now
2025-09-27 18:52:05,998:INFO:_master_model_container: 9
2025-09-27 18:52:05,998:INFO:_display_container: 2
2025-09-27 18:52:05,998:INFO:PassiveAggressiveRegressor(random_state=42)
2025-09-27 18:52:06,000:INFO:create_model() successfully completed......................................
2025-09-27 18:52:06,166:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:06,166:INFO:Creating metrics dataframe
2025-09-27 18:52:06,177:INFO:Initializing Huber Regressor
2025-09-27 18:52:06,178:INFO:Total runtime is 0.578951100508372 minutes
2025-09-27 18:52:06,183:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:06,184:INFO:Initializing create_model()
2025-09-27 18:52:06,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=huber, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:06,185:INFO:Checking exceptions
2025-09-27 18:52:06,185:INFO:Importing libraries
2025-09-27 18:52:06,185:INFO:Copying training dataset
2025-09-27 18:52:06,204:INFO:Defining folds
2025-09-27 18:52:06,205:INFO:Declaring metric variables
2025-09-27 18:52:06,210:INFO:Importing untrained model
2025-09-27 18:52:06,216:INFO:Huber Regressor Imported successfully
2025-09-27 18:52:06,232:INFO:Starting cross validation
2025-09-27 18:52:06,234:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:08,265:INFO:Calculating mean and std
2025-09-27 18:52:08,266:INFO:Creating metrics dataframe
2025-09-27 18:52:08,268:INFO:Uploading results into container
2025-09-27 18:52:08,269:INFO:Uploading model into container now
2025-09-27 18:52:08,270:INFO:_master_model_container: 10
2025-09-27 18:52:08,270:INFO:_display_container: 2
2025-09-27 18:52:08,271:INFO:HuberRegressor()
2025-09-27 18:52:08,271:INFO:create_model() successfully completed......................................
2025-09-27 18:52:08,438:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:08,438:INFO:Creating metrics dataframe
2025-09-27 18:52:08,450:INFO:Initializing K Neighbors Regressor
2025-09-27 18:52:08,450:INFO:Total runtime is 0.616815984249115 minutes
2025-09-27 18:52:08,456:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:08,458:INFO:Initializing create_model()
2025-09-27 18:52:08,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=knn, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:08,458:INFO:Checking exceptions
2025-09-27 18:52:08,458:INFO:Importing libraries
2025-09-27 18:52:08,458:INFO:Copying training dataset
2025-09-27 18:52:08,478:INFO:Defining folds
2025-09-27 18:52:08,478:INFO:Declaring metric variables
2025-09-27 18:52:08,484:INFO:Importing untrained model
2025-09-27 18:52:08,490:INFO:K Neighbors Regressor Imported successfully
2025-09-27 18:52:08,503:INFO:Starting cross validation
2025-09-27 18:52:08,506:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:10,384:INFO:Calculating mean and std
2025-09-27 18:52:10,385:INFO:Creating metrics dataframe
2025-09-27 18:52:10,389:INFO:Uploading results into container
2025-09-27 18:52:10,389:INFO:Uploading model into container now
2025-09-27 18:52:10,389:INFO:_master_model_container: 11
2025-09-27 18:52:10,389:INFO:_display_container: 2
2025-09-27 18:52:10,392:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 18:52:10,393:INFO:create_model() successfully completed......................................
2025-09-27 18:52:10,557:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:10,557:INFO:Creating metrics dataframe
2025-09-27 18:52:10,573:INFO:Initializing Decision Tree Regressor
2025-09-27 18:52:10,575:INFO:Total runtime is 0.6522352774937947 minutes
2025-09-27 18:52:10,579:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:10,579:INFO:Initializing create_model()
2025-09-27 18:52:10,579:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=dt, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:10,579:INFO:Checking exceptions
2025-09-27 18:52:10,579:INFO:Importing libraries
2025-09-27 18:52:10,579:INFO:Copying training dataset
2025-09-27 18:52:10,598:INFO:Defining folds
2025-09-27 18:52:10,598:INFO:Declaring metric variables
2025-09-27 18:52:10,610:INFO:Importing untrained model
2025-09-27 18:52:10,619:INFO:Decision Tree Regressor Imported successfully
2025-09-27 18:52:10,630:INFO:Starting cross validation
2025-09-27 18:52:10,638:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:11,207:INFO:Calculating mean and std
2025-09-27 18:52:11,209:INFO:Creating metrics dataframe
2025-09-27 18:52:11,213:INFO:Uploading results into container
2025-09-27 18:52:11,213:INFO:Uploading model into container now
2025-09-27 18:52:11,214:INFO:_master_model_container: 12
2025-09-27 18:52:11,214:INFO:_display_container: 2
2025-09-27 18:52:11,215:INFO:DecisionTreeRegressor(random_state=42)
2025-09-27 18:52:11,216:INFO:create_model() successfully completed......................................
2025-09-27 18:52:11,391:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:11,392:INFO:Creating metrics dataframe
2025-09-27 18:52:11,405:INFO:Initializing Random Forest Regressor
2025-09-27 18:52:11,405:INFO:Total runtime is 0.6660608649253845 minutes
2025-09-27 18:52:11,412:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:11,413:INFO:Initializing create_model()
2025-09-27 18:52:11,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=rf, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:11,413:INFO:Checking exceptions
2025-09-27 18:52:11,413:INFO:Importing libraries
2025-09-27 18:52:11,414:INFO:Copying training dataset
2025-09-27 18:52:11,434:INFO:Defining folds
2025-09-27 18:52:11,435:INFO:Declaring metric variables
2025-09-27 18:52:11,443:INFO:Importing untrained model
2025-09-27 18:52:11,450:INFO:Random Forest Regressor Imported successfully
2025-09-27 18:52:11,466:INFO:Starting cross validation
2025-09-27 18:52:11,469:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:13,828:INFO:Calculating mean and std
2025-09-27 18:52:13,830:INFO:Creating metrics dataframe
2025-09-27 18:52:13,833:INFO:Uploading results into container
2025-09-27 18:52:13,833:INFO:Uploading model into container now
2025-09-27 18:52:13,834:INFO:_master_model_container: 13
2025-09-27 18:52:13,834:INFO:_display_container: 2
2025-09-27 18:52:13,835:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-09-27 18:52:13,835:INFO:create_model() successfully completed......................................
2025-09-27 18:52:14,015:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:14,015:INFO:Creating metrics dataframe
2025-09-27 18:52:14,029:INFO:Initializing Extra Trees Regressor
2025-09-27 18:52:14,029:INFO:Total runtime is 0.7097945610682169 minutes
2025-09-27 18:52:14,034:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:14,036:INFO:Initializing create_model()
2025-09-27 18:52:14,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=et, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:14,037:INFO:Checking exceptions
2025-09-27 18:52:14,037:INFO:Importing libraries
2025-09-27 18:52:14,037:INFO:Copying training dataset
2025-09-27 18:52:14,059:INFO:Defining folds
2025-09-27 18:52:14,060:INFO:Declaring metric variables
2025-09-27 18:52:14,068:INFO:Importing untrained model
2025-09-27 18:52:14,077:INFO:Extra Trees Regressor Imported successfully
2025-09-27 18:52:14,091:INFO:Starting cross validation
2025-09-27 18:52:14,095:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:16,459:INFO:Calculating mean and std
2025-09-27 18:52:16,459:INFO:Creating metrics dataframe
2025-09-27 18:52:16,462:INFO:Uploading results into container
2025-09-27 18:52:16,462:INFO:Uploading model into container now
2025-09-27 18:52:16,462:INFO:_master_model_container: 14
2025-09-27 18:52:16,462:INFO:_display_container: 2
2025-09-27 18:52:16,462:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 18:52:16,462:INFO:create_model() successfully completed......................................
2025-09-27 18:52:16,629:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:16,629:INFO:Creating metrics dataframe
2025-09-27 18:52:16,646:INFO:Initializing AdaBoost Regressor
2025-09-27 18:52:16,646:INFO:Total runtime is 0.7534185846646626 minutes
2025-09-27 18:52:16,655:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:16,658:INFO:Initializing create_model()
2025-09-27 18:52:16,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=ada, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:16,658:INFO:Checking exceptions
2025-09-27 18:52:16,658:INFO:Importing libraries
2025-09-27 18:52:16,658:INFO:Copying training dataset
2025-09-27 18:52:16,674:INFO:Defining folds
2025-09-27 18:52:16,674:INFO:Declaring metric variables
2025-09-27 18:52:16,680:INFO:Importing untrained model
2025-09-27 18:52:16,696:INFO:AdaBoost Regressor Imported successfully
2025-09-27 18:52:16,705:INFO:Starting cross validation
2025-09-27 18:52:16,712:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:18,015:INFO:Calculating mean and std
2025-09-27 18:52:18,015:INFO:Creating metrics dataframe
2025-09-27 18:52:18,015:INFO:Uploading results into container
2025-09-27 18:52:18,015:INFO:Uploading model into container now
2025-09-27 18:52:18,015:INFO:_master_model_container: 15
2025-09-27 18:52:18,015:INFO:_display_container: 2
2025-09-27 18:52:18,015:INFO:AdaBoostRegressor(random_state=42)
2025-09-27 18:52:18,015:INFO:create_model() successfully completed......................................
2025-09-27 18:52:18,183:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:18,183:INFO:Creating metrics dataframe
2025-09-27 18:52:18,199:INFO:Initializing Gradient Boosting Regressor
2025-09-27 18:52:18,199:INFO:Total runtime is 0.7793053269386291 minutes
2025-09-27 18:52:18,199:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:18,199:INFO:Initializing create_model()
2025-09-27 18:52:18,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=gbr, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:18,199:INFO:Checking exceptions
2025-09-27 18:52:18,199:INFO:Importing libraries
2025-09-27 18:52:18,199:INFO:Copying training dataset
2025-09-27 18:52:18,215:INFO:Defining folds
2025-09-27 18:52:18,215:INFO:Declaring metric variables
2025-09-27 18:52:18,239:INFO:Importing untrained model
2025-09-27 18:52:18,250:INFO:Gradient Boosting Regressor Imported successfully
2025-09-27 18:52:18,272:INFO:Starting cross validation
2025-09-27 18:52:18,272:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:21,314:INFO:Calculating mean and std
2025-09-27 18:52:21,316:INFO:Creating metrics dataframe
2025-09-27 18:52:21,318:INFO:Uploading results into container
2025-09-27 18:52:21,319:INFO:Uploading model into container now
2025-09-27 18:52:21,321:INFO:_master_model_container: 16
2025-09-27 18:52:21,321:INFO:_display_container: 2
2025-09-27 18:52:21,321:INFO:GradientBoostingRegressor(random_state=42)
2025-09-27 18:52:21,322:INFO:create_model() successfully completed......................................
2025-09-27 18:52:21,503:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:21,503:INFO:Creating metrics dataframe
2025-09-27 18:52:21,519:INFO:Initializing Extreme Gradient Boosting
2025-09-27 18:52:21,519:INFO:Total runtime is 0.8346375346183776 minutes
2025-09-27 18:52:21,526:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:21,527:INFO:Initializing create_model()
2025-09-27 18:52:21,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=xgboost, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:21,528:INFO:Checking exceptions
2025-09-27 18:52:21,528:INFO:Importing libraries
2025-09-27 18:52:21,528:INFO:Copying training dataset
2025-09-27 18:52:21,545:INFO:Defining folds
2025-09-27 18:52:21,546:INFO:Declaring metric variables
2025-09-27 18:52:21,552:INFO:Importing untrained model
2025-09-27 18:52:21,561:INFO:Extreme Gradient Boosting Imported successfully
2025-09-27 18:52:21,577:INFO:Starting cross validation
2025-09-27 18:52:21,580:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:22,653:INFO:Calculating mean and std
2025-09-27 18:52:22,656:INFO:Creating metrics dataframe
2025-09-27 18:52:22,660:INFO:Uploading results into container
2025-09-27 18:52:22,661:INFO:Uploading model into container now
2025-09-27 18:52:22,661:INFO:_master_model_container: 17
2025-09-27 18:52:22,662:INFO:_display_container: 2
2025-09-27 18:52:22,663:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-27 18:52:22,664:INFO:create_model() successfully completed......................................
2025-09-27 18:52:22,832:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:22,832:INFO:Creating metrics dataframe
2025-09-27 18:52:22,849:INFO:Initializing Light Gradient Boosting Machine
2025-09-27 18:52:22,849:INFO:Total runtime is 0.856797711054484 minutes
2025-09-27 18:52:22,855:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:22,857:INFO:Initializing create_model()
2025-09-27 18:52:22,857:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=lightgbm, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:22,857:INFO:Checking exceptions
2025-09-27 18:52:22,857:INFO:Importing libraries
2025-09-27 18:52:22,857:INFO:Copying training dataset
2025-09-27 18:52:22,881:INFO:Defining folds
2025-09-27 18:52:22,881:INFO:Declaring metric variables
2025-09-27 18:52:22,893:INFO:Importing untrained model
2025-09-27 18:52:22,899:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-27 18:52:22,909:INFO:Starting cross validation
2025-09-27 18:52:22,915:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:23,956:INFO:Calculating mean and std
2025-09-27 18:52:23,957:INFO:Creating metrics dataframe
2025-09-27 18:52:23,961:INFO:Uploading results into container
2025-09-27 18:52:23,961:INFO:Uploading model into container now
2025-09-27 18:52:23,961:INFO:_master_model_container: 18
2025-09-27 18:52:23,961:INFO:_display_container: 2
2025-09-27 18:52:23,964:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-09-27 18:52:23,964:INFO:create_model() successfully completed......................................
2025-09-27 18:52:24,141:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:24,141:INFO:Creating metrics dataframe
2025-09-27 18:52:24,158:INFO:Initializing CatBoost Regressor
2025-09-27 18:52:24,168:INFO:Total runtime is 0.8787900765736897 minutes
2025-09-27 18:52:24,174:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:24,176:INFO:Initializing create_model()
2025-09-27 18:52:24,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=catboost, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:24,176:INFO:Checking exceptions
2025-09-27 18:52:24,176:INFO:Importing libraries
2025-09-27 18:52:24,176:INFO:Copying training dataset
2025-09-27 18:52:24,196:INFO:Defining folds
2025-09-27 18:52:24,196:INFO:Declaring metric variables
2025-09-27 18:52:24,210:INFO:Importing untrained model
2025-09-27 18:52:24,222:INFO:CatBoost Regressor Imported successfully
2025-09-27 18:52:24,234:INFO:Starting cross validation
2025-09-27 18:52:24,241:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:34,184:INFO:Calculating mean and std
2025-09-27 18:52:34,184:INFO:Creating metrics dataframe
2025-09-27 18:52:34,188:INFO:Uploading results into container
2025-09-27 18:52:34,189:INFO:Uploading model into container now
2025-09-27 18:52:34,191:INFO:_master_model_container: 19
2025-09-27 18:52:34,191:INFO:_display_container: 2
2025-09-27 18:52:34,191:INFO:<catboost.core.CatBoostRegressor object at 0x000002493FCCFA00>
2025-09-27 18:52:34,191:INFO:create_model() successfully completed......................................
2025-09-27 18:52:34,367:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:34,367:INFO:Creating metrics dataframe
2025-09-27 18:52:34,376:INFO:Initializing Dummy Regressor
2025-09-27 18:52:34,383:INFO:Total runtime is 1.0490319927533467 minutes
2025-09-27 18:52:34,388:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:34,388:INFO:Initializing create_model()
2025-09-27 18:52:34,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=dummy, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FCCDF30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:34,391:INFO:Checking exceptions
2025-09-27 18:52:34,391:INFO:Importing libraries
2025-09-27 18:52:34,391:INFO:Copying training dataset
2025-09-27 18:52:34,425:INFO:Defining folds
2025-09-27 18:52:34,425:INFO:Declaring metric variables
2025-09-27 18:52:34,433:INFO:Importing untrained model
2025-09-27 18:52:34,439:INFO:Dummy Regressor Imported successfully
2025-09-27 18:52:34,447:INFO:Starting cross validation
2025-09-27 18:52:34,458:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:34,932:INFO:Calculating mean and std
2025-09-27 18:52:34,935:INFO:Creating metrics dataframe
2025-09-27 18:52:34,938:INFO:Uploading results into container
2025-09-27 18:52:34,939:INFO:Uploading model into container now
2025-09-27 18:52:34,940:INFO:_master_model_container: 20
2025-09-27 18:52:34,940:INFO:_display_container: 2
2025-09-27 18:52:34,941:INFO:DummyRegressor()
2025-09-27 18:52:34,941:INFO:create_model() successfully completed......................................
2025-09-27 18:52:35,114:INFO:SubProcess create_model() end ==================================
2025-09-27 18:52:35,114:INFO:Creating metrics dataframe
2025-09-27 18:52:35,131:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-27 18:52:35,148:INFO:Initializing create_model()
2025-09-27 18:52:35,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=HuberRegressor(), fold=GroupKFold(n_splits=5), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:52:35,148:INFO:Checking exceptions
2025-09-27 18:52:35,150:INFO:Importing libraries
2025-09-27 18:52:35,151:INFO:Copying training dataset
2025-09-27 18:52:35,172:INFO:Defining folds
2025-09-27 18:52:35,172:INFO:Declaring metric variables
2025-09-27 18:52:35,172:INFO:Importing untrained model
2025-09-27 18:52:35,172:INFO:Declaring custom model
2025-09-27 18:52:35,173:INFO:Huber Regressor Imported successfully
2025-09-27 18:52:35,175:INFO:Cross validation set to False
2025-09-27 18:52:35,175:INFO:Fitting Model
2025-09-27 18:52:36,220:INFO:HuberRegressor()
2025-09-27 18:52:36,220:INFO:create_model() successfully completed......................................
2025-09-27 18:52:36,458:INFO:_master_model_container: 20
2025-09-27 18:52:36,458:INFO:_display_container: 2
2025-09-27 18:52:36,459:INFO:HuberRegressor()
2025-09-27 18:52:36,459:INFO:compare_models() successfully completed......................................
2025-09-27 18:52:36,467:INFO:Initializing tune_model()
2025-09-27 18:52:36,467:INFO:tune_model(estimator=HuberRegressor(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>)
2025-09-27 18:52:36,467:INFO:Checking exceptions
2025-09-27 18:52:36,500:INFO:Copying training dataset
2025-09-27 18:52:36,518:INFO:Checking base model
2025-09-27 18:52:36,518:INFO:Base model : Huber Regressor
2025-09-27 18:52:36,526:INFO:Declaring metric variables
2025-09-27 18:52:36,533:INFO:Defining Hyperparameters
2025-09-27 18:52:36,756:INFO:Tuning with n_jobs=-1
2025-09-27 18:52:36,756:INFO:Initializing RandomizedSearchCV
2025-09-27 18:52:45,773:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-27 18:52:57,337:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.9, 'actual_estimator__alpha': 0.1}
2025-09-27 18:52:57,338:INFO:Hyperparameter search completed
2025-09-27 18:52:57,338:INFO:SubProcess create_model() called ==================================
2025-09-27 18:52:57,339:INFO:Initializing create_model()
2025-09-27 18:52:57,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=HuberRegressor(), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024935802C50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'epsilon': 1.9, 'alpha': 0.1})
2025-09-27 18:52:57,340:INFO:Checking exceptions
2025-09-27 18:52:57,340:INFO:Importing libraries
2025-09-27 18:52:57,340:INFO:Copying training dataset
2025-09-27 18:52:57,359:INFO:Defining folds
2025-09-27 18:52:57,359:INFO:Declaring metric variables
2025-09-27 18:52:57,364:INFO:Importing untrained model
2025-09-27 18:52:57,365:INFO:Declaring custom model
2025-09-27 18:52:57,371:INFO:Huber Regressor Imported successfully
2025-09-27 18:52:57,384:INFO:Starting cross validation
2025-09-27 18:52:57,387:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:52:59,501:INFO:Calculating mean and std
2025-09-27 18:52:59,503:INFO:Creating metrics dataframe
2025-09-27 18:52:59,510:INFO:Finalizing model
2025-09-27 18:53:00,561:INFO:Uploading results into container
2025-09-27 18:53:00,563:INFO:Uploading model into container now
2025-09-27 18:53:00,564:INFO:_master_model_container: 21
2025-09-27 18:53:00,564:INFO:_display_container: 3
2025-09-27 18:53:00,565:INFO:HuberRegressor(alpha=0.1, epsilon=1.9)
2025-09-27 18:53:00,565:INFO:create_model() successfully completed......................................
2025-09-27 18:53:00,748:INFO:SubProcess create_model() end ==================================
2025-09-27 18:53:00,748:INFO:choose_better activated
2025-09-27 18:53:00,754:INFO:SubProcess create_model() called ==================================
2025-09-27 18:53:00,756:INFO:Initializing create_model()
2025-09-27 18:53:00,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=HuberRegressor(), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
11284    2021
44732    2024
38158    2024
860      2020
15795    2022
Name: anio, Length: 35000, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:53:00,757:INFO:Checking exceptions
2025-09-27 18:53:00,759:INFO:Importing libraries
2025-09-27 18:53:00,759:INFO:Copying training dataset
2025-09-27 18:53:00,774:INFO:Defining folds
2025-09-27 18:53:00,775:INFO:Declaring metric variables
2025-09-27 18:53:00,775:INFO:Importing untrained model
2025-09-27 18:53:00,775:INFO:Declaring custom model
2025-09-27 18:53:00,776:INFO:Huber Regressor Imported successfully
2025-09-27 18:53:00,776:INFO:Starting cross validation
2025-09-27 18:53:00,778:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 18:53:02,666:INFO:Calculating mean and std
2025-09-27 18:53:02,667:INFO:Creating metrics dataframe
2025-09-27 18:53:02,669:INFO:Finalizing model
2025-09-27 18:53:03,642:INFO:Uploading results into container
2025-09-27 18:53:03,643:INFO:Uploading model into container now
2025-09-27 18:53:03,643:INFO:_master_model_container: 22
2025-09-27 18:53:03,643:INFO:_display_container: 4
2025-09-27 18:53:03,644:INFO:HuberRegressor()
2025-09-27 18:53:03,644:INFO:create_model() successfully completed......................................
2025-09-27 18:53:03,811:INFO:SubProcess create_model() end ==================================
2025-09-27 18:53:03,812:INFO:HuberRegressor() result for MAE is 0.1211
2025-09-27 18:53:03,812:INFO:HuberRegressor(alpha=0.1, epsilon=1.9) result for MAE is 0.1209
2025-09-27 18:53:03,812:INFO:HuberRegressor(alpha=0.1, epsilon=1.9) is best model
2025-09-27 18:53:03,812:INFO:choose_better completed
2025-09-27 18:53:03,825:INFO:_master_model_container: 22
2025-09-27 18:53:03,826:INFO:_display_container: 3
2025-09-27 18:53:03,826:INFO:HuberRegressor(alpha=0.1, epsilon=1.9)
2025-09-27 18:53:03,826:INFO:tune_model() successfully completed......................................
2025-09-27 18:53:04,008:INFO:Initializing predict_model()
2025-09-27 18:53:04,008:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002493FC0F6D0>)
2025-09-27 18:53:04,008:INFO:Checking exceptions
2025-09-27 18:53:04,008:INFO:Preloading libraries
2025-09-27 18:53:04,271:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.

2025-09-27 18:53:04,461:INFO:Initializing plot_model()
2025-09-27 18:53:04,462:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, system=True)
2025-09-27 18:53:04,462:INFO:Checking exceptions
2025-09-27 18:53:04,474:INFO:Preloading libraries
2025-09-27 18:53:04,475:INFO:Copying training dataset
2025-09-27 18:53:04,475:INFO:Plot type: residuals
2025-09-27 18:53:04,893:INFO:Fitting Model
2025-09-27 18:53:04,893:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names

2025-09-27 18:53:04,949:INFO:Scoring test/hold-out set
2025-09-27 18:53:07,403:INFO:Visual Rendered Successfully
2025-09-27 18:53:07,600:INFO:plot_model() successfully completed......................................
2025-09-27 18:53:07,601:INFO:Initializing plot_model()
2025-09-27 18:53:07,601:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, system=True)
2025-09-27 18:53:07,601:INFO:Checking exceptions
2025-09-27 18:53:07,611:INFO:Preloading libraries
2025-09-27 18:53:07,612:INFO:Copying training dataset
2025-09-27 18:53:07,612:INFO:Plot type: error
2025-09-27 18:53:07,934:INFO:Fitting Model
2025-09-27 18:53:07,935:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names

2025-09-27 18:53:07,935:INFO:Scoring test/hold-out set
2025-09-27 18:53:08,387:INFO:Visual Rendered Successfully
2025-09-27 18:53:08,563:INFO:plot_model() successfully completed......................................
2025-09-27 18:53:08,564:INFO:Initializing plot_model()
2025-09-27 18:53:08,564:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, system=True)
2025-09-27 18:53:08,564:INFO:Checking exceptions
2025-09-27 18:53:08,576:INFO:Preloading libraries
2025-09-27 18:53:08,578:INFO:Copying training dataset
2025-09-27 18:53:08,579:INFO:Plot type: feature
2025-09-27 18:53:08,886:INFO:Visual Rendered Successfully
2025-09-27 18:53:09,060:INFO:plot_model() successfully completed......................................
2025-09-27 18:53:09,065:INFO:Initializing plot_model()
2025-09-27 18:53:09,065:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, system=True)
2025-09-27 18:53:09,065:INFO:Checking exceptions
2025-09-27 18:53:09,075:INFO:Preloading libraries
2025-09-27 18:53:09,075:INFO:Copying training dataset
2025-09-27 18:53:09,075:INFO:Plot type: learning
2025-09-27 18:53:09,447:INFO:Fitting Model
2025-09-27 18:53:20,306:INFO:Visual Rendered Successfully
2025-09-27 18:53:20,482:INFO:plot_model() successfully completed......................................
2025-09-27 18:53:20,483:INFO:Initializing finalize_model()
2025-09-27 18:53:20,483:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-27 18:53:20,483:INFO:Finalizing HuberRegressor(alpha=0.1, epsilon=1.9)
2025-09-27 18:53:20,495:INFO:Initializing create_model()
2025-09-27 18:53:20,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024933B6C6D0>, estimator=HuberRegressor(alpha=0.1, epsilon=1.9), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=38094    2024
40624    2024
49425    2024
35734    2023
41708    2024
         ... 
15168    2022
49241    2024
39317    2024
42191    2024
15109    2021
Name: anio, Length: 50000, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 18:53:20,495:INFO:Checking exceptions
2025-09-27 18:53:20,497:INFO:Importing libraries
2025-09-27 18:53:20,498:INFO:Copying training dataset
2025-09-27 18:53:20,500:INFO:Defining folds
2025-09-27 18:53:20,500:INFO:Declaring metric variables
2025-09-27 18:53:20,500:INFO:Importing untrained model
2025-09-27 18:53:20,500:INFO:Declaring custom model
2025-09-27 18:53:20,501:INFO:Huber Regressor Imported successfully
2025-09-27 18:53:20,502:INFO:Cross validation set to False
2025-09-27 18:53:20,502:INFO:Fitting Model
2025-09-27 18:53:21,766:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor(alpha=0.1, epsilon=1.9))])
2025-09-27 18:53:21,766:INFO:create_model() successfully completed......................................
2025-09-27 18:53:21,948:INFO:_master_model_container: 22
2025-09-27 18:53:21,948:INFO:_display_container: 4
2025-09-27 18:53:21,960:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor(alpha=0.1, epsilon=1.9))])
2025-09-27 18:53:21,960:INFO:finalize_model() successfully completed......................................
2025-09-27 19:05:14,826:INFO:PyCaret RegressionExperiment
2025-09-27 19:05:14,826:INFO:Logging name: reg-default-name
2025-09-27 19:05:14,826:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-27 19:05:14,826:INFO:version 3.3.2
2025-09-27 19:05:14,826:INFO:Initializing setup()
2025-09-27 19:05:14,826:INFO:self.USI: 6131
2025-09-27 19:05:14,826:INFO:self._variable_keys: {'exp_name_log', 'target_param', 'seed', 'y_test', 'gpu_param', 'idx', 'X_test', 'html_param', 'transform_target_param', 'n_jobs_param', 'pipeline', 'logging_param', '_ml_usecase', 'log_plots_param', '_available_plots', 'fold_generator', 'X', 'data', 'gpu_n_jobs_param', 'X_train', 'fold_shuffle_param', 'y', 'fold_groups_param', 'USI', 'memory', 'exp_id', 'y_train'}
2025-09-27 19:05:14,826:INFO:Checking environment
2025-09-27 19:05:14,826:INFO:python_version: 3.10.18
2025-09-27 19:05:14,826:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-27 19:05:14,826:INFO:machine: AMD64
2025-09-27 19:05:14,826:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-27 19:05:14,826:INFO:Memory: svmem(total=16486035456, available=7475744768, percent=54.7, used=9010290688, free=7475744768)
2025-09-27 19:05:14,826:INFO:Physical Core: 8
2025-09-27 19:05:14,826:INFO:Logical Core: 16
2025-09-27 19:05:14,826:INFO:Checking libraries
2025-09-27 19:05:14,826:INFO:System:
2025-09-27 19:05:14,826:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-27 19:05:14,826:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-27 19:05:14,826:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-27 19:05:14,826:INFO:PyCaret required dependencies:
2025-09-27 19:05:14,826:INFO:                 pip: 25.2
2025-09-27 19:05:14,826:INFO:          setuptools: 78.1.1
2025-09-27 19:05:14,826:INFO:             pycaret: 3.3.2
2025-09-27 19:05:14,826:INFO:             IPython: 8.37.0
2025-09-27 19:05:14,826:INFO:          ipywidgets: 8.1.7
2025-09-27 19:05:14,826:INFO:                tqdm: 4.67.1
2025-09-27 19:05:14,826:INFO:               numpy: 1.26.4
2025-09-27 19:05:14,826:INFO:              pandas: 2.1.4
2025-09-27 19:05:14,826:INFO:              jinja2: 3.1.6
2025-09-27 19:05:14,826:INFO:               scipy: 1.11.4
2025-09-27 19:05:14,826:INFO:              joblib: 1.3.2
2025-09-27 19:05:14,826:INFO:             sklearn: 1.4.2
2025-09-27 19:05:14,826:INFO:                pyod: 2.0.5
2025-09-27 19:05:14,826:INFO:            imblearn: 0.14.0
2025-09-27 19:05:14,826:INFO:   category_encoders: 2.7.0
2025-09-27 19:05:14,826:INFO:            lightgbm: 4.6.0
2025-09-27 19:05:14,826:INFO:               numba: 0.61.0
2025-09-27 19:05:14,826:INFO:            requests: 2.32.5
2025-09-27 19:05:14,826:INFO:          matplotlib: 3.7.5
2025-09-27 19:05:14,826:INFO:          scikitplot: 0.3.7
2025-09-27 19:05:14,826:INFO:         yellowbrick: 1.5
2025-09-27 19:05:14,826:INFO:              plotly: 5.24.1
2025-09-27 19:05:14,826:INFO:    plotly-resampler: Not installed
2025-09-27 19:05:14,826:INFO:             kaleido: 1.1.0
2025-09-27 19:05:14,826:INFO:           schemdraw: 0.15
2025-09-27 19:05:14,826:INFO:         statsmodels: 0.14.5
2025-09-27 19:05:14,826:INFO:              sktime: 0.26.0
2025-09-27 19:05:14,826:INFO:               tbats: 1.1.3
2025-09-27 19:05:14,826:INFO:            pmdarima: 2.0.4
2025-09-27 19:05:14,826:INFO:              psutil: 7.1.0
2025-09-27 19:05:14,826:INFO:          markupsafe: 3.0.2
2025-09-27 19:05:14,826:INFO:             pickle5: Not installed
2025-09-27 19:05:14,826:INFO:         cloudpickle: 3.1.1
2025-09-27 19:05:14,826:INFO:         deprecation: 2.1.0
2025-09-27 19:05:14,826:INFO:              xxhash: 3.5.0
2025-09-27 19:05:14,826:INFO:           wurlitzer: Not installed
2025-09-27 19:05:14,826:INFO:PyCaret optional dependencies:
2025-09-27 19:05:14,826:INFO:                shap: 0.44.1
2025-09-27 19:05:14,826:INFO:           interpret: 0.7.2
2025-09-27 19:05:14,826:INFO:                umap: 0.5.7
2025-09-27 19:05:14,826:INFO:     ydata_profiling: 4.16.1
2025-09-27 19:05:14,826:INFO:  explainerdashboard: 0.5.1
2025-09-27 19:05:14,826:INFO:             autoviz: Not installed
2025-09-27 19:05:14,826:INFO:           fairlearn: 0.7.0
2025-09-27 19:05:14,826:INFO:          deepchecks: Not installed
2025-09-27 19:05:14,826:INFO:             xgboost: 3.0.5
2025-09-27 19:05:14,826:INFO:            catboost: 1.2.8
2025-09-27 19:05:14,826:INFO:              kmodes: 0.12.2
2025-09-27 19:05:14,826:INFO:             mlxtend: 0.23.4
2025-09-27 19:05:14,826:INFO:       statsforecast: 1.5.0
2025-09-27 19:05:14,826:INFO:        tune_sklearn: Not installed
2025-09-27 19:05:14,826:INFO:                 ray: Not installed
2025-09-27 19:05:14,826:INFO:            hyperopt: 0.2.7
2025-09-27 19:05:14,826:INFO:              optuna: 4.5.0
2025-09-27 19:05:14,826:INFO:               skopt: 0.10.2
2025-09-27 19:05:14,826:INFO:              mlflow: 3.4.0
2025-09-27 19:05:14,826:INFO:              gradio: 5.46.1
2025-09-27 19:05:14,826:INFO:             fastapi: 0.117.1
2025-09-27 19:05:14,826:INFO:             uvicorn: 0.36.0
2025-09-27 19:05:14,834:INFO:              m2cgen: 0.10.0
2025-09-27 19:05:14,834:INFO:           evidently: 0.4.40
2025-09-27 19:05:14,834:INFO:               fugue: 0.8.7
2025-09-27 19:05:14,834:INFO:           streamlit: Not installed
2025-09-27 19:05:14,834:INFO:             prophet: Not installed
2025-09-27 19:05:14,834:INFO:None
2025-09-27 19:05:14,834:INFO:Set up data.
2025-09-27 19:05:14,841:INFO:Set up folding strategy.
2025-09-27 19:05:14,841:INFO:Set up train/test split.
2025-09-27 19:05:14,841:INFO:Set up index.
2025-09-27 19:05:14,841:INFO:Assigning column types.
2025-09-27 19:05:14,841:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-27 19:05:14,850:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:05:14,856:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:05:14,856:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:05:14,937:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:14,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:14,986:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:14,986:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:15,002:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,006:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,006:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,152:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:15,156:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:15,156:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-27 19:05:15,164:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,170:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,238:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,305:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:15,305:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:15,305:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,453:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,453:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:15,465:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:15,466:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-27 19:05:15,474:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,555:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,623:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:15,625:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:15,636:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,720:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,786:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:15,788:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:15,788:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-27 19:05:15,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:15,955:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:15,958:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:16,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:16,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:05:16,112:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:16,119:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:16,119:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-27 19:05:16,217:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:16,298:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:16,302:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:16,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:05:16,468:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:16,473:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:16,473:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-27 19:05:16,615:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:16,615:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:16,773:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:16,777:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:16,779:INFO:Preparing preprocessing pipeline...
2025-09-27 19:05:16,779:INFO:Set up simple imputation.
2025-09-27 19:05:16,782:INFO:Set up encoding of categorical features.
2025-09-27 19:05:16,929:INFO:Finished creating preprocessing pipeline.
2025-09-27 19:05:16,943:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-09-27 19:05:16,944:INFO:Creating final display dataframe.
2025-09-27 19:05:17,261:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target    personas_total
2                   Target type        Regression
3           Original data shape         (840, 11)
4        Transformed data shape         (840, 29)
5   Transformed train set shape         (588, 29)
6    Transformed test set shape         (252, 29)
7              Numeric features                 7
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator        GroupKFold
16                  Fold Number                 5
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              6131
2025-09-27 19:05:17,408:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:17,411:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:17,568:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:05:17,574:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:05:17,575:INFO:setup() successfully completed in 2.76s...............
2025-09-27 19:05:17,575:INFO:Initializing compare_models()
2025-09-27 19:05:17,575:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-09-27 19:05:17,575:INFO:Checking exceptions
2025-09-27 19:05:17,577:INFO:Preparing display monitor
2025-09-27 19:05:17,623:INFO:Initializing Linear Regression
2025-09-27 19:05:17,623:INFO:Total runtime is 0.0 minutes
2025-09-27 19:05:17,631:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:17,634:INFO:Initializing create_model()
2025-09-27 19:05:17,634:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=lr, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:17,634:INFO:Checking exceptions
2025-09-27 19:05:17,635:INFO:Importing libraries
2025-09-27 19:05:17,635:INFO:Copying training dataset
2025-09-27 19:05:17,645:INFO:Defining folds
2025-09-27 19:05:17,645:INFO:Declaring metric variables
2025-09-27 19:05:17,652:INFO:Importing untrained model
2025-09-27 19:05:17,661:INFO:Linear Regression Imported successfully
2025-09-27 19:05:17,680:INFO:Starting cross validation
2025-09-27 19:05:17,684:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:25,786:INFO:Calculating mean and std
2025-09-27 19:05:25,789:INFO:Creating metrics dataframe
2025-09-27 19:05:25,795:INFO:Uploading results into container
2025-09-27 19:05:25,797:INFO:Uploading model into container now
2025-09-27 19:05:25,798:INFO:_master_model_container: 1
2025-09-27 19:05:25,798:INFO:_display_container: 2
2025-09-27 19:05:25,799:INFO:LinearRegression(n_jobs=-1)
2025-09-27 19:05:25,799:INFO:create_model() successfully completed......................................
2025-09-27 19:05:25,988:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:25,990:INFO:Creating metrics dataframe
2025-09-27 19:05:25,997:INFO:Initializing Lasso Regression
2025-09-27 19:05:25,997:INFO:Total runtime is 0.13956305980682374 minutes
2025-09-27 19:05:26,001:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:26,002:INFO:Initializing create_model()
2025-09-27 19:05:26,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=lasso, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:26,003:INFO:Checking exceptions
2025-09-27 19:05:26,003:INFO:Importing libraries
2025-09-27 19:05:26,003:INFO:Copying training dataset
2025-09-27 19:05:26,009:INFO:Defining folds
2025-09-27 19:05:26,010:INFO:Declaring metric variables
2025-09-27 19:05:26,017:INFO:Importing untrained model
2025-09-27 19:05:26,023:INFO:Lasso Regression Imported successfully
2025-09-27 19:05:26,036:INFO:Starting cross validation
2025-09-27 19:05:26,039:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:32,941:INFO:Calculating mean and std
2025-09-27 19:05:32,943:INFO:Creating metrics dataframe
2025-09-27 19:05:32,946:INFO:Uploading results into container
2025-09-27 19:05:32,947:INFO:Uploading model into container now
2025-09-27 19:05:32,948:INFO:_master_model_container: 2
2025-09-27 19:05:32,948:INFO:_display_container: 2
2025-09-27 19:05:32,949:INFO:Lasso(random_state=42)
2025-09-27 19:05:32,949:INFO:create_model() successfully completed......................................
2025-09-27 19:05:33,139:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:33,140:INFO:Creating metrics dataframe
2025-09-27 19:05:33,148:INFO:Initializing Ridge Regression
2025-09-27 19:05:33,149:INFO:Total runtime is 0.25876033703486123 minutes
2025-09-27 19:05:33,153:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:33,155:INFO:Initializing create_model()
2025-09-27 19:05:33,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ridge, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:33,155:INFO:Checking exceptions
2025-09-27 19:05:33,155:INFO:Importing libraries
2025-09-27 19:05:33,155:INFO:Copying training dataset
2025-09-27 19:05:33,161:INFO:Defining folds
2025-09-27 19:05:33,162:INFO:Declaring metric variables
2025-09-27 19:05:33,171:INFO:Importing untrained model
2025-09-27 19:05:33,176:INFO:Ridge Regression Imported successfully
2025-09-27 19:05:33,189:INFO:Starting cross validation
2025-09-27 19:05:33,192:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:40,269:INFO:Calculating mean and std
2025-09-27 19:05:40,271:INFO:Creating metrics dataframe
2025-09-27 19:05:40,275:INFO:Uploading results into container
2025-09-27 19:05:40,276:INFO:Uploading model into container now
2025-09-27 19:05:40,277:INFO:_master_model_container: 3
2025-09-27 19:05:40,278:INFO:_display_container: 2
2025-09-27 19:05:40,278:INFO:Ridge(random_state=42)
2025-09-27 19:05:40,279:INFO:create_model() successfully completed......................................
2025-09-27 19:05:40,467:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:40,467:INFO:Creating metrics dataframe
2025-09-27 19:05:40,476:INFO:Initializing Elastic Net
2025-09-27 19:05:40,477:INFO:Total runtime is 0.3808965762456258 minutes
2025-09-27 19:05:40,481:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:40,484:INFO:Initializing create_model()
2025-09-27 19:05:40,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=en, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:40,484:INFO:Checking exceptions
2025-09-27 19:05:40,484:INFO:Importing libraries
2025-09-27 19:05:40,484:INFO:Copying training dataset
2025-09-27 19:05:40,490:INFO:Defining folds
2025-09-27 19:05:40,491:INFO:Declaring metric variables
2025-09-27 19:05:40,498:INFO:Importing untrained model
2025-09-27 19:05:40,506:INFO:Elastic Net Imported successfully
2025-09-27 19:05:40,517:INFO:Starting cross validation
2025-09-27 19:05:40,522:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:46,382:INFO:Calculating mean and std
2025-09-27 19:05:46,384:INFO:Creating metrics dataframe
2025-09-27 19:05:46,386:INFO:Uploading results into container
2025-09-27 19:05:46,390:INFO:Uploading model into container now
2025-09-27 19:05:46,390:INFO:_master_model_container: 4
2025-09-27 19:05:46,390:INFO:_display_container: 2
2025-09-27 19:05:46,391:INFO:ElasticNet(random_state=42)
2025-09-27 19:05:46,391:INFO:create_model() successfully completed......................................
2025-09-27 19:05:46,573:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:46,573:INFO:Creating metrics dataframe
2025-09-27 19:05:46,585:INFO:Initializing Least Angle Regression
2025-09-27 19:05:46,585:INFO:Total runtime is 0.4826871355374654 minutes
2025-09-27 19:05:46,590:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:46,592:INFO:Initializing create_model()
2025-09-27 19:05:46,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=lar, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:46,592:INFO:Checking exceptions
2025-09-27 19:05:46,592:INFO:Importing libraries
2025-09-27 19:05:46,592:INFO:Copying training dataset
2025-09-27 19:05:46,595:INFO:Defining folds
2025-09-27 19:05:46,595:INFO:Declaring metric variables
2025-09-27 19:05:46,607:INFO:Importing untrained model
2025-09-27 19:05:46,615:INFO:Least Angle Regression Imported successfully
2025-09-27 19:05:46,628:INFO:Starting cross validation
2025-09-27 19:05:46,632:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:46,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.495e+00, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=7.397e+00, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=3.337e+00, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.528e+00, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=9.086e-01, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,756:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 36 iterations, i.e. alpha=2.437e+01, with an active set of 27 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.166e+01, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,776:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.032e+00, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=1.151e+01, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,782:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=7.934e+00, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,788:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=4.536e+00, with an active set of 7 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.810e+00, with an active set of 13 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,791:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.810e+00, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.368e+01, with an active set of 5 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.748e+00, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=7.849e+00, with an active set of 7 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.810e+00, with an active set of 7 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=1.226e+00, with an active set of 23 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=5.503e-01, with an active set of 23 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=4.742e-01, with an active set of 23 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=4.558e-01, with an active set of 23 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=4.325e-01, with an active set of 24 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=1.079e-01, with an active set of 24 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=4.667e-02, with an active set of 25 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=2.871e-02, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=1.055e-02, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=2.324e+01, with an active set of 26 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,792:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=1.109e+01, with an active set of 26 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,804:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.234e+01, with an active set of 5 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,805:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.422e+00, with an active set of 6 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,805:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 31 iterations, i.e. alpha=6.534e+00, with an active set of 26 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,805:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 31 iterations, i.e. alpha=4.468e+00, with an active set of 26 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:46,852:INFO:Calculating mean and std
2025-09-27 19:05:46,854:INFO:Creating metrics dataframe
2025-09-27 19:05:46,854:INFO:Uploading results into container
2025-09-27 19:05:46,854:INFO:Uploading model into container now
2025-09-27 19:05:46,854:INFO:_master_model_container: 5
2025-09-27 19:05:46,854:INFO:_display_container: 2
2025-09-27 19:05:46,859:INFO:Lars(random_state=42)
2025-09-27 19:05:46,859:INFO:create_model() successfully completed......................................
2025-09-27 19:05:47,023:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:47,023:INFO:Creating metrics dataframe
2025-09-27 19:05:47,038:INFO:Initializing Lasso Least Angle Regression
2025-09-27 19:05:47,041:INFO:Total runtime is 0.49028731584548946 minutes
2025-09-27 19:05:47,045:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:47,047:INFO:Initializing create_model()
2025-09-27 19:05:47,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=llar, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:47,047:INFO:Checking exceptions
2025-09-27 19:05:47,047:INFO:Importing libraries
2025-09-27 19:05:47,047:INFO:Copying training dataset
2025-09-27 19:05:47,055:INFO:Defining folds
2025-09-27 19:05:47,057:INFO:Declaring metric variables
2025-09-27 19:05:47,066:INFO:Importing untrained model
2025-09-27 19:05:47,074:INFO:Lasso Least Angle Regression Imported successfully
2025-09-27 19:05:47,092:INFO:Starting cross validation
2025-09-27 19:05:47,097:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:47,235:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.166e+01, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,237:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.032e+00, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,239:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 12 iterations, alpha=5.272e+00, previous alpha=2.636e+00, with an active set of 11 regressors.
  warnings.warn(

2025-09-27 19:05:47,239:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=4.536e+00, with an active set of 7 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,254:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.810e+00, with an active set of 12 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,254:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.368e+01, with an active set of 5 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,254:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 18 iterations, alpha=1.800e+00, previous alpha=1.663e+00, with an active set of 13 regressors.
  warnings.warn(

2025-09-27 19:05:47,256:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=7.849e+00, with an active set of 7 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,256:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.810e+00, with an active set of 7 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,258:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 16 iterations, alpha=6.328e+00, previous alpha=2.486e+00, with an active set of 11 regressors.
  warnings.warn(

2025-09-27 19:05:47,278:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.234e+01, with an active set of 5 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,278:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.422e+00, with an active set of 6 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-09-27 19:05:47,282:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 14 iterations, alpha=4.714e+00, previous alpha=2.396e+00, with an active set of 13 regressors.
  warnings.warn(

2025-09-27 19:05:47,332:INFO:Calculating mean and std
2025-09-27 19:05:47,332:INFO:Creating metrics dataframe
2025-09-27 19:05:47,339:INFO:Uploading results into container
2025-09-27 19:05:47,339:INFO:Uploading model into container now
2025-09-27 19:05:47,339:INFO:_master_model_container: 6
2025-09-27 19:05:47,339:INFO:_display_container: 2
2025-09-27 19:05:47,339:INFO:LassoLars(random_state=42)
2025-09-27 19:05:47,339:INFO:create_model() successfully completed......................................
2025-09-27 19:05:47,505:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:47,505:INFO:Creating metrics dataframe
2025-09-27 19:05:47,519:INFO:Initializing Orthogonal Matching Pursuit
2025-09-27 19:05:47,519:INFO:Total runtime is 0.4982673048973083 minutes
2025-09-27 19:05:47,527:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:47,529:INFO:Initializing create_model()
2025-09-27 19:05:47,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=omp, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:47,529:INFO:Checking exceptions
2025-09-27 19:05:47,529:INFO:Importing libraries
2025-09-27 19:05:47,529:INFO:Copying training dataset
2025-09-27 19:05:47,533:INFO:Defining folds
2025-09-27 19:05:47,533:INFO:Declaring metric variables
2025-09-27 19:05:47,546:INFO:Importing untrained model
2025-09-27 19:05:47,555:INFO:Orthogonal Matching Pursuit Imported successfully
2025-09-27 19:05:47,573:INFO:Starting cross validation
2025-09-27 19:05:47,578:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:47,802:INFO:Calculating mean and std
2025-09-27 19:05:47,802:INFO:Creating metrics dataframe
2025-09-27 19:05:47,809:INFO:Uploading results into container
2025-09-27 19:05:47,809:INFO:Uploading model into container now
2025-09-27 19:05:47,809:INFO:_master_model_container: 7
2025-09-27 19:05:47,811:INFO:_display_container: 2
2025-09-27 19:05:47,811:INFO:OrthogonalMatchingPursuit()
2025-09-27 19:05:47,811:INFO:create_model() successfully completed......................................
2025-09-27 19:05:47,971:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:47,971:INFO:Creating metrics dataframe
2025-09-27 19:05:47,988:INFO:Initializing Bayesian Ridge
2025-09-27 19:05:47,988:INFO:Total runtime is 0.5060709794362386 minutes
2025-09-27 19:05:47,998:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:47,998:INFO:Initializing create_model()
2025-09-27 19:05:47,998:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=br, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:47,998:INFO:Checking exceptions
2025-09-27 19:05:47,998:INFO:Importing libraries
2025-09-27 19:05:47,998:INFO:Copying training dataset
2025-09-27 19:05:48,007:INFO:Defining folds
2025-09-27 19:05:48,007:INFO:Declaring metric variables
2025-09-27 19:05:48,015:INFO:Importing untrained model
2025-09-27 19:05:48,027:INFO:Bayesian Ridge Imported successfully
2025-09-27 19:05:48,038:INFO:Starting cross validation
2025-09-27 19:05:48,042:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:48,238:INFO:Calculating mean and std
2025-09-27 19:05:48,238:INFO:Creating metrics dataframe
2025-09-27 19:05:48,243:INFO:Uploading results into container
2025-09-27 19:05:48,243:INFO:Uploading model into container now
2025-09-27 19:05:48,243:INFO:_master_model_container: 8
2025-09-27 19:05:48,245:INFO:_display_container: 2
2025-09-27 19:05:48,245:INFO:BayesianRidge()
2025-09-27 19:05:48,245:INFO:create_model() successfully completed......................................
2025-09-27 19:05:48,405:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:48,405:INFO:Creating metrics dataframe
2025-09-27 19:05:48,420:INFO:Initializing Passive Aggressive Regressor
2025-09-27 19:05:48,420:INFO:Total runtime is 0.5132734735806783 minutes
2025-09-27 19:05:48,420:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:48,420:INFO:Initializing create_model()
2025-09-27 19:05:48,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=par, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:48,420:INFO:Checking exceptions
2025-09-27 19:05:48,420:INFO:Importing libraries
2025-09-27 19:05:48,420:INFO:Copying training dataset
2025-09-27 19:05:48,439:INFO:Defining folds
2025-09-27 19:05:48,439:INFO:Declaring metric variables
2025-09-27 19:05:48,446:INFO:Importing untrained model
2025-09-27 19:05:48,458:INFO:Passive Aggressive Regressor Imported successfully
2025-09-27 19:05:48,472:INFO:Starting cross validation
2025-09-27 19:05:48,473:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:48,700:INFO:Calculating mean and std
2025-09-27 19:05:48,702:INFO:Creating metrics dataframe
2025-09-27 19:05:48,706:INFO:Uploading results into container
2025-09-27 19:05:48,706:INFO:Uploading model into container now
2025-09-27 19:05:48,706:INFO:_master_model_container: 9
2025-09-27 19:05:48,706:INFO:_display_container: 2
2025-09-27 19:05:48,709:INFO:PassiveAggressiveRegressor(random_state=42)
2025-09-27 19:05:48,709:INFO:create_model() successfully completed......................................
2025-09-27 19:05:48,881:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:48,881:INFO:Creating metrics dataframe
2025-09-27 19:05:48,892:INFO:Initializing Huber Regressor
2025-09-27 19:05:48,893:INFO:Total runtime is 0.5211589654286702 minutes
2025-09-27 19:05:48,899:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:48,900:INFO:Initializing create_model()
2025-09-27 19:05:48,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=huber, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:48,900:INFO:Checking exceptions
2025-09-27 19:05:48,900:INFO:Importing libraries
2025-09-27 19:05:48,901:INFO:Copying training dataset
2025-09-27 19:05:48,948:INFO:Defining folds
2025-09-27 19:05:48,950:INFO:Declaring metric variables
2025-09-27 19:05:48,963:INFO:Importing untrained model
2025-09-27 19:05:48,993:INFO:Huber Regressor Imported successfully
2025-09-27 19:05:49,015:INFO:Starting cross validation
2025-09-27 19:05:49,020:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:49,180:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-27 19:05:49,183:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-27 19:05:49,217:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-27 19:05:49,231:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-27 19:05:49,237:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-27 19:05:49,280:INFO:Calculating mean and std
2025-09-27 19:05:49,282:INFO:Creating metrics dataframe
2025-09-27 19:05:49,285:INFO:Uploading results into container
2025-09-27 19:05:49,287:INFO:Uploading model into container now
2025-09-27 19:05:49,287:INFO:_master_model_container: 10
2025-09-27 19:05:49,287:INFO:_display_container: 2
2025-09-27 19:05:49,288:INFO:HuberRegressor()
2025-09-27 19:05:49,288:INFO:create_model() successfully completed......................................
2025-09-27 19:05:49,458:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:49,458:INFO:Creating metrics dataframe
2025-09-27 19:05:49,472:INFO:Initializing K Neighbors Regressor
2025-09-27 19:05:49,472:INFO:Total runtime is 0.5308098832766215 minutes
2025-09-27 19:05:49,478:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:49,480:INFO:Initializing create_model()
2025-09-27 19:05:49,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=knn, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:49,480:INFO:Checking exceptions
2025-09-27 19:05:49,481:INFO:Importing libraries
2025-09-27 19:05:49,481:INFO:Copying training dataset
2025-09-27 19:05:49,487:INFO:Defining folds
2025-09-27 19:05:49,488:INFO:Declaring metric variables
2025-09-27 19:05:49,496:INFO:Importing untrained model
2025-09-27 19:05:49,504:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:05:49,518:INFO:Starting cross validation
2025-09-27 19:05:49,524:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:49,744:INFO:Calculating mean and std
2025-09-27 19:05:49,747:INFO:Creating metrics dataframe
2025-09-27 19:05:49,751:INFO:Uploading results into container
2025-09-27 19:05:49,752:INFO:Uploading model into container now
2025-09-27 19:05:49,753:INFO:_master_model_container: 11
2025-09-27 19:05:49,753:INFO:_display_container: 2
2025-09-27 19:05:49,754:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:05:49,754:INFO:create_model() successfully completed......................................
2025-09-27 19:05:49,925:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:49,925:INFO:Creating metrics dataframe
2025-09-27 19:05:49,939:INFO:Initializing Decision Tree Regressor
2025-09-27 19:05:49,939:INFO:Total runtime is 0.5385980208714803 minutes
2025-09-27 19:05:49,946:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:49,948:INFO:Initializing create_model()
2025-09-27 19:05:49,948:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=dt, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:49,948:INFO:Checking exceptions
2025-09-27 19:05:49,948:INFO:Importing libraries
2025-09-27 19:05:49,949:INFO:Copying training dataset
2025-09-27 19:05:49,955:INFO:Defining folds
2025-09-27 19:05:49,955:INFO:Declaring metric variables
2025-09-27 19:05:49,966:INFO:Importing untrained model
2025-09-27 19:05:49,975:INFO:Decision Tree Regressor Imported successfully
2025-09-27 19:05:49,987:INFO:Starting cross validation
2025-09-27 19:05:49,991:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:50,242:INFO:Calculating mean and std
2025-09-27 19:05:50,244:INFO:Creating metrics dataframe
2025-09-27 19:05:50,247:INFO:Uploading results into container
2025-09-27 19:05:50,248:INFO:Uploading model into container now
2025-09-27 19:05:50,249:INFO:_master_model_container: 12
2025-09-27 19:05:50,249:INFO:_display_container: 2
2025-09-27 19:05:50,249:INFO:DecisionTreeRegressor(random_state=42)
2025-09-27 19:05:50,250:INFO:create_model() successfully completed......................................
2025-09-27 19:05:50,427:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:50,427:INFO:Creating metrics dataframe
2025-09-27 19:05:50,439:INFO:Initializing Random Forest Regressor
2025-09-27 19:05:50,439:INFO:Total runtime is 0.5469314853350322 minutes
2025-09-27 19:05:50,445:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:50,447:INFO:Initializing create_model()
2025-09-27 19:05:50,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=rf, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:50,447:INFO:Checking exceptions
2025-09-27 19:05:50,447:INFO:Importing libraries
2025-09-27 19:05:50,448:INFO:Copying training dataset
2025-09-27 19:05:50,454:INFO:Defining folds
2025-09-27 19:05:50,454:INFO:Declaring metric variables
2025-09-27 19:05:50,461:INFO:Importing untrained model
2025-09-27 19:05:50,467:INFO:Random Forest Regressor Imported successfully
2025-09-27 19:05:50,479:INFO:Starting cross validation
2025-09-27 19:05:50,482:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:51,002:INFO:Calculating mean and std
2025-09-27 19:05:51,004:INFO:Creating metrics dataframe
2025-09-27 19:05:51,007:INFO:Uploading results into container
2025-09-27 19:05:51,009:INFO:Uploading model into container now
2025-09-27 19:05:51,009:INFO:_master_model_container: 13
2025-09-27 19:05:51,009:INFO:_display_container: 2
2025-09-27 19:05:51,009:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:05:51,009:INFO:create_model() successfully completed......................................
2025-09-27 19:05:51,196:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:51,196:INFO:Creating metrics dataframe
2025-09-27 19:05:51,211:INFO:Initializing Extra Trees Regressor
2025-09-27 19:05:51,214:INFO:Total runtime is 0.5598386724789938 minutes
2025-09-27 19:05:51,221:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:51,222:INFO:Initializing create_model()
2025-09-27 19:05:51,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=et, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:51,222:INFO:Checking exceptions
2025-09-27 19:05:51,222:INFO:Importing libraries
2025-09-27 19:05:51,222:INFO:Copying training dataset
2025-09-27 19:05:51,232:INFO:Defining folds
2025-09-27 19:05:51,232:INFO:Declaring metric variables
2025-09-27 19:05:51,239:INFO:Importing untrained model
2025-09-27 19:05:51,249:INFO:Extra Trees Regressor Imported successfully
2025-09-27 19:05:51,264:INFO:Starting cross validation
2025-09-27 19:05:51,269:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:51,733:INFO:Calculating mean and std
2025-09-27 19:05:51,733:INFO:Creating metrics dataframe
2025-09-27 19:05:51,736:INFO:Uploading results into container
2025-09-27 19:05:51,738:INFO:Uploading model into container now
2025-09-27 19:05:51,740:INFO:_master_model_container: 14
2025-09-27 19:05:51,740:INFO:_display_container: 2
2025-09-27 19:05:51,741:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:05:51,742:INFO:create_model() successfully completed......................................
2025-09-27 19:05:51,913:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:51,913:INFO:Creating metrics dataframe
2025-09-27 19:05:51,929:INFO:Initializing AdaBoost Regressor
2025-09-27 19:05:51,929:INFO:Total runtime is 0.5717584848403932 minutes
2025-09-27 19:05:51,934:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:51,936:INFO:Initializing create_model()
2025-09-27 19:05:51,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ada, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:51,936:INFO:Checking exceptions
2025-09-27 19:05:51,936:INFO:Importing libraries
2025-09-27 19:05:51,936:INFO:Copying training dataset
2025-09-27 19:05:51,943:INFO:Defining folds
2025-09-27 19:05:51,943:INFO:Declaring metric variables
2025-09-27 19:05:51,949:INFO:Importing untrained model
2025-09-27 19:05:51,964:INFO:AdaBoost Regressor Imported successfully
2025-09-27 19:05:51,977:INFO:Starting cross validation
2025-09-27 19:05:51,981:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:52,338:INFO:Calculating mean and std
2025-09-27 19:05:52,339:INFO:Creating metrics dataframe
2025-09-27 19:05:52,343:INFO:Uploading results into container
2025-09-27 19:05:52,343:INFO:Uploading model into container now
2025-09-27 19:05:52,344:INFO:_master_model_container: 15
2025-09-27 19:05:52,344:INFO:_display_container: 2
2025-09-27 19:05:52,344:INFO:AdaBoostRegressor(random_state=42)
2025-09-27 19:05:52,344:INFO:create_model() successfully completed......................................
2025-09-27 19:05:52,507:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:52,507:INFO:Creating metrics dataframe
2025-09-27 19:05:52,523:INFO:Initializing Gradient Boosting Regressor
2025-09-27 19:05:52,523:INFO:Total runtime is 0.5816601157188417 minutes
2025-09-27 19:05:52,533:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:52,536:INFO:Initializing create_model()
2025-09-27 19:05:52,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=gbr, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:52,536:INFO:Checking exceptions
2025-09-27 19:05:52,536:INFO:Importing libraries
2025-09-27 19:05:52,536:INFO:Copying training dataset
2025-09-27 19:05:52,541:INFO:Defining folds
2025-09-27 19:05:52,541:INFO:Declaring metric variables
2025-09-27 19:05:52,567:INFO:Importing untrained model
2025-09-27 19:05:52,590:INFO:Gradient Boosting Regressor Imported successfully
2025-09-27 19:05:52,617:INFO:Starting cross validation
2025-09-27 19:05:52,621:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:52,899:INFO:Calculating mean and std
2025-09-27 19:05:52,899:INFO:Creating metrics dataframe
2025-09-27 19:05:52,899:INFO:Uploading results into container
2025-09-27 19:05:52,904:INFO:Uploading model into container now
2025-09-27 19:05:52,904:INFO:_master_model_container: 16
2025-09-27 19:05:52,904:INFO:_display_container: 2
2025-09-27 19:05:52,904:INFO:GradientBoostingRegressor(random_state=42)
2025-09-27 19:05:52,904:INFO:create_model() successfully completed......................................
2025-09-27 19:05:53,089:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:53,089:INFO:Creating metrics dataframe
2025-09-27 19:05:53,105:INFO:Initializing Extreme Gradient Boosting
2025-09-27 19:05:53,105:INFO:Total runtime is 0.5913617730140688 minutes
2025-09-27 19:05:53,113:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:53,113:INFO:Initializing create_model()
2025-09-27 19:05:53,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=xgboost, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:53,113:INFO:Checking exceptions
2025-09-27 19:05:53,113:INFO:Importing libraries
2025-09-27 19:05:53,113:INFO:Copying training dataset
2025-09-27 19:05:53,121:INFO:Defining folds
2025-09-27 19:05:53,121:INFO:Declaring metric variables
2025-09-27 19:05:53,129:INFO:Importing untrained model
2025-09-27 19:05:53,142:INFO:Extreme Gradient Boosting Imported successfully
2025-09-27 19:05:53,157:INFO:Starting cross validation
2025-09-27 19:05:53,157:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:53,537:INFO:Calculating mean and std
2025-09-27 19:05:53,539:INFO:Creating metrics dataframe
2025-09-27 19:05:53,542:INFO:Uploading results into container
2025-09-27 19:05:53,542:INFO:Uploading model into container now
2025-09-27 19:05:53,543:INFO:_master_model_container: 17
2025-09-27 19:05:53,543:INFO:_display_container: 2
2025-09-27 19:05:53,543:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-27 19:05:53,543:INFO:create_model() successfully completed......................................
2025-09-27 19:05:53,728:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:53,728:INFO:Creating metrics dataframe
2025-09-27 19:05:53,746:INFO:Initializing Light Gradient Boosting Machine
2025-09-27 19:05:53,746:INFO:Total runtime is 0.6020398457845054 minutes
2025-09-27 19:05:53,746:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:53,752:INFO:Initializing create_model()
2025-09-27 19:05:53,754:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=lightgbm, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:53,754:INFO:Checking exceptions
2025-09-27 19:05:53,754:INFO:Importing libraries
2025-09-27 19:05:53,754:INFO:Copying training dataset
2025-09-27 19:05:53,761:INFO:Defining folds
2025-09-27 19:05:53,761:INFO:Declaring metric variables
2025-09-27 19:05:53,761:INFO:Importing untrained model
2025-09-27 19:05:53,774:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-27 19:05:53,789:INFO:Starting cross validation
2025-09-27 19:05:53,789:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:54,285:INFO:Calculating mean and std
2025-09-27 19:05:54,287:INFO:Creating metrics dataframe
2025-09-27 19:05:54,291:INFO:Uploading results into container
2025-09-27 19:05:54,291:INFO:Uploading model into container now
2025-09-27 19:05:54,293:INFO:_master_model_container: 18
2025-09-27 19:05:54,293:INFO:_display_container: 2
2025-09-27 19:05:54,293:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:05:54,293:INFO:create_model() successfully completed......................................
2025-09-27 19:05:54,474:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:54,474:INFO:Creating metrics dataframe
2025-09-27 19:05:54,483:INFO:Initializing CatBoost Regressor
2025-09-27 19:05:54,483:INFO:Total runtime is 0.6143322428067527 minutes
2025-09-27 19:05:54,483:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:54,483:INFO:Initializing create_model()
2025-09-27 19:05:54,483:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=catboost, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:54,483:INFO:Checking exceptions
2025-09-27 19:05:54,483:INFO:Importing libraries
2025-09-27 19:05:54,483:INFO:Copying training dataset
2025-09-27 19:05:54,499:INFO:Defining folds
2025-09-27 19:05:54,499:INFO:Declaring metric variables
2025-09-27 19:05:54,509:INFO:Importing untrained model
2025-09-27 19:05:54,509:INFO:CatBoost Regressor Imported successfully
2025-09-27 19:05:54,524:INFO:Starting cross validation
2025-09-27 19:05:54,536:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:56,899:INFO:Calculating mean and std
2025-09-27 19:05:56,899:INFO:Creating metrics dataframe
2025-09-27 19:05:56,903:INFO:Uploading results into container
2025-09-27 19:05:56,904:INFO:Uploading model into container now
2025-09-27 19:05:56,906:INFO:_master_model_container: 19
2025-09-27 19:05:56,906:INFO:_display_container: 2
2025-09-27 19:05:56,906:INFO:<catboost.core.CatBoostRegressor object at 0x000002493F69FFA0>
2025-09-27 19:05:56,906:INFO:create_model() successfully completed......................................
2025-09-27 19:05:57,064:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:57,064:INFO:Creating metrics dataframe
2025-09-27 19:05:57,081:INFO:Initializing Dummy Regressor
2025-09-27 19:05:57,081:INFO:Total runtime is 0.6576353311538699 minutes
2025-09-27 19:05:57,095:INFO:SubProcess create_model() called ==================================
2025-09-27 19:05:57,095:INFO:Initializing create_model()
2025-09-27 19:05:57,095:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=dummy, fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493F628E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:57,095:INFO:Checking exceptions
2025-09-27 19:05:57,095:INFO:Importing libraries
2025-09-27 19:05:57,095:INFO:Copying training dataset
2025-09-27 19:05:57,107:INFO:Defining folds
2025-09-27 19:05:57,107:INFO:Declaring metric variables
2025-09-27 19:05:57,111:INFO:Importing untrained model
2025-09-27 19:05:57,120:INFO:Dummy Regressor Imported successfully
2025-09-27 19:05:57,126:INFO:Starting cross validation
2025-09-27 19:05:57,136:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:05:57,353:INFO:Calculating mean and std
2025-09-27 19:05:57,353:INFO:Creating metrics dataframe
2025-09-27 19:05:57,360:INFO:Uploading results into container
2025-09-27 19:05:57,360:INFO:Uploading model into container now
2025-09-27 19:05:57,360:INFO:_master_model_container: 20
2025-09-27 19:05:57,360:INFO:_display_container: 2
2025-09-27 19:05:57,360:INFO:DummyRegressor()
2025-09-27 19:05:57,360:INFO:create_model() successfully completed......................................
2025-09-27 19:05:57,528:INFO:SubProcess create_model() end ==================================
2025-09-27 19:05:57,528:INFO:Creating metrics dataframe
2025-09-27 19:05:57,542:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-27 19:05:57,559:INFO:Initializing create_model()
2025-09-27 19:05:57,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=GroupKFold(n_splits=5), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:05:57,559:INFO:Checking exceptions
2025-09-27 19:05:57,573:INFO:Importing libraries
2025-09-27 19:05:57,573:INFO:Copying training dataset
2025-09-27 19:05:57,573:INFO:Defining folds
2025-09-27 19:05:57,573:INFO:Declaring metric variables
2025-09-27 19:05:57,573:INFO:Importing untrained model
2025-09-27 19:05:57,573:INFO:Declaring custom model
2025-09-27 19:05:57,573:INFO:Extra Trees Regressor Imported successfully
2025-09-27 19:05:57,573:INFO:Cross validation set to False
2025-09-27 19:05:57,573:INFO:Fitting Model
2025-09-27 19:05:57,784:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:05:57,784:INFO:create_model() successfully completed......................................
2025-09-27 19:05:58,008:INFO:_master_model_container: 20
2025-09-27 19:05:58,008:INFO:_display_container: 2
2025-09-27 19:05:58,008:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:05:58,008:INFO:compare_models() successfully completed......................................
2025-09-27 19:05:58,019:INFO:Initializing plot_model()
2025-09-27 19:05:58,019:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, system=True)
2025-09-27 19:05:58,019:INFO:Checking exceptions
2025-09-27 19:05:58,138:INFO:Preloading libraries
2025-09-27 19:05:58,155:INFO:Copying training dataset
2025-09-27 19:05:58,156:INFO:Plot type: residuals
2025-09-27 19:05:58,491:INFO:Fitting Model
2025-09-27 19:05:58,491:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesRegressor was fitted with feature names

2025-09-27 19:05:58,638:INFO:Scoring test/hold-out set
2025-09-27 19:05:59,166:INFO:Visual Rendered Successfully
2025-09-27 19:05:59,346:INFO:plot_model() successfully completed......................................
2025-09-27 19:05:59,348:INFO:Initializing plot_model()
2025-09-27 19:05:59,348:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, system=True)
2025-09-27 19:05:59,348:INFO:Checking exceptions
2025-09-27 19:05:59,404:INFO:Preloading libraries
2025-09-27 19:05:59,417:INFO:Copying training dataset
2025-09-27 19:05:59,417:INFO:Plot type: feature
2025-09-27 19:05:59,418:WARNING:No coef_ found. Trying feature_importances_
2025-09-27 19:05:59,717:INFO:Visual Rendered Successfully
2025-09-27 19:05:59,912:INFO:plot_model() successfully completed......................................
2025-09-27 19:10:07,459:INFO:Initializing create_model()
2025-09-27 19:10:07,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:07,459:INFO:Checking exceptions
2025-09-27 19:10:07,492:INFO:Importing libraries
2025-09-27 19:10:07,493:INFO:Copying training dataset
2025-09-27 19:10:07,505:INFO:Defining folds
2025-09-27 19:10:07,505:INFO:Declaring metric variables
2025-09-27 19:10:07,513:INFO:Importing untrained model
2025-09-27 19:10:07,520:INFO:Extra Trees Regressor Imported successfully
2025-09-27 19:10:07,538:INFO:Starting cross validation
2025-09-27 19:10:07,543:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:08,037:INFO:Calculating mean and std
2025-09-27 19:10:08,039:INFO:Creating metrics dataframe
2025-09-27 19:10:08,045:INFO:Finalizing model
2025-09-27 19:10:08,252:INFO:Uploading results into container
2025-09-27 19:10:08,252:INFO:Uploading model into container now
2025-09-27 19:10:08,267:INFO:_master_model_container: 21
2025-09-27 19:10:08,267:INFO:_display_container: 3
2025-09-27 19:10:08,268:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:10:08,268:INFO:create_model() successfully completed......................................
2025-09-27 19:10:08,442:INFO:Initializing create_model()
2025-09-27 19:10:08,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:08,442:INFO:Checking exceptions
2025-09-27 19:10:08,465:INFO:Importing libraries
2025-09-27 19:10:08,465:INFO:Copying training dataset
2025-09-27 19:10:08,483:INFO:Defining folds
2025-09-27 19:10:08,483:INFO:Declaring metric variables
2025-09-27 19:10:08,490:INFO:Importing untrained model
2025-09-27 19:10:08,498:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:10:08,516:INFO:Starting cross validation
2025-09-27 19:10:08,520:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:08,738:INFO:Calculating mean and std
2025-09-27 19:10:08,738:INFO:Creating metrics dataframe
2025-09-27 19:10:08,745:INFO:Finalizing model
2025-09-27 19:10:08,819:INFO:Uploading results into container
2025-09-27 19:10:08,819:INFO:Uploading model into container now
2025-09-27 19:10:08,830:INFO:_master_model_container: 22
2025-09-27 19:10:08,830:INFO:_display_container: 4
2025-09-27 19:10:08,830:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:10:08,830:INFO:create_model() successfully completed......................................
2025-09-27 19:10:09,019:INFO:Initializing tune_model()
2025-09-27 19:10:09,019:INFO:tune_model(estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>)
2025-09-27 19:10:09,019:INFO:Checking exceptions
2025-09-27 19:10:09,050:INFO:Copying training dataset
2025-09-27 19:10:09,059:INFO:Checking base model
2025-09-27 19:10:09,060:INFO:Base model : Extra Trees Regressor
2025-09-27 19:10:09,067:INFO:Declaring metric variables
2025-09-27 19:10:09,077:INFO:Defining Hyperparameters
2025-09-27 19:10:09,314:INFO:Tuning with n_jobs=-1
2025-09-27 19:10:09,314:INFO:Initializing RandomizedSearchCV
2025-09-27 19:10:12,443:INFO:best_params: {'actual_estimator__n_estimators': 280, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2025-09-27 19:10:12,443:INFO:Hyperparameter search completed
2025-09-27 19:10:12,443:INFO:SubProcess create_model() called ==================================
2025-09-27 19:10:12,443:INFO:Initializing create_model()
2025-09-27 19:10:12,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FE52C80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 280, 'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 5, 'criterion': 'squared_error', 'bootstrap': True})
2025-09-27 19:10:12,443:INFO:Checking exceptions
2025-09-27 19:10:12,443:INFO:Importing libraries
2025-09-27 19:10:12,443:INFO:Copying training dataset
2025-09-27 19:10:12,453:INFO:Defining folds
2025-09-27 19:10:12,453:INFO:Declaring metric variables
2025-09-27 19:10:12,462:INFO:Importing untrained model
2025-09-27 19:10:12,462:INFO:Declaring custom model
2025-09-27 19:10:12,466:INFO:Extra Trees Regressor Imported successfully
2025-09-27 19:10:12,480:INFO:Starting cross validation
2025-09-27 19:10:12,480:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:13,331:INFO:Calculating mean and std
2025-09-27 19:10:13,333:INFO:Creating metrics dataframe
2025-09-27 19:10:13,339:INFO:Finalizing model
2025-09-27 19:10:13,866:INFO:Uploading results into container
2025-09-27 19:10:13,867:INFO:Uploading model into container now
2025-09-27 19:10:13,867:INFO:_master_model_container: 23
2025-09-27 19:10:13,867:INFO:_display_container: 5
2025-09-27 19:10:13,868:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=5, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=7, n_estimators=280,
                    n_jobs=-1, random_state=42)
2025-09-27 19:10:13,869:INFO:create_model() successfully completed......................................
2025-09-27 19:10:14,044:INFO:SubProcess create_model() end ==================================
2025-09-27 19:10:14,045:INFO:choose_better activated
2025-09-27 19:10:14,049:INFO:SubProcess create_model() called ==================================
2025-09-27 19:10:14,051:INFO:Initializing create_model()
2025-09-27 19:10:14,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:14,052:INFO:Checking exceptions
2025-09-27 19:10:14,054:INFO:Importing libraries
2025-09-27 19:10:14,054:INFO:Copying training dataset
2025-09-27 19:10:14,059:INFO:Defining folds
2025-09-27 19:10:14,060:INFO:Declaring metric variables
2025-09-27 19:10:14,060:INFO:Importing untrained model
2025-09-27 19:10:14,060:INFO:Declaring custom model
2025-09-27 19:10:14,062:INFO:Extra Trees Regressor Imported successfully
2025-09-27 19:10:14,062:INFO:Starting cross validation
2025-09-27 19:10:14,064:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:14,519:INFO:Calculating mean and std
2025-09-27 19:10:14,520:INFO:Creating metrics dataframe
2025-09-27 19:10:14,522:INFO:Finalizing model
2025-09-27 19:10:14,709:INFO:Uploading results into container
2025-09-27 19:10:14,710:INFO:Uploading model into container now
2025-09-27 19:10:14,710:INFO:_master_model_container: 24
2025-09-27 19:10:14,712:INFO:_display_container: 6
2025-09-27 19:10:14,712:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:10:14,713:INFO:create_model() successfully completed......................................
2025-09-27 19:10:14,884:INFO:SubProcess create_model() end ==================================
2025-09-27 19:10:14,885:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42) result for MAE is 57.4717
2025-09-27 19:10:14,886:INFO:ExtraTreesRegressor(bootstrap=True, max_depth=5, min_impurity_decrease=0.01,
                    min_samples_leaf=2, min_samples_split=7, n_estimators=280,
                    n_jobs=-1, random_state=42) result for MAE is 62.4368
2025-09-27 19:10:14,887:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42) is best model
2025-09-27 19:10:14,887:INFO:choose_better completed
2025-09-27 19:10:14,887:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-09-27 19:10:14,902:INFO:_master_model_container: 24
2025-09-27 19:10:14,902:INFO:_display_container: 5
2025-09-27 19:10:14,903:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:10:14,904:INFO:tune_model() successfully completed......................................
2025-09-27 19:10:15,085:INFO:Initializing tune_model()
2025-09-27 19:10:15,085:INFO:tune_model(estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>)
2025-09-27 19:10:15,085:INFO:Checking exceptions
2025-09-27 19:10:15,110:INFO:Copying training dataset
2025-09-27 19:10:15,119:INFO:Checking base model
2025-09-27 19:10:15,119:INFO:Base model : K Neighbors Regressor
2025-09-27 19:10:15,128:INFO:Declaring metric variables
2025-09-27 19:10:15,133:INFO:Defining Hyperparameters
2025-09-27 19:10:15,377:INFO:Tuning with n_jobs=-1
2025-09-27 19:10:15,377:INFO:Initializing RandomizedSearchCV
2025-09-27 19:10:16,240:INFO:best_params: {'actual_estimator__weights': 'distance', 'actual_estimator__n_neighbors': 11, 'actual_estimator__metric': 'euclidean'}
2025-09-27 19:10:16,241:INFO:Hyperparameter search completed
2025-09-27 19:10:16,242:INFO:SubProcess create_model() called ==================================
2025-09-27 19:10:16,243:INFO:Initializing create_model()
2025-09-27 19:10:16,243:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002497FF65CF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'weights': 'distance', 'n_neighbors': 11, 'metric': 'euclidean'})
2025-09-27 19:10:16,243:INFO:Checking exceptions
2025-09-27 19:10:16,243:INFO:Importing libraries
2025-09-27 19:10:16,243:INFO:Copying training dataset
2025-09-27 19:10:16,251:INFO:Defining folds
2025-09-27 19:10:16,251:INFO:Declaring metric variables
2025-09-27 19:10:16,256:INFO:Importing untrained model
2025-09-27 19:10:16,256:INFO:Declaring custom model
2025-09-27 19:10:16,262:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:10:16,275:INFO:Starting cross validation
2025-09-27 19:10:16,278:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:16,439:INFO:Calculating mean and std
2025-09-27 19:10:16,441:INFO:Creating metrics dataframe
2025-09-27 19:10:16,448:INFO:Finalizing model
2025-09-27 19:10:16,520:INFO:Uploading results into container
2025-09-27 19:10:16,521:INFO:Uploading model into container now
2025-09-27 19:10:16,522:INFO:_master_model_container: 25
2025-09-27 19:10:16,522:INFO:_display_container: 6
2025-09-27 19:10:16,523:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')
2025-09-27 19:10:16,523:INFO:create_model() successfully completed......................................
2025-09-27 19:10:16,700:INFO:SubProcess create_model() end ==================================
2025-09-27 19:10:16,700:INFO:choose_better activated
2025-09-27 19:10:16,705:INFO:SubProcess create_model() called ==================================
2025-09-27 19:10:16,706:INFO:Initializing create_model()
2025-09-27 19:10:16,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:16,707:INFO:Checking exceptions
2025-09-27 19:10:16,710:INFO:Importing libraries
2025-09-27 19:10:16,710:INFO:Copying training dataset
2025-09-27 19:10:16,715:INFO:Defining folds
2025-09-27 19:10:16,715:INFO:Declaring metric variables
2025-09-27 19:10:16,715:INFO:Importing untrained model
2025-09-27 19:10:16,715:INFO:Declaring custom model
2025-09-27 19:10:16,716:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:10:16,716:INFO:Starting cross validation
2025-09-27 19:10:16,718:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:16,953:INFO:Calculating mean and std
2025-09-27 19:10:16,954:INFO:Creating metrics dataframe
2025-09-27 19:10:16,956:INFO:Finalizing model
2025-09-27 19:10:17,022:INFO:Uploading results into container
2025-09-27 19:10:17,023:INFO:Uploading model into container now
2025-09-27 19:10:17,023:INFO:_master_model_container: 26
2025-09-27 19:10:17,023:INFO:_display_container: 7
2025-09-27 19:10:17,024:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:10:17,024:INFO:create_model() successfully completed......................................
2025-09-27 19:10:17,197:INFO:SubProcess create_model() end ==================================
2025-09-27 19:10:17,198:INFO:KNeighborsRegressor(n_jobs=-1) result for RMSE is 134.2148
2025-09-27 19:10:17,198:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance') result for RMSE is 127.4316
2025-09-27 19:10:17,199:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance') is best model
2025-09-27 19:10:17,199:INFO:choose_better completed
2025-09-27 19:10:17,213:INFO:_master_model_container: 26
2025-09-27 19:10:17,213:INFO:_display_container: 6
2025-09-27 19:10:17,214:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')
2025-09-27 19:10:17,214:INFO:tune_model() successfully completed......................................
2025-09-27 19:10:17,414:INFO:Initializing evaluate_model()
2025-09-27 19:10:17,414:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-09-27 19:10:17,430:INFO:Initializing plot_model()
2025-09-27 19:10:17,431:INFO:plot_model(plot=pipeline, fold=GroupKFold(n_splits=5), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), feature_name=None, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, system=True)
2025-09-27 19:10:17,431:INFO:Checking exceptions
2025-09-27 19:10:17,484:INFO:Preloading libraries
2025-09-27 19:10:17,500:INFO:Copying training dataset
2025-09-27 19:10:17,500:INFO:Plot type: pipeline
2025-09-27 19:10:17,710:INFO:Visual Rendered Successfully
2025-09-27 19:10:17,895:INFO:plot_model() successfully completed......................................
2025-09-27 19:10:17,901:INFO:Initializing evaluate_model()
2025-09-27 19:10:17,902:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-09-27 19:10:17,923:INFO:Initializing plot_model()
2025-09-27 19:10:17,923:INFO:plot_model(plot=pipeline, fold=GroupKFold(n_splits=5), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance'), feature_name=None, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, system=True)
2025-09-27 19:10:17,924:INFO:Checking exceptions
2025-09-27 19:10:17,928:INFO:Preloading libraries
2025-09-27 19:10:17,928:INFO:Copying training dataset
2025-09-27 19:10:17,930:INFO:Plot type: pipeline
2025-09-27 19:10:18,091:INFO:Visual Rendered Successfully
2025-09-27 19:10:18,267:INFO:plot_model() successfully completed......................................
2025-09-27 19:10:18,273:INFO:Initializing compare_models()
2025-09-27 19:10:18,274:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, include=[ExtraTreesRegressor(n_jobs=-1, random_state=42), KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')], fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, 'include': [ExtraTreesRegressor(n_jobs=-1, random_state=42), KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-09-27 19:10:18,275:INFO:Checking exceptions
2025-09-27 19:10:18,279:INFO:Preparing display monitor
2025-09-27 19:10:18,371:INFO:Initializing custom model Extra Trees Regressor
2025-09-27 19:10:18,371:INFO:Total runtime is 1.6756852467854817e-05 minutes
2025-09-27 19:10:18,383:INFO:SubProcess create_model() called ==================================
2025-09-27 19:10:18,386:INFO:Initializing create_model()
2025-09-27 19:10:18,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FE52B00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:18,386:INFO:Checking exceptions
2025-09-27 19:10:18,387:INFO:Importing libraries
2025-09-27 19:10:18,387:INFO:Copying training dataset
2025-09-27 19:10:18,399:INFO:Defining folds
2025-09-27 19:10:18,399:INFO:Declaring metric variables
2025-09-27 19:10:18,409:INFO:Importing untrained model
2025-09-27 19:10:18,411:INFO:Declaring custom model
2025-09-27 19:10:18,418:INFO:Extra Trees Regressor Imported successfully
2025-09-27 19:10:18,430:INFO:Starting cross validation
2025-09-27 19:10:18,433:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:18,841:INFO:Calculating mean and std
2025-09-27 19:10:18,841:INFO:Creating metrics dataframe
2025-09-27 19:10:18,843:INFO:Uploading results into container
2025-09-27 19:10:18,845:INFO:Uploading model into container now
2025-09-27 19:10:18,846:INFO:_master_model_container: 27
2025-09-27 19:10:18,846:INFO:_display_container: 7
2025-09-27 19:10:18,846:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-09-27 19:10:18,846:INFO:create_model() successfully completed......................................
2025-09-27 19:10:19,026:INFO:SubProcess create_model() end ==================================
2025-09-27 19:10:19,026:INFO:Creating metrics dataframe
2025-09-27 19:10:19,036:INFO:Initializing custom model K Neighbors Regressor
2025-09-27 19:10:19,036:INFO:Total runtime is 0.011098853747049968 minutes
2025-09-27 19:10:19,044:INFO:SubProcess create_model() called ==================================
2025-09-27 19:10:19,046:INFO:Initializing create_model()
2025-09-27 19:10:19,046:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance'), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002493FE52B00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:19,048:INFO:Checking exceptions
2025-09-27 19:10:19,048:INFO:Importing libraries
2025-09-27 19:10:19,048:INFO:Copying training dataset
2025-09-27 19:10:19,053:INFO:Defining folds
2025-09-27 19:10:19,053:INFO:Declaring metric variables
2025-09-27 19:10:19,060:INFO:Importing untrained model
2025-09-27 19:10:19,060:INFO:Declaring custom model
2025-09-27 19:10:19,067:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:10:19,083:INFO:Starting cross validation
2025-09-27 19:10:19,087:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:10:19,307:INFO:Calculating mean and std
2025-09-27 19:10:19,310:INFO:Creating metrics dataframe
2025-09-27 19:10:19,311:INFO:Uploading results into container
2025-09-27 19:10:19,312:INFO:Uploading model into container now
2025-09-27 19:10:19,314:INFO:_master_model_container: 28
2025-09-27 19:10:19,314:INFO:_display_container: 7
2025-09-27 19:10:19,315:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')
2025-09-27 19:10:19,316:INFO:create_model() successfully completed......................................
2025-09-27 19:10:19,478:INFO:SubProcess create_model() end ==================================
2025-09-27 19:10:19,478:INFO:Creating metrics dataframe
2025-09-27 19:10:19,495:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-09-27 19:10:19,511:INFO:Initializing create_model()
2025-09-27 19:10:19,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance'), fold=GroupKFold(n_splits=5), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
71     2020
106    2023
270    2022
435    2021
102    2023
Name: anio, Length: 588, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:19,511:INFO:Checking exceptions
2025-09-27 19:10:19,514:INFO:Importing libraries
2025-09-27 19:10:19,514:INFO:Copying training dataset
2025-09-27 19:10:19,518:INFO:Defining folds
2025-09-27 19:10:19,518:INFO:Declaring metric variables
2025-09-27 19:10:19,518:INFO:Importing untrained model
2025-09-27 19:10:19,518:INFO:Declaring custom model
2025-09-27 19:10:19,520:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:10:19,520:INFO:Cross validation set to False
2025-09-27 19:10:19,520:INFO:Fitting Model
2025-09-27 19:10:19,582:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')
2025-09-27 19:10:19,582:INFO:create_model() successfully completed......................................
2025-09-27 19:10:19,783:INFO:_master_model_container: 28
2025-09-27 19:10:19,783:INFO:_display_container: 7
2025-09-27 19:10:19,783:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')
2025-09-27 19:10:19,785:INFO:compare_models() successfully completed......................................
2025-09-27 19:10:19,786:INFO:Initializing finalize_model()
2025-09-27 19:10:19,786:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-27 19:10:19,786:INFO:Finalizing KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance')
2025-09-27 19:10:19,793:INFO:Initializing create_model()
2025-09-27 19:10:19,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002493F99D4E0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=11,
                    weights='distance'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=396    2023
145    2022
423    2020
234    2024
220    2023
       ... 
235    2024
593    2024
73     2021
583    2023
734    2021
Name: anio, Length: 840, dtype: int64, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:10:19,793:INFO:Checking exceptions
2025-09-27 19:10:19,795:INFO:Importing libraries
2025-09-27 19:10:19,795:INFO:Copying training dataset
2025-09-27 19:10:19,797:INFO:Defining folds
2025-09-27 19:10:19,797:INFO:Declaring metric variables
2025-09-27 19:10:19,798:INFO:Importing untrained model
2025-09-27 19:10:19,798:INFO:Declaring custom model
2025-09-27 19:10:19,798:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:10:19,802:INFO:Cross validation set to False
2025-09-27 19:10:19,802:INFO:Fitting Model
2025-09-27 19:10:19,880:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=11, weights='distance'))])
2025-09-27 19:10:19,880:INFO:create_model() successfully completed......................................
2025-09-27 19:10:20,043:INFO:_master_model_container: 28
2025-09-27 19:10:20,043:INFO:_display_container: 7
2025-09-27 19:10:20,059:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=11, weights='distance'))])
2025-09-27 19:10:20,059:INFO:finalize_model() successfully completed......................................
2025-09-27 19:10:20,254:INFO:Initializing save_model()
2025-09-27 19:10:20,254:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=11, weights='distance'))]), model_name=modelo_temporadas_personas, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-27 19:10:20,254:INFO:Adding model into prep_pipe
2025-09-27 19:10:20,254:WARNING:Only Model saved as it was a pipeline.
2025-09-27 19:10:20,259:INFO:modelo_temporadas_personas.pkl saved in current working directory
2025-09-27 19:10:20,278:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=11, weights='distance'))])
2025-09-27 19:10:20,278:INFO:save_model() successfully completed......................................
2025-09-27 19:16:18,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 19:16:18,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 19:16:18,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 19:16:18,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-27 19:18:07,349:INFO:PyCaret RegressionExperiment
2025-09-27 19:18:07,349:INFO:Logging name: reg-default-name
2025-09-27 19:18:07,349:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-27 19:18:07,349:INFO:version 3.3.2
2025-09-27 19:18:07,349:INFO:Initializing setup()
2025-09-27 19:18:07,349:INFO:self.USI: 304c
2025-09-27 19:18:07,349:INFO:self._variable_keys: {'idx', 'y', 'log_plots_param', 'memory', 'fold_shuffle_param', 'X', 'exp_name_log', 'n_jobs_param', 'logging_param', 'y_test', 'fold_groups_param', 'pipeline', 'exp_id', 'gpu_n_jobs_param', '_available_plots', 'html_param', 'transform_target_param', 'fold_generator', 'y_train', 'X_train', 'gpu_param', '_ml_usecase', 'X_test', 'target_param', 'seed', 'data', 'USI'}
2025-09-27 19:18:07,349:INFO:Checking environment
2025-09-27 19:18:07,349:INFO:python_version: 3.10.18
2025-09-27 19:18:07,349:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-27 19:18:07,349:INFO:machine: AMD64
2025-09-27 19:18:07,349:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-27 19:18:07,351:INFO:Memory: svmem(total=16486035456, available=7172198400, percent=56.5, used=9313837056, free=7172198400)
2025-09-27 19:18:07,351:INFO:Physical Core: 8
2025-09-27 19:18:07,351:INFO:Logical Core: 16
2025-09-27 19:18:07,351:INFO:Checking libraries
2025-09-27 19:18:07,351:INFO:System:
2025-09-27 19:18:07,351:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-27 19:18:07,351:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-27 19:18:07,351:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-27 19:18:07,351:INFO:PyCaret required dependencies:
2025-09-27 19:18:08,967:INFO:                 pip: 25.2
2025-09-27 19:18:08,968:INFO:          setuptools: 78.1.1
2025-09-27 19:18:08,968:INFO:             pycaret: 3.3.2
2025-09-27 19:18:08,968:INFO:             IPython: 8.37.0
2025-09-27 19:18:08,968:INFO:          ipywidgets: 8.1.7
2025-09-27 19:18:08,968:INFO:                tqdm: 4.67.1
2025-09-27 19:18:08,968:INFO:               numpy: 1.26.4
2025-09-27 19:18:08,968:INFO:              pandas: 2.1.4
2025-09-27 19:18:08,968:INFO:              jinja2: 3.1.6
2025-09-27 19:18:08,968:INFO:               scipy: 1.11.4
2025-09-27 19:18:08,968:INFO:              joblib: 1.3.2
2025-09-27 19:18:08,968:INFO:             sklearn: 1.4.2
2025-09-27 19:18:08,968:INFO:                pyod: 2.0.5
2025-09-27 19:18:08,968:INFO:            imblearn: 0.14.0
2025-09-27 19:18:08,968:INFO:   category_encoders: 2.7.0
2025-09-27 19:18:08,968:INFO:            lightgbm: 4.6.0
2025-09-27 19:18:08,968:INFO:               numba: 0.61.0
2025-09-27 19:18:08,968:INFO:            requests: 2.32.5
2025-09-27 19:18:08,969:INFO:          matplotlib: 3.7.5
2025-09-27 19:18:08,969:INFO:          scikitplot: 0.3.7
2025-09-27 19:18:08,969:INFO:         yellowbrick: 1.5
2025-09-27 19:18:08,969:INFO:              plotly: 5.24.1
2025-09-27 19:18:08,969:INFO:    plotly-resampler: Not installed
2025-09-27 19:18:08,969:INFO:             kaleido: 1.1.0
2025-09-27 19:18:08,969:INFO:           schemdraw: 0.15
2025-09-27 19:18:08,969:INFO:         statsmodels: 0.14.5
2025-09-27 19:18:08,969:INFO:              sktime: 0.26.0
2025-09-27 19:18:08,969:INFO:               tbats: 1.1.3
2025-09-27 19:18:08,969:INFO:            pmdarima: 2.0.4
2025-09-27 19:18:08,969:INFO:              psutil: 7.1.0
2025-09-27 19:18:08,970:INFO:          markupsafe: 3.0.2
2025-09-27 19:18:08,970:INFO:             pickle5: Not installed
2025-09-27 19:18:08,970:INFO:         cloudpickle: 3.1.1
2025-09-27 19:18:08,970:INFO:         deprecation: 2.1.0
2025-09-27 19:18:08,970:INFO:              xxhash: 3.5.0
2025-09-27 19:18:08,970:INFO:           wurlitzer: Not installed
2025-09-27 19:18:08,970:INFO:PyCaret optional dependencies:
2025-09-27 19:18:16,344:INFO:                shap: 0.44.1
2025-09-27 19:18:16,344:INFO:           interpret: 0.7.2
2025-09-27 19:18:16,344:INFO:                umap: 0.5.7
2025-09-27 19:18:16,344:INFO:     ydata_profiling: 4.16.1
2025-09-27 19:18:16,345:INFO:  explainerdashboard: 0.5.1
2025-09-27 19:18:16,345:INFO:             autoviz: Not installed
2025-09-27 19:18:16,345:INFO:           fairlearn: 0.7.0
2025-09-27 19:18:16,345:INFO:          deepchecks: Not installed
2025-09-27 19:18:16,345:INFO:             xgboost: 3.0.5
2025-09-27 19:18:16,345:INFO:            catboost: 1.2.8
2025-09-27 19:18:16,345:INFO:              kmodes: 0.12.2
2025-09-27 19:18:16,345:INFO:             mlxtend: 0.23.4
2025-09-27 19:18:16,345:INFO:       statsforecast: 1.5.0
2025-09-27 19:18:16,345:INFO:        tune_sklearn: Not installed
2025-09-27 19:18:16,345:INFO:                 ray: Not installed
2025-09-27 19:18:16,345:INFO:            hyperopt: 0.2.7
2025-09-27 19:18:16,345:INFO:              optuna: 4.5.0
2025-09-27 19:18:16,345:INFO:               skopt: 0.10.2
2025-09-27 19:18:16,345:INFO:              mlflow: 3.4.0
2025-09-27 19:18:16,345:INFO:              gradio: 5.46.1
2025-09-27 19:18:16,345:INFO:             fastapi: 0.117.1
2025-09-27 19:18:16,345:INFO:             uvicorn: 0.36.0
2025-09-27 19:18:16,345:INFO:              m2cgen: 0.10.0
2025-09-27 19:18:16,345:INFO:           evidently: 0.4.40
2025-09-27 19:18:16,345:INFO:               fugue: 0.8.7
2025-09-27 19:18:16,345:INFO:           streamlit: Not installed
2025-09-27 19:18:16,345:INFO:             prophet: Not installed
2025-09-27 19:18:16,345:INFO:None
2025-09-27 19:18:16,345:INFO:Set up data.
2025-09-27 19:18:16,352:INFO:Set up folding strategy.
2025-09-27 19:18:16,352:INFO:Set up train/test split.
2025-09-27 19:18:16,352:INFO:Set up index.
2025-09-27 19:18:16,352:INFO:Assigning column types.
2025-09-27 19:18:16,363:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-27 19:18:16,363:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,371:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,378:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,453:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,519:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,519:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:16,519:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:16,557:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,565:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,573:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,649:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,717:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:16,721:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:16,721:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-27 19:18:16,727:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,734:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,878:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:16,882:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:16,889:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,895:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:18:16,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,043:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,046:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,047:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-27 19:18:17,060:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,200:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,204:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,218:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,299:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,363:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,364:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,371:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,371:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-27 19:18:17,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,521:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,524:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,672:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,673:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,676:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,677:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-27 19:18:17,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,834:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,838:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:18:17,992:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:17,996:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:17,997:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-27 19:18:18,151:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:18,155:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:18,314:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:18,318:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:18,322:INFO:Preparing preprocessing pipeline...
2025-09-27 19:18:18,322:INFO:Set up simple imputation.
2025-09-27 19:18:18,325:INFO:Set up encoding of categorical features.
2025-09-27 19:18:18,325:INFO:Set up removing multicollinearity.
2025-09-27 19:18:18,325:INFO:Set up feature normalization.
2025-09-27 19:18:18,475:INFO:Finished creating preprocessing pipeline.
2025-09-27 19:18:18,488:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero...
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-27 19:18:18,488:INFO:Creating final display dataframe.
2025-09-27 19:18:18,841:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target    personas_total
2                   Target type        Regression
3           Original data shape         (840, 11)
4        Transformed data shape         (840, 18)
5   Transformed train set shape         (588, 18)
6    Transformed test set shape         (252, 18)
7              Numeric features                 7
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold              0.95
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator        GroupKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              304c
2025-09-27 19:18:18,985:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:18,999:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:19,156:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:18:19,160:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:18:19,162:INFO:setup() successfully completed in 11.83s...............
2025-09-27 19:18:19,162:INFO:Initializing create_model()
2025-09-27 19:18:19,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:18:19,162:INFO:Checking exceptions
2025-09-27 19:18:19,194:INFO:Importing libraries
2025-09-27 19:18:19,196:INFO:Copying training dataset
2025-09-27 19:18:19,208:INFO:Defining folds
2025-09-27 19:18:19,208:INFO:Declaring metric variables
2025-09-27 19:18:19,217:INFO:Importing untrained model
2025-09-27 19:18:19,227:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:18:19,249:INFO:Starting cross validation
2025-09-27 19:18:19,311:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:18:27,859:INFO:Calculating mean and std
2025-09-27 19:18:27,861:INFO:Creating metrics dataframe
2025-09-27 19:18:27,874:INFO:Finalizing model
2025-09-27 19:18:27,978:INFO:Uploading results into container
2025-09-27 19:18:27,979:INFO:Uploading model into container now
2025-09-27 19:18:27,992:INFO:_master_model_container: 1
2025-09-27 19:18:27,992:INFO:_display_container: 2
2025-09-27 19:18:27,993:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:18:27,993:INFO:create_model() successfully completed......................................
2025-09-27 19:18:28,169:INFO:Initializing tune_model()
2025-09-27 19:18:28,169:INFO:tune_model(estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>)
2025-09-27 19:18:28,169:INFO:Checking exceptions
2025-09-27 19:18:28,197:INFO:Copying training dataset
2025-09-27 19:18:28,205:INFO:Checking base model
2025-09-27 19:18:28,205:INFO:Base model : K Neighbors Regressor
2025-09-27 19:18:28,214:INFO:Declaring metric variables
2025-09-27 19:18:28,222:INFO:Defining Hyperparameters
2025-09-27 19:18:28,417:INFO:Tuning with n_jobs=-1
2025-09-27 19:18:28,417:INFO:Initializing RandomizedSearchCV
2025-09-27 19:18:38,442:INFO:best_params: {'actual_estimator__weights': 'uniform', 'actual_estimator__n_neighbors': 8, 'actual_estimator__metric': 'manhattan'}
2025-09-27 19:18:38,442:INFO:Hyperparameter search completed
2025-09-27 19:18:38,442:INFO:SubProcess create_model() called ==================================
2025-09-27 19:18:38,450:INFO:Initializing create_model()
2025-09-27 19:18:38,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
364    2020
548    2020
320    2021
631    2022
308    2020
Name: anio, Length: 588, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FA0E5C400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'weights': 'uniform', 'n_neighbors': 8, 'metric': 'manhattan'})
2025-09-27 19:18:38,451:INFO:Checking exceptions
2025-09-27 19:18:38,451:INFO:Importing libraries
2025-09-27 19:18:38,451:INFO:Copying training dataset
2025-09-27 19:18:38,462:INFO:Defining folds
2025-09-27 19:18:38,462:INFO:Declaring metric variables
2025-09-27 19:18:38,472:INFO:Importing untrained model
2025-09-27 19:18:38,472:INFO:Declaring custom model
2025-09-27 19:18:38,480:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:18:38,501:INFO:Starting cross validation
2025-09-27 19:18:38,503:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:18:38,714:INFO:Calculating mean and std
2025-09-27 19:18:38,716:INFO:Creating metrics dataframe
2025-09-27 19:18:38,723:INFO:Finalizing model
2025-09-27 19:18:38,818:INFO:Uploading results into container
2025-09-27 19:18:38,820:INFO:Uploading model into container now
2025-09-27 19:18:38,821:INFO:_master_model_container: 2
2025-09-27 19:18:38,821:INFO:_display_container: 3
2025-09-27 19:18:38,822:INFO:KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8)
2025-09-27 19:18:38,822:INFO:create_model() successfully completed......................................
2025-09-27 19:18:39,003:INFO:SubProcess create_model() end ==================================
2025-09-27 19:18:39,003:INFO:choose_better activated
2025-09-27 19:18:39,008:INFO:SubProcess create_model() called ==================================
2025-09-27 19:18:39,010:INFO:Initializing create_model()
2025-09-27 19:18:39,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
364    2020
548    2020
320    2021
631    2022
308    2020
Name: anio, Length: 588, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:18:39,010:INFO:Checking exceptions
2025-09-27 19:18:39,013:INFO:Importing libraries
2025-09-27 19:18:39,013:INFO:Copying training dataset
2025-09-27 19:18:39,020:INFO:Defining folds
2025-09-27 19:18:39,020:INFO:Declaring metric variables
2025-09-27 19:18:39,020:INFO:Importing untrained model
2025-09-27 19:18:39,020:INFO:Declaring custom model
2025-09-27 19:18:39,021:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:18:39,021:INFO:Starting cross validation
2025-09-27 19:18:39,023:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:18:39,278:INFO:Calculating mean and std
2025-09-27 19:18:39,279:INFO:Creating metrics dataframe
2025-09-27 19:18:39,281:INFO:Finalizing model
2025-09-27 19:18:39,357:INFO:Uploading results into container
2025-09-27 19:18:39,358:INFO:Uploading model into container now
2025-09-27 19:18:39,358:INFO:_master_model_container: 3
2025-09-27 19:18:39,358:INFO:_display_container: 4
2025-09-27 19:18:39,358:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:18:39,358:INFO:create_model() successfully completed......................................
2025-09-27 19:18:39,533:INFO:SubProcess create_model() end ==================================
2025-09-27 19:18:39,534:INFO:KNeighborsRegressor(n_jobs=-1) result for MAE is 82.4737
2025-09-27 19:18:39,535:INFO:KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8) result for MAE is 76.3279
2025-09-27 19:18:39,535:INFO:KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8) is best model
2025-09-27 19:18:39,535:INFO:choose_better completed
2025-09-27 19:18:39,550:INFO:_master_model_container: 3
2025-09-27 19:18:39,551:INFO:_display_container: 3
2025-09-27 19:18:39,551:INFO:KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8)
2025-09-27 19:18:39,551:INFO:tune_model() successfully completed......................................
2025-09-27 19:18:39,739:INFO:Initializing plot_model()
2025-09-27 19:18:39,739:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, system=True)
2025-09-27 19:18:39,740:INFO:Checking exceptions
2025-09-27 19:18:39,746:INFO:Preloading libraries
2025-09-27 19:18:39,747:INFO:Copying training dataset
2025-09-27 19:18:39,747:INFO:Plot type: residuals
2025-09-27 19:18:40,172:INFO:Fitting Model
2025-09-27 19:18:40,172:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names

2025-09-27 19:18:40,442:INFO:Scoring test/hold-out set
2025-09-27 19:18:41,070:INFO:Visual Rendered Successfully
2025-09-27 19:18:41,260:INFO:plot_model() successfully completed......................................
2025-09-27 19:18:41,266:INFO:Initializing plot_model()
2025-09-27 19:18:41,268:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, system=True)
2025-09-27 19:18:41,268:INFO:Checking exceptions
2025-09-27 19:18:41,274:INFO:Preloading libraries
2025-09-27 19:18:41,275:INFO:Copying training dataset
2025-09-27 19:18:41,275:INFO:Plot type: error
2025-09-27 19:18:41,655:INFO:Fitting Model
2025-09-27 19:18:41,656:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names

2025-09-27 19:18:41,656:INFO:Scoring test/hold-out set
2025-09-27 19:18:41,958:INFO:Visual Rendered Successfully
2025-09-27 19:18:42,137:INFO:plot_model() successfully completed......................................
2025-09-27 19:18:42,143:INFO:Initializing finalize_model()
2025-09-27 19:18:42,143:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, estimator=KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-27 19:18:42,143:INFO:Finalizing KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8)
2025-09-27 19:18:42,149:INFO:Initializing create_model()
2025-09-27 19:18:42,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, estimator=KNeighborsRegressor(metric='manhattan', n_jobs=-1, n_neighbors=8), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
615    2021
522    2023
484    2020
401    2023
351    2024
Name: anio, Length: 840, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:18:42,149:INFO:Checking exceptions
2025-09-27 19:18:42,151:INFO:Importing libraries
2025-09-27 19:18:42,151:INFO:Copying training dataset
2025-09-27 19:18:42,151:INFO:Defining folds
2025-09-27 19:18:42,151:INFO:Declaring metric variables
2025-09-27 19:18:42,151:INFO:Importing untrained model
2025-09-27 19:18:42,151:INFO:Declaring custom model
2025-09-27 19:18:42,151:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:18:42,151:INFO:Cross validation set to False
2025-09-27 19:18:42,151:INFO:Fitting Model
2025-09-27 19:18:42,271:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=8))])
2025-09-27 19:18:42,271:INFO:create_model() successfully completed......................................
2025-09-27 19:18:42,469:INFO:_master_model_container: 3
2025-09-27 19:18:42,469:INFO:_display_container: 3
2025-09-27 19:18:42,484:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=8))])
2025-09-27 19:18:42,486:INFO:finalize_model() successfully completed......................................
2025-09-27 19:18:42,707:INFO:Initializing save_model()
2025-09-27 19:18:42,707:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=8))]), model_name=modelo_knn_temporadas_personas, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero...
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-27 19:18:42,707:INFO:Adding model into prep_pipe
2025-09-27 19:18:42,707:WARNING:Only Model saved as it was a pipeline.
2025-09-27 19:18:42,718:INFO:modelo_knn_temporadas_personas.pkl saved in current working directory
2025-09-27 19:18:42,735:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=8))])
2025-09-27 19:18:42,735:INFO:save_model() successfully completed......................................
2025-09-27 19:18:42,945:INFO:Initializing predict_model()
2025-09-27 19:18:42,945:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE5ED5C00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='manhattan', n_jobs=-1,
                                     n_neighbors=8))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017FF25B0040>)
2025-09-27 19:18:42,945:INFO:Checking exceptions
2025-09-27 19:18:42,945:INFO:Preloading libraries
2025-09-27 19:18:42,949:INFO:Set up data.
2025-09-27 19:18:42,957:INFO:Set up index.
2025-09-27 19:28:49,719:INFO:PyCaret RegressionExperiment
2025-09-27 19:28:49,719:INFO:Logging name: reg-default-name
2025-09-27 19:28:49,719:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-27 19:28:49,719:INFO:version 3.3.2
2025-09-27 19:28:49,719:INFO:Initializing setup()
2025-09-27 19:28:49,719:INFO:self.USI: 18aa
2025-09-27 19:28:49,719:INFO:self._variable_keys: {'idx', 'y', 'log_plots_param', 'memory', 'fold_shuffle_param', 'X', 'exp_name_log', 'n_jobs_param', 'logging_param', 'y_test', 'fold_groups_param', 'pipeline', 'exp_id', 'gpu_n_jobs_param', '_available_plots', 'html_param', 'transform_target_param', 'fold_generator', 'y_train', 'X_train', 'gpu_param', '_ml_usecase', 'X_test', 'target_param', 'seed', 'data', 'USI'}
2025-09-27 19:28:49,719:INFO:Checking environment
2025-09-27 19:28:49,719:INFO:python_version: 3.10.18
2025-09-27 19:28:49,719:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-27 19:28:49,719:INFO:machine: AMD64
2025-09-27 19:28:49,719:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-27 19:28:49,721:INFO:Memory: svmem(total=16486035456, available=7113392128, percent=56.9, used=9372643328, free=7113392128)
2025-09-27 19:28:49,721:INFO:Physical Core: 8
2025-09-27 19:28:49,721:INFO:Logical Core: 16
2025-09-27 19:28:49,721:INFO:Checking libraries
2025-09-27 19:28:49,721:INFO:System:
2025-09-27 19:28:49,721:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-27 19:28:49,721:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-27 19:28:49,721:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-27 19:28:49,721:INFO:PyCaret required dependencies:
2025-09-27 19:28:49,721:INFO:                 pip: 25.2
2025-09-27 19:28:49,721:INFO:          setuptools: 78.1.1
2025-09-27 19:28:49,721:INFO:             pycaret: 3.3.2
2025-09-27 19:28:49,721:INFO:             IPython: 8.37.0
2025-09-27 19:28:49,721:INFO:          ipywidgets: 8.1.7
2025-09-27 19:28:49,721:INFO:                tqdm: 4.67.1
2025-09-27 19:28:49,721:INFO:               numpy: 1.26.4
2025-09-27 19:28:49,722:INFO:              pandas: 2.1.4
2025-09-27 19:28:49,722:INFO:              jinja2: 3.1.6
2025-09-27 19:28:49,722:INFO:               scipy: 1.11.4
2025-09-27 19:28:49,722:INFO:              joblib: 1.3.2
2025-09-27 19:28:49,722:INFO:             sklearn: 1.4.2
2025-09-27 19:28:49,722:INFO:                pyod: 2.0.5
2025-09-27 19:28:49,722:INFO:            imblearn: 0.14.0
2025-09-27 19:28:49,722:INFO:   category_encoders: 2.7.0
2025-09-27 19:28:49,722:INFO:            lightgbm: 4.6.0
2025-09-27 19:28:49,722:INFO:               numba: 0.61.0
2025-09-27 19:28:49,722:INFO:            requests: 2.32.5
2025-09-27 19:28:49,722:INFO:          matplotlib: 3.7.5
2025-09-27 19:28:49,722:INFO:          scikitplot: 0.3.7
2025-09-27 19:28:49,722:INFO:         yellowbrick: 1.5
2025-09-27 19:28:49,722:INFO:              plotly: 5.24.1
2025-09-27 19:28:49,722:INFO:    plotly-resampler: Not installed
2025-09-27 19:28:49,722:INFO:             kaleido: 1.1.0
2025-09-27 19:28:49,722:INFO:           schemdraw: 0.15
2025-09-27 19:28:49,722:INFO:         statsmodels: 0.14.5
2025-09-27 19:28:49,722:INFO:              sktime: 0.26.0
2025-09-27 19:28:49,723:INFO:               tbats: 1.1.3
2025-09-27 19:28:49,723:INFO:            pmdarima: 2.0.4
2025-09-27 19:28:49,723:INFO:              psutil: 7.1.0
2025-09-27 19:28:49,723:INFO:          markupsafe: 3.0.2
2025-09-27 19:28:49,723:INFO:             pickle5: Not installed
2025-09-27 19:28:49,723:INFO:         cloudpickle: 3.1.1
2025-09-27 19:28:49,723:INFO:         deprecation: 2.1.0
2025-09-27 19:28:49,723:INFO:              xxhash: 3.5.0
2025-09-27 19:28:49,723:INFO:           wurlitzer: Not installed
2025-09-27 19:28:49,723:INFO:PyCaret optional dependencies:
2025-09-27 19:28:49,723:INFO:                shap: 0.44.1
2025-09-27 19:28:49,723:INFO:           interpret: 0.7.2
2025-09-27 19:28:49,723:INFO:                umap: 0.5.7
2025-09-27 19:28:49,723:INFO:     ydata_profiling: 4.16.1
2025-09-27 19:28:49,723:INFO:  explainerdashboard: 0.5.1
2025-09-27 19:28:49,723:INFO:             autoviz: Not installed
2025-09-27 19:28:49,723:INFO:           fairlearn: 0.7.0
2025-09-27 19:28:49,724:INFO:          deepchecks: Not installed
2025-09-27 19:28:49,724:INFO:             xgboost: 3.0.5
2025-09-27 19:28:49,724:INFO:            catboost: 1.2.8
2025-09-27 19:28:49,724:INFO:              kmodes: 0.12.2
2025-09-27 19:28:49,724:INFO:             mlxtend: 0.23.4
2025-09-27 19:28:49,724:INFO:       statsforecast: 1.5.0
2025-09-27 19:28:49,724:INFO:        tune_sklearn: Not installed
2025-09-27 19:28:49,724:INFO:                 ray: Not installed
2025-09-27 19:28:49,724:INFO:            hyperopt: 0.2.7
2025-09-27 19:28:49,724:INFO:              optuna: 4.5.0
2025-09-27 19:28:49,724:INFO:               skopt: 0.10.2
2025-09-27 19:28:49,724:INFO:              mlflow: 3.4.0
2025-09-27 19:28:49,724:INFO:              gradio: 5.46.1
2025-09-27 19:28:49,724:INFO:             fastapi: 0.117.1
2025-09-27 19:28:49,724:INFO:             uvicorn: 0.36.0
2025-09-27 19:28:49,724:INFO:              m2cgen: 0.10.0
2025-09-27 19:28:49,724:INFO:           evidently: 0.4.40
2025-09-27 19:28:49,724:INFO:               fugue: 0.8.7
2025-09-27 19:28:49,724:INFO:           streamlit: Not installed
2025-09-27 19:28:49,724:INFO:             prophet: Not installed
2025-09-27 19:28:49,724:INFO:None
2025-09-27 19:28:49,725:INFO:Set up data.
2025-09-27 19:28:49,731:INFO:Set up folding strategy.
2025-09-27 19:28:49,732:INFO:Set up train/test split.
2025-09-27 19:28:49,736:INFO:Set up index.
2025-09-27 19:28:49,736:INFO:Assigning column types.
2025-09-27 19:28:49,741:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-27 19:28:49,742:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,748:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,898:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:49,902:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:49,903:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,910:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:28:49,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,001:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,069:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:50,072:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:50,073:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-27 19:28:50,080:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,087:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,172:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,234:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:50,239:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:50,249:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,258:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,346:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,404:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:50,408:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:50,408:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-27 19:28:50,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,555:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:50,558:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:50,572:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,718:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:50,721:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:50,722:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-27 19:28:50,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:50,874:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:50,877:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:50,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:51,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:28:51,027:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:51,027:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:51,027:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-27 19:28:51,131:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:51,193:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:51,196:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:51,290:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:28:51,353:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:51,353:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:51,353:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-27 19:28:51,512:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:51,512:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:51,674:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:51,679:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:51,679:INFO:Preparing preprocessing pipeline...
2025-09-27 19:28:51,679:INFO:Set up simple imputation.
2025-09-27 19:28:51,679:INFO:Set up encoding of categorical features.
2025-09-27 19:28:51,679:INFO:Set up removing multicollinearity.
2025-09-27 19:28:51,679:INFO:Set up feature normalization.
2025-09-27 19:28:51,817:INFO:Finished creating preprocessing pipeline.
2025-09-27 19:28:51,830:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero...
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-27 19:28:51,831:INFO:Creating final display dataframe.
2025-09-27 19:28:52,172:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target    personas_total
2                   Target type        Regression
3           Original data shape         (840, 11)
4        Transformed data shape         (840, 18)
5   Transformed train set shape         (588, 18)
6    Transformed test set shape         (252, 18)
7              Numeric features                 7
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold              0.95
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator        GroupKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              18aa
2025-09-27 19:28:52,329:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:52,333:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:52,493:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:28:52,494:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:28:52,494:INFO:setup() successfully completed in 2.79s...............
2025-09-27 19:28:52,494:INFO:Initializing create_model()
2025-09-27 19:28:52,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:28:52,494:INFO:Checking exceptions
2025-09-27 19:28:52,526:INFO:Importing libraries
2025-09-27 19:28:52,526:INFO:Copying training dataset
2025-09-27 19:28:52,537:INFO:Defining folds
2025-09-27 19:28:52,540:INFO:Declaring metric variables
2025-09-27 19:28:52,552:INFO:Importing untrained model
2025-09-27 19:28:52,561:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:28:52,586:INFO:Starting cross validation
2025-09-27 19:28:52,591:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:29:01,284:INFO:Calculating mean and std
2025-09-27 19:29:01,287:INFO:Creating metrics dataframe
2025-09-27 19:29:01,301:INFO:Finalizing model
2025-09-27 19:29:01,425:INFO:Uploading results into container
2025-09-27 19:29:01,427:INFO:Uploading model into container now
2025-09-27 19:29:01,441:INFO:_master_model_container: 1
2025-09-27 19:29:01,441:INFO:_display_container: 2
2025-09-27 19:29:01,441:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:29:01,441:INFO:create_model() successfully completed......................................
2025-09-27 19:29:01,621:INFO:Initializing tune_model()
2025-09-27 19:29:01,621:INFO:tune_model(estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>)
2025-09-27 19:29:01,621:INFO:Checking exceptions
2025-09-27 19:29:01,647:INFO:Copying training dataset
2025-09-27 19:29:01,657:INFO:Checking base model
2025-09-27 19:29:01,657:INFO:Base model : K Neighbors Regressor
2025-09-27 19:29:01,671:INFO:Declaring metric variables
2025-09-27 19:29:01,682:INFO:Defining Hyperparameters
2025-09-27 19:29:01,882:INFO:Tuning with n_jobs=-1
2025-09-27 19:29:01,883:INFO:Initializing RandomizedSearchCV
2025-09-27 19:29:11,969:INFO:best_params: {'actual_estimator__weights': 'uniform', 'actual_estimator__n_neighbors': 2, 'actual_estimator__metric': 'euclidean'}
2025-09-27 19:29:11,970:INFO:Hyperparameter search completed
2025-09-27 19:29:11,971:INFO:SubProcess create_model() called ==================================
2025-09-27 19:29:11,973:INFO:Initializing create_model()
2025-09-27 19:29:11,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
364    2020
548    2020
320    2021
631    2022
308    2020
Name: anio, Length: 588, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FE26CD210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'weights': 'uniform', 'n_neighbors': 2, 'metric': 'euclidean'})
2025-09-27 19:29:11,974:INFO:Checking exceptions
2025-09-27 19:29:11,974:INFO:Importing libraries
2025-09-27 19:29:11,974:INFO:Copying training dataset
2025-09-27 19:29:11,986:INFO:Defining folds
2025-09-27 19:29:11,986:INFO:Declaring metric variables
2025-09-27 19:29:11,992:INFO:Importing untrained model
2025-09-27 19:29:11,993:INFO:Declaring custom model
2025-09-27 19:29:12,002:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:29:12,017:INFO:Starting cross validation
2025-09-27 19:29:12,020:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:29:12,262:INFO:Calculating mean and std
2025-09-27 19:29:12,265:INFO:Creating metrics dataframe
2025-09-27 19:29:12,273:INFO:Finalizing model
2025-09-27 19:29:12,362:INFO:Uploading results into container
2025-09-27 19:29:12,363:INFO:Uploading model into container now
2025-09-27 19:29:12,364:INFO:_master_model_container: 2
2025-09-27 19:29:12,364:INFO:_display_container: 3
2025-09-27 19:29:12,365:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2)
2025-09-27 19:29:12,365:INFO:create_model() successfully completed......................................
2025-09-27 19:29:12,541:INFO:SubProcess create_model() end ==================================
2025-09-27 19:29:12,541:INFO:choose_better activated
2025-09-27 19:29:12,546:INFO:SubProcess create_model() called ==================================
2025-09-27 19:29:12,548:INFO:Initializing create_model()
2025-09-27 19:29:12,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
364    2020
548    2020
320    2021
631    2022
308    2020
Name: anio, Length: 588, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:29:12,548:INFO:Checking exceptions
2025-09-27 19:29:12,552:INFO:Importing libraries
2025-09-27 19:29:12,552:INFO:Copying training dataset
2025-09-27 19:29:12,557:INFO:Defining folds
2025-09-27 19:29:12,557:INFO:Declaring metric variables
2025-09-27 19:29:12,557:INFO:Importing untrained model
2025-09-27 19:29:12,557:INFO:Declaring custom model
2025-09-27 19:29:12,558:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:29:12,558:INFO:Starting cross validation
2025-09-27 19:29:12,560:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:29:12,826:INFO:Calculating mean and std
2025-09-27 19:29:12,826:INFO:Creating metrics dataframe
2025-09-27 19:29:12,826:INFO:Finalizing model
2025-09-27 19:29:12,897:INFO:Uploading results into container
2025-09-27 19:29:12,897:INFO:Uploading model into container now
2025-09-27 19:29:12,897:INFO:_master_model_container: 3
2025-09-27 19:29:12,897:INFO:_display_container: 4
2025-09-27 19:29:12,897:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:29:12,897:INFO:create_model() successfully completed......................................
2025-09-27 19:29:13,079:INFO:SubProcess create_model() end ==================================
2025-09-27 19:29:13,079:INFO:KNeighborsRegressor(n_jobs=-1) result for MAE is 158.7013
2025-09-27 19:29:13,079:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2) result for MAE is 113.3778
2025-09-27 19:29:13,079:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2) is best model
2025-09-27 19:29:13,079:INFO:choose_better completed
2025-09-27 19:29:13,094:INFO:_master_model_container: 3
2025-09-27 19:29:13,094:INFO:_display_container: 3
2025-09-27 19:29:13,094:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2)
2025-09-27 19:29:13,094:INFO:tune_model() successfully completed......................................
2025-09-27 19:29:13,280:INFO:Initializing plot_model()
2025-09-27 19:29:13,280:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, system=True)
2025-09-27 19:29:13,280:INFO:Checking exceptions
2025-09-27 19:29:13,288:INFO:Preloading libraries
2025-09-27 19:29:13,288:INFO:Copying training dataset
2025-09-27 19:29:13,288:INFO:Plot type: residuals
2025-09-27 19:29:13,677:INFO:Fitting Model
2025-09-27 19:29:13,677:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names

2025-09-27 19:29:13,765:INFO:Scoring test/hold-out set
2025-09-27 19:29:14,209:INFO:Visual Rendered Successfully
2025-09-27 19:29:14,397:INFO:plot_model() successfully completed......................................
2025-09-27 19:29:14,397:INFO:Initializing plot_model()
2025-09-27 19:29:14,397:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, system=True)
2025-09-27 19:29:14,397:INFO:Checking exceptions
2025-09-27 19:29:14,397:INFO:Preloading libraries
2025-09-27 19:29:14,406:INFO:Copying training dataset
2025-09-27 19:29:14,406:INFO:Plot type: error
2025-09-27 19:29:14,754:INFO:Fitting Model
2025-09-27 19:29:14,754:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names

2025-09-27 19:29:14,754:INFO:Scoring test/hold-out set
2025-09-27 19:29:15,031:INFO:Visual Rendered Successfully
2025-09-27 19:29:15,219:INFO:plot_model() successfully completed......................................
2025-09-27 19:29:15,219:INFO:Initializing finalize_model()
2025-09-27 19:29:15,219:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-27 19:29:15,220:INFO:Finalizing KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2)
2025-09-27 19:29:15,224:INFO:Initializing create_model()
2025-09-27 19:29:15,224:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
615    2021
522    2023
484    2020
401    2023
351    2024
Name: anio, Length: 840, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:29:15,224:INFO:Checking exceptions
2025-09-27 19:29:15,226:INFO:Importing libraries
2025-09-27 19:29:15,226:INFO:Copying training dataset
2025-09-27 19:29:15,227:INFO:Defining folds
2025-09-27 19:29:15,227:INFO:Declaring metric variables
2025-09-27 19:29:15,227:INFO:Importing untrained model
2025-09-27 19:29:15,227:INFO:Declaring custom model
2025-09-27 19:29:15,228:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:29:15,230:INFO:Cross validation set to False
2025-09-27 19:29:15,230:INFO:Fitting Model
2025-09-27 19:29:15,318:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))])
2025-09-27 19:29:15,319:INFO:create_model() successfully completed......................................
2025-09-27 19:29:15,499:INFO:_master_model_container: 3
2025-09-27 19:29:15,499:INFO:_display_container: 3
2025-09-27 19:29:15,515:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))])
2025-09-27 19:29:15,515:INFO:finalize_model() successfully completed......................................
2025-09-27 19:29:15,719:INFO:Initializing save_model()
2025-09-27 19:29:15,719:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))]), model_name=modelo_knn_temporadas_personas, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero...
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-27 19:29:15,719:INFO:Adding model into prep_pipe
2025-09-27 19:29:15,719:WARNING:Only Model saved as it was a pipeline.
2025-09-27 19:29:15,734:INFO:modelo_knn_temporadas_personas.pkl saved in current working directory
2025-09-27 19:29:15,747:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))])
2025-09-27 19:29:15,747:INFO:save_model() successfully completed......................................
2025-09-27 19:29:15,940:INFO:Initializing predict_model()
2025-09-27 19:29:15,940:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE60B11B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017FF25141F0>)
2025-09-27 19:29:15,940:INFO:Checking exceptions
2025-09-27 19:29:15,940:INFO:Preloading libraries
2025-09-27 19:29:15,946:INFO:Set up data.
2025-09-27 19:29:15,952:INFO:Set up index.
2025-09-27 19:32:13,676:INFO:PyCaret RegressionExperiment
2025-09-27 19:32:13,676:INFO:Logging name: reg-default-name
2025-09-27 19:32:13,676:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-27 19:32:13,676:INFO:version 3.3.2
2025-09-27 19:32:13,676:INFO:Initializing setup()
2025-09-27 19:32:13,676:INFO:self.USI: 4fdc
2025-09-27 19:32:13,676:INFO:self._variable_keys: {'idx', 'y', 'log_plots_param', 'memory', 'fold_shuffle_param', 'X', 'exp_name_log', 'n_jobs_param', 'logging_param', 'y_test', 'fold_groups_param', 'pipeline', 'exp_id', 'gpu_n_jobs_param', '_available_plots', 'html_param', 'transform_target_param', 'fold_generator', 'y_train', 'X_train', 'gpu_param', '_ml_usecase', 'X_test', 'target_param', 'seed', 'data', 'USI'}
2025-09-27 19:32:13,676:INFO:Checking environment
2025-09-27 19:32:13,676:INFO:python_version: 3.10.18
2025-09-27 19:32:13,676:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-09-27 19:32:13,676:INFO:machine: AMD64
2025-09-27 19:32:13,676:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-27 19:32:13,676:INFO:Memory: svmem(total=16486035456, available=5089263616, percent=69.1, used=11396771840, free=5089263616)
2025-09-27 19:32:13,676:INFO:Physical Core: 8
2025-09-27 19:32:13,676:INFO:Logical Core: 16
2025-09-27 19:32:13,676:INFO:Checking libraries
2025-09-27 19:32:13,676:INFO:System:
2025-09-27 19:32:13,676:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-09-27 19:32:13,679:INFO:executable: c:\Users\FABIO\anaconda3\envs\hotelIA\python.exe
2025-09-27 19:32:13,679:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-27 19:32:13,679:INFO:PyCaret required dependencies:
2025-09-27 19:32:13,679:INFO:                 pip: 25.2
2025-09-27 19:32:13,679:INFO:          setuptools: 78.1.1
2025-09-27 19:32:13,679:INFO:             pycaret: 3.3.2
2025-09-27 19:32:13,679:INFO:             IPython: 8.37.0
2025-09-27 19:32:13,679:INFO:          ipywidgets: 8.1.7
2025-09-27 19:32:13,679:INFO:                tqdm: 4.67.1
2025-09-27 19:32:13,679:INFO:               numpy: 1.26.4
2025-09-27 19:32:13,679:INFO:              pandas: 2.1.4
2025-09-27 19:32:13,679:INFO:              jinja2: 3.1.6
2025-09-27 19:32:13,680:INFO:               scipy: 1.11.4
2025-09-27 19:32:13,680:INFO:              joblib: 1.3.2
2025-09-27 19:32:13,680:INFO:             sklearn: 1.4.2
2025-09-27 19:32:13,680:INFO:                pyod: 2.0.5
2025-09-27 19:32:13,680:INFO:            imblearn: 0.14.0
2025-09-27 19:32:13,680:INFO:   category_encoders: 2.7.0
2025-09-27 19:32:13,680:INFO:            lightgbm: 4.6.0
2025-09-27 19:32:13,680:INFO:               numba: 0.61.0
2025-09-27 19:32:13,680:INFO:            requests: 2.32.5
2025-09-27 19:32:13,680:INFO:          matplotlib: 3.7.5
2025-09-27 19:32:13,680:INFO:          scikitplot: 0.3.7
2025-09-27 19:32:13,680:INFO:         yellowbrick: 1.5
2025-09-27 19:32:13,680:INFO:              plotly: 5.24.1
2025-09-27 19:32:13,680:INFO:    plotly-resampler: Not installed
2025-09-27 19:32:13,680:INFO:             kaleido: 1.1.0
2025-09-27 19:32:13,680:INFO:           schemdraw: 0.15
2025-09-27 19:32:13,680:INFO:         statsmodels: 0.14.5
2025-09-27 19:32:13,680:INFO:              sktime: 0.26.0
2025-09-27 19:32:13,680:INFO:               tbats: 1.1.3
2025-09-27 19:32:13,680:INFO:            pmdarima: 2.0.4
2025-09-27 19:32:13,680:INFO:              psutil: 7.1.0
2025-09-27 19:32:13,681:INFO:          markupsafe: 3.0.2
2025-09-27 19:32:13,681:INFO:             pickle5: Not installed
2025-09-27 19:32:13,681:INFO:         cloudpickle: 3.1.1
2025-09-27 19:32:13,681:INFO:         deprecation: 2.1.0
2025-09-27 19:32:13,681:INFO:              xxhash: 3.5.0
2025-09-27 19:32:13,681:INFO:           wurlitzer: Not installed
2025-09-27 19:32:13,681:INFO:PyCaret optional dependencies:
2025-09-27 19:32:13,681:INFO:                shap: 0.44.1
2025-09-27 19:32:13,681:INFO:           interpret: 0.7.2
2025-09-27 19:32:13,681:INFO:                umap: 0.5.7
2025-09-27 19:32:13,681:INFO:     ydata_profiling: 4.16.1
2025-09-27 19:32:13,681:INFO:  explainerdashboard: 0.5.1
2025-09-27 19:32:13,681:INFO:             autoviz: Not installed
2025-09-27 19:32:13,681:INFO:           fairlearn: 0.7.0
2025-09-27 19:32:13,681:INFO:          deepchecks: Not installed
2025-09-27 19:32:13,681:INFO:             xgboost: 3.0.5
2025-09-27 19:32:13,681:INFO:            catboost: 1.2.8
2025-09-27 19:32:13,681:INFO:              kmodes: 0.12.2
2025-09-27 19:32:13,681:INFO:             mlxtend: 0.23.4
2025-09-27 19:32:13,681:INFO:       statsforecast: 1.5.0
2025-09-27 19:32:13,681:INFO:        tune_sklearn: Not installed
2025-09-27 19:32:13,681:INFO:                 ray: Not installed
2025-09-27 19:32:13,681:INFO:            hyperopt: 0.2.7
2025-09-27 19:32:13,681:INFO:              optuna: 4.5.0
2025-09-27 19:32:13,681:INFO:               skopt: 0.10.2
2025-09-27 19:32:13,681:INFO:              mlflow: 3.4.0
2025-09-27 19:32:13,681:INFO:              gradio: 5.46.1
2025-09-27 19:32:13,681:INFO:             fastapi: 0.117.1
2025-09-27 19:32:13,681:INFO:             uvicorn: 0.36.0
2025-09-27 19:32:13,681:INFO:              m2cgen: 0.10.0
2025-09-27 19:32:13,681:INFO:           evidently: 0.4.40
2025-09-27 19:32:13,681:INFO:               fugue: 0.8.7
2025-09-27 19:32:13,682:INFO:           streamlit: Not installed
2025-09-27 19:32:13,682:INFO:             prophet: Not installed
2025-09-27 19:32:13,682:INFO:None
2025-09-27 19:32:13,682:INFO:Set up data.
2025-09-27 19:32:13,690:INFO:Set up folding strategy.
2025-09-27 19:32:13,690:INFO:Set up train/test split.
2025-09-27 19:32:13,690:INFO:Set up index.
2025-09-27 19:32:13,690:INFO:Assigning column types.
2025-09-27 19:32:13,699:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-27 19:32:13,699:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,704:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,713:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,849:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:13,849:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:13,849:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,861:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,866:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:32:13,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,011:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,014:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,014:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-27 19:32:14,021:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,102:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,168:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,172:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,172:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,184:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,260:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,318:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,321:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,321:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-27 19:32:14,338:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,482:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,488:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,501:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,652:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,658:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,658:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-27 19:32:14,752:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,812:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,814:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,905:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-27 19:32:14,963:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:14,964:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:14,964:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-27 19:32:15,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:15,114:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:15,114:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:15,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-27 19:32:15,263:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:15,264:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:15,264:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-27 19:32:15,416:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:15,416:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:15,571:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:15,580:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:15,580:INFO:Preparing preprocessing pipeline...
2025-09-27 19:32:15,580:INFO:Set up simple imputation.
2025-09-27 19:32:15,580:INFO:Set up encoding of categorical features.
2025-09-27 19:32:15,580:INFO:Set up removing multicollinearity.
2025-09-27 19:32:15,580:INFO:Set up feature normalization.
2025-09-27 19:32:15,722:INFO:Finished creating preprocessing pipeline.
2025-09-27 19:32:15,730:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero...
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-27 19:32:15,730:INFO:Creating final display dataframe.
2025-09-27 19:32:16,082:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target    personas_total
2                   Target type        Regression
3           Original data shape         (840, 11)
4        Transformed data shape         (840, 18)
5   Transformed train set shape         (588, 18)
6    Transformed test set shape         (252, 18)
7              Numeric features                 7
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold              0.95
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator        GroupKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              4fdc
2025-09-27 19:32:16,230:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:16,230:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:16,380:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-27 19:32:16,380:INFO:Soft dependency imported: catboost: 1.2.8
2025-09-27 19:32:16,380:INFO:setup() successfully completed in 2.72s...............
2025-09-27 19:32:16,399:INFO:Initializing create_model()
2025-09-27 19:32:16,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:32:16,399:INFO:Checking exceptions
2025-09-27 19:32:16,431:INFO:Importing libraries
2025-09-27 19:32:16,431:INFO:Copying training dataset
2025-09-27 19:32:16,445:INFO:Defining folds
2025-09-27 19:32:16,445:INFO:Declaring metric variables
2025-09-27 19:32:16,452:INFO:Importing untrained model
2025-09-27 19:32:16,462:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:32:16,479:INFO:Starting cross validation
2025-09-27 19:32:16,483:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:32:16,777:INFO:Calculating mean and std
2025-09-27 19:32:16,777:INFO:Creating metrics dataframe
2025-09-27 19:32:16,784:INFO:Finalizing model
2025-09-27 19:32:16,865:INFO:Uploading results into container
2025-09-27 19:32:16,867:INFO:Uploading model into container now
2025-09-27 19:32:16,880:INFO:_master_model_container: 1
2025-09-27 19:32:16,881:INFO:_display_container: 2
2025-09-27 19:32:16,881:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:32:16,881:INFO:create_model() successfully completed......................................
2025-09-27 19:32:17,068:INFO:Initializing tune_model()
2025-09-27 19:32:17,068:INFO:tune_model(estimator=KNeighborsRegressor(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MAE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>)
2025-09-27 19:32:17,068:INFO:Checking exceptions
2025-09-27 19:32:17,091:INFO:Copying training dataset
2025-09-27 19:32:17,101:INFO:Checking base model
2025-09-27 19:32:17,101:INFO:Base model : K Neighbors Regressor
2025-09-27 19:32:17,110:INFO:Declaring metric variables
2025-09-27 19:32:17,117:INFO:Defining Hyperparameters
2025-09-27 19:32:17,308:INFO:Tuning with n_jobs=-1
2025-09-27 19:32:17,308:INFO:Initializing RandomizedSearchCV
2025-09-27 19:32:18,296:INFO:best_params: {'actual_estimator__weights': 'uniform', 'actual_estimator__n_neighbors': 2, 'actual_estimator__metric': 'euclidean'}
2025-09-27 19:32:18,298:INFO:Hyperparameter search completed
2025-09-27 19:32:18,298:INFO:SubProcess create_model() called ==================================
2025-09-27 19:32:18,299:INFO:Initializing create_model()
2025-09-27 19:32:18,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
364    2020
548    2020
320    2021
631    2022
308    2020
Name: anio, Length: 588, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FE60246D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'weights': 'uniform', 'n_neighbors': 2, 'metric': 'euclidean'})
2025-09-27 19:32:18,299:INFO:Checking exceptions
2025-09-27 19:32:18,299:INFO:Importing libraries
2025-09-27 19:32:18,300:INFO:Copying training dataset
2025-09-27 19:32:18,308:INFO:Defining folds
2025-09-27 19:32:18,308:INFO:Declaring metric variables
2025-09-27 19:32:18,313:INFO:Importing untrained model
2025-09-27 19:32:18,313:INFO:Declaring custom model
2025-09-27 19:32:18,320:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:32:18,331:INFO:Starting cross validation
2025-09-27 19:32:18,334:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:32:18,531:INFO:Calculating mean and std
2025-09-27 19:32:18,534:INFO:Creating metrics dataframe
2025-09-27 19:32:18,544:INFO:Finalizing model
2025-09-27 19:32:18,639:INFO:Uploading results into container
2025-09-27 19:32:18,640:INFO:Uploading model into container now
2025-09-27 19:32:18,641:INFO:_master_model_container: 2
2025-09-27 19:32:18,641:INFO:_display_container: 3
2025-09-27 19:32:18,642:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2)
2025-09-27 19:32:18,642:INFO:create_model() successfully completed......................................
2025-09-27 19:32:18,868:INFO:SubProcess create_model() end ==================================
2025-09-27 19:32:18,868:INFO:choose_better activated
2025-09-27 19:32:18,868:INFO:SubProcess create_model() called ==================================
2025-09-27 19:32:18,868:INFO:Initializing create_model()
2025-09-27 19:32:18,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, estimator=KNeighborsRegressor(n_jobs=-1), fold=GroupKFold(n_splits=5), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
364    2020
548    2020
320    2021
631    2022
308    2020
Name: anio, Length: 588, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:32:18,884:INFO:Checking exceptions
2025-09-27 19:32:18,884:INFO:Importing libraries
2025-09-27 19:32:18,884:INFO:Copying training dataset
2025-09-27 19:32:18,884:INFO:Defining folds
2025-09-27 19:32:18,884:INFO:Declaring metric variables
2025-09-27 19:32:18,884:INFO:Importing untrained model
2025-09-27 19:32:18,884:INFO:Declaring custom model
2025-09-27 19:32:18,884:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:32:18,884:INFO:Starting cross validation
2025-09-27 19:32:18,884:INFO:Cross validating with GroupKFold(n_splits=5), n_jobs=-1
2025-09-27 19:32:19,129:INFO:Calculating mean and std
2025-09-27 19:32:19,129:INFO:Creating metrics dataframe
2025-09-27 19:32:19,129:INFO:Finalizing model
2025-09-27 19:32:19,208:INFO:Uploading results into container
2025-09-27 19:32:19,208:INFO:Uploading model into container now
2025-09-27 19:32:19,208:INFO:_master_model_container: 3
2025-09-27 19:32:19,208:INFO:_display_container: 4
2025-09-27 19:32:19,208:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-27 19:32:19,208:INFO:create_model() successfully completed......................................
2025-09-27 19:32:19,383:INFO:SubProcess create_model() end ==================================
2025-09-27 19:32:19,384:INFO:KNeighborsRegressor(n_jobs=-1) result for MAE is 158.7013
2025-09-27 19:32:19,384:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2) result for MAE is 113.3778
2025-09-27 19:32:19,385:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2) is best model
2025-09-27 19:32:19,385:INFO:choose_better completed
2025-09-27 19:32:19,386:INFO:_master_model_container: 3
2025-09-27 19:32:19,386:INFO:_display_container: 3
2025-09-27 19:32:19,386:INFO:KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2)
2025-09-27 19:32:19,386:INFO:tune_model() successfully completed......................................
2025-09-27 19:32:19,574:INFO:Initializing plot_model()
2025-09-27 19:32:19,574:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, system=True)
2025-09-27 19:32:19,574:INFO:Checking exceptions
2025-09-27 19:32:19,589:INFO:Preloading libraries
2025-09-27 19:32:19,589:INFO:Copying training dataset
2025-09-27 19:32:19,589:INFO:Plot type: residuals
2025-09-27 19:32:19,967:INFO:Fitting Model
2025-09-27 19:32:19,967:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names

2025-09-27 19:32:20,046:INFO:Scoring test/hold-out set
2025-09-27 19:32:20,519:INFO:Visual Rendered Successfully
2025-09-27 19:32:20,696:INFO:plot_model() successfully completed......................................
2025-09-27 19:32:20,696:INFO:Initializing plot_model()
2025-09-27 19:32:20,696:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, system=True)
2025-09-27 19:32:20,696:INFO:Checking exceptions
2025-09-27 19:32:20,696:INFO:Preloading libraries
2025-09-27 19:32:20,696:INFO:Copying training dataset
2025-09-27 19:32:20,696:INFO:Plot type: error
2025-09-27 19:32:21,040:INFO:Fitting Model
2025-09-27 19:32:21,041:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names

2025-09-27 19:32:21,041:INFO:Scoring test/hold-out set
2025-09-27 19:32:21,319:INFO:Visual Rendered Successfully
2025-09-27 19:32:21,503:INFO:plot_model() successfully completed......................................
2025-09-27 19:32:21,504:INFO:Initializing finalize_model()
2025-09-27 19:32:21,504:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-27 19:32:21,504:INFO:Finalizing KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2)
2025-09-27 19:32:21,508:INFO:Initializing create_model()
2025-09-27 19:32:21,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, estimator=KNeighborsRegressor(metric='euclidean', n_jobs=-1, n_neighbors=2), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=207    2022
721    2020
390    2022
555    2021
194    2021
       ... 
615    2021
522    2023
484    2020
401    2023
351    2024
Name: anio, Length: 840, dtype: int32, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-27 19:32:21,508:INFO:Checking exceptions
2025-09-27 19:32:21,510:INFO:Importing libraries
2025-09-27 19:32:21,510:INFO:Copying training dataset
2025-09-27 19:32:21,511:INFO:Defining folds
2025-09-27 19:32:21,511:INFO:Declaring metric variables
2025-09-27 19:32:21,511:INFO:Importing untrained model
2025-09-27 19:32:21,512:INFO:Declaring custom model
2025-09-27 19:32:21,512:INFO:K Neighbors Regressor Imported successfully
2025-09-27 19:32:21,515:INFO:Cross validation set to False
2025-09-27 19:32:21,515:INFO:Fitting Model
2025-09-27 19:32:21,607:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))])
2025-09-27 19:32:21,607:INFO:create_model() successfully completed......................................
2025-09-27 19:32:21,786:INFO:_master_model_container: 3
2025-09-27 19:32:21,786:INFO:_display_container: 3
2025-09-27 19:32:21,800:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))])
2025-09-27 19:32:21,800:INFO:finalize_model() successfully completed......................................
2025-09-27 19:32:22,006:INFO:Initializing save_model()
2025-09-27 19:32:22,006:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))]), model_name=modelo_knn_temporadas_personas, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\FABIO\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero...
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-27 19:32:22,006:INFO:Adding model into prep_pipe
2025-09-27 19:32:22,006:WARNING:Only Model saved as it was a pipeline.
2025-09-27 19:32:22,019:INFO:modelo_knn_temporadas_personas.pkl saved in current working directory
2025-09-27 19:32:22,033:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))])
2025-09-27 19:32:22,033:INFO:save_model() successfully completed......................................
2025-09-27 19:32:22,241:INFO:Initializing predict_model()
2025-09-27 19:32:22,241:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017FE27D0040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['anio', 'duracion_dias',
                                             'mes_inicio', 'es_evento_ciudad',
                                             'es_semana_santa', 'es_navidad',
                                             'es_puente'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['temporada', 'segmento',
                                             'Tipo_viajero'],
                                    transformer=SimpleImputer(strategy='m...
                                    transformer=OneHotEncoder(cols=['temporada',
                                                                    'segmento',
                                                                    'Tipo_viajero'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 KNeighborsRegressor(metric='euclidean', n_jobs=-1,
                                     n_neighbors=2))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017FF25B3AC0>)
2025-09-27 19:32:22,242:INFO:Checking exceptions
2025-09-27 19:32:22,242:INFO:Preloading libraries
2025-09-27 19:32:22,246:INFO:Set up data.
2025-09-27 19:32:22,254:INFO:Set up index.
2025-09-27 19:55:10,713:WARNING:C:\Users\FABIO\AppData\Local\Temp\ipykernel_24060\680384826.py:115: UserWarning: Glyph 11088 (\N{WHITE MEDIUM STAR}) missing from current font.
  plt.tight_layout(); plt.savefig(FIG_OUT, dpi=DPI)

2025-09-27 19:55:11,104:WARNING:c:\Users\FABIO\anaconda3\envs\hotelIA\lib\site-packages\IPython\core\pylabtools.py:170: UserWarning: Glyph 11088 (\N{WHITE MEDIUM STAR}) missing from current font.
  fig.canvas.print_figure(bytes_io, **kw)

